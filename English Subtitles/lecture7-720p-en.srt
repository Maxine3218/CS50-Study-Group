1
00:00:49,910 --> 00:00:51,190
中文字幕
All right.

2
00:00:51,190 --> 00:00:55,060
中文字幕
This CS50 and this is lecture 7 wherein we pick up

3
00:00:55,060 --> 00:00:58,060
中文字幕
where we left off last time in talking more about Python,

4
00:00:58,060 --> 00:01:02,340
中文字幕
but this time using Python for even more powerful purposes,

5
00:01:02,340 --> 00:01:04,980
中文字幕
an alliteration I didn't intend until I just said it there.

6
00:01:04,980 --> 00:01:07,660
中文字幕
But the goal here with Python now is to actually use

7
00:01:07,660 --> 00:01:11,530
中文字幕
this language to generate another language, in particular HTML.

8
00:01:11,530 --> 00:01:15,010
中文字幕
And what we'll do is start to provide all the more of a mental model

9
00:01:15,010 --> 00:01:17,500
中文字幕
for what you would call separation of concerns, whereby

10
00:01:17,500 --> 00:01:21,190
中文字幕
when you design more complicated web based, or rather when you design

11
00:01:21,190 --> 00:01:25,680
中文字幕
more complicated software, you tend to try to adopt certain design patterns so

12
00:01:25,680 --> 00:01:28,180
中文字幕
that you're not just writing everything in one big file that

13
00:01:28,180 --> 00:01:31,990
中文字幕
gets a little confusing, unwieldy to maintain and to add to over time.

14
00:01:31,990 --> 00:01:34,930
中文字幕
But you start to separate your concerns, and your functionality,

15
00:01:34,930 --> 00:01:36,970
中文字幕
and your features, and your collaborators' work

16
00:01:36,970 --> 00:01:39,080
中文字幕
into different files and different methodologies.

17
00:01:39,080 --> 00:01:42,130
中文字幕
So we'll try to give you some of these industry standard approaches today

18
00:01:42,130 --> 00:01:43,840
中文字幕
and why they actually solved problems.

19
00:01:43,840 --> 00:01:45,340
中文字幕
But, of course, how did we get here?

20
00:01:45,340 --> 00:01:46,920
中文字幕
A few weeks ago, we talked about this thing,

21
00:01:46,920 --> 00:01:48,910
中文字幕
this virtual envelope that just represents

22
00:01:48,910 --> 00:01:52,600
中文字幕
packets of information, zeros and ones, going across the internet from point A

23
00:01:52,600 --> 00:01:55,120
中文字幕
to point B. And among the messages in these envelopes

24
00:01:55,120 --> 00:01:56,440
中文字幕
might be for web requests.

25
00:01:56,440 --> 00:02:00,910
中文字幕
And we talked about HTTP, a protocol, hypertext transfer protocol,

26
00:02:00,910 --> 00:02:03,910
中文字幕
that just sends message like this inside of the envelope.

27
00:02:03,910 --> 00:02:06,100
中文字幕
And this is requesting, of course, the default page

28
00:02:06,100 --> 00:02:08,110
中文字幕
of a website as implied by the slash.

29
00:02:08,110 --> 00:02:11,030
中文字幕
And in many cases, but not always, this implies

30
00:02:11,030 --> 00:02:13,270
中文字幕
a default file name of index.html.

31
00:02:13,270 --> 00:02:16,540
中文字幕
But that's a human convention, not a requirement.

32
00:02:16,540 --> 00:02:20,840
中文字幕
Hopefully, the server responds with a numeric code equal to what integer?

33
00:02:23,480 --> 00:02:26,220
中文字幕
200, hopefully, a number that we never actually

34
00:02:26,220 --> 00:02:28,140
中文字幕
really see unless you get more comfortable

35
00:02:28,140 --> 00:02:30,430
中文字幕
and start poking around Chrome's inspector

36
00:02:30,430 --> 00:02:31,980
中文字幕
and you look at your network traffic.

37
00:02:31,980 --> 00:02:32,470
中文字幕
Right.

38
00:02:32,470 --> 00:02:34,780
中文字幕
So here is an actual successful response,

39
00:02:34,780 --> 00:02:36,720
中文字幕
which means everything is indeed OK.

40
00:02:36,720 --> 00:02:40,070
中文字幕
And if the browser looks a little farther down in the virtual envelope,

41
00:02:40,070 --> 00:02:43,950
中文字幕
if you will, it will see another language called HTML, HyperText Markup

42
00:02:43,950 --> 00:02:46,660
中文字幕
Language, which is the stuff we wrote a couple of weeks ago

43
00:02:46,660 --> 00:02:51,240
中文字幕
and you'll continue writing this week as you now dynamically generate websites.

44
00:02:51,240 --> 00:02:55,200
中文字幕
But what we'll introduce today is what's also known as a framework,

45
00:02:55,200 --> 00:02:58,920
中文字幕
or, more precisely, a microframework, because we'll see in just a few minutes

46
00:02:58,920 --> 00:03:02,090
中文字幕
time that it can actually be really annoying and really tedious

47
00:03:02,090 --> 00:03:05,490
中文字幕
to generate websites automatically using Python

48
00:03:05,490 --> 00:03:07,890
中文字幕
if you have to write Python code alone.

49
00:03:07,890 --> 00:03:09,750
中文字幕
And so humans, over the past several years,

50
00:03:09,750 --> 00:03:13,470
中文字幕
have noticed, wow, every time I make a web application using Python,

51
00:03:13,470 --> 00:03:15,690
中文字幕
I find myself typing the same lines of code

52
00:03:15,690 --> 00:03:18,980
中文字幕
again and again just to get started, or when I'm collaborating with someone

53
00:03:18,980 --> 00:03:21,360
中文字幕
else, I find that, ooh, it's a little hard to collaborate

54
00:03:21,360 --> 00:03:23,370
中文字幕
if we're all working in the same file.

55
00:03:23,370 --> 00:03:25,650
中文字幕
So humans have invented what are called frameworks.

56
00:03:25,650 --> 00:03:29,040
中文字幕
And this is an example of code written in Python

57
00:03:29,040 --> 00:03:31,530
中文字幕
but using a framework called Flask.

58
00:03:31,530 --> 00:03:34,740
中文字幕
So whereas Bootstrap, which you've played with a little bit,

59
00:03:34,740 --> 00:03:38,640
中文字幕
is a framework for CSS and JavaScript, they have some dynamic features

60
00:03:38,640 --> 00:03:42,000
中文字幕
as well, Flask is a framework for Python that

61
00:03:42,000 --> 00:03:45,480
中文字幕
just gives you some library code that you can use freely

62
00:03:45,480 --> 00:03:46,950
中文字幕
in your own applications.

63
00:03:46,950 --> 00:03:50,490
中文字幕
And it just makes it, ultimately, a little easier to get your work done

64
00:03:50,490 --> 00:03:52,620
中文字幕
and build the thing you want to build as opposed

65
00:03:52,620 --> 00:03:57,540
中文字幕
to having to reinvent the wheel again and again like people before you.

66
00:03:57,540 --> 00:04:01,680
中文字幕
And so here is a methodology to which I alluded earlier just to have

67
00:04:01,680 --> 00:04:03,480
中文字幕
a mental model for the coming weeks.

68
00:04:03,480 --> 00:04:05,850
中文字幕
So up until now, pretty much every program

69
00:04:05,850 --> 00:04:09,660
中文字幕
we've written in C and most recently in Python

70
00:04:09,660 --> 00:04:14,110
中文字幕
you could call like controller code or controller logic or business logic.

71
00:04:14,110 --> 00:04:14,610
中文字幕
Right.

72
00:04:14,610 --> 00:04:16,980
中文字幕
It's all about getting something done logically,

73
00:04:16,980 --> 00:04:21,360
中文字幕
usually in one file, maybe two files if you have another helpers.ce or header

74
00:04:21,360 --> 00:04:22,710
中文字幕
file or whatnot.

75
00:04:22,710 --> 00:04:24,120
中文字幕
But we've been writing logic.

76
00:04:24,120 --> 00:04:26,940
中文字幕
But today and two weeks ago when we will focus

77
00:04:26,940 --> 00:04:31,060
中文字幕
on web programming in HTML and CSS, there's the second part of our world.

78
00:04:31,060 --> 00:04:34,380
中文字幕
There's like the logic that gets the interesting work done with loops,

79
00:04:34,380 --> 00:04:35,850
中文字幕
and conditions, and all that.

80
00:04:35,850 --> 00:04:37,980
中文字幕
But there's also now going to be the aesthetics,

81
00:04:37,980 --> 00:04:42,390
中文字幕
the stuff that the user actually sees and the way you present your data.

82
00:04:42,390 --> 00:04:45,300
中文字幕
So we're going to just introduce two letters of an acronym

83
00:04:45,300 --> 00:04:46,670
中文字幕
today moving forward.

84
00:04:46,670 --> 00:04:49,590
中文字幕
Anytime you start writing logical code in Python,

85
00:04:49,590 --> 00:04:51,480
中文字幕
it's going to be called your controller.

86
00:04:51,480 --> 00:04:55,200
中文字幕
It's sort of like the machine that operates your entire web application,

87
00:04:55,200 --> 00:04:57,180
中文字幕
but anytime you do something more aesthetic,

88
00:04:57,180 --> 00:05:01,470
中文字幕
we're going to call that your view code, so C and V being the letters here.

89
00:05:01,470 --> 00:05:03,900
中文字幕
And this just refers to a separation of concerns.

90
00:05:03,900 --> 00:05:05,340
中文字幕
Your logic goes in this file.

91
00:05:05,340 --> 00:05:08,160
中文字幕
And your aesthetics and formatting go in this other file.

92
00:05:08,160 --> 00:05:12,090
中文字幕
Next week, we'll introduce databases in SQL, structured query language.

93
00:05:12,090 --> 00:05:15,230
中文字幕
And we'll introduce an M here, because the acronym that's

94
00:05:15,230 --> 00:05:18,060
中文字幕
in vogue for quite some time now is MVC, though there

95
00:05:18,060 --> 00:05:19,770
中文字幕
are alternatives to this mental model.

96
00:05:19,770 --> 00:05:21,600
中文字幕
And that just means there are three different types

97
00:05:21,600 --> 00:05:24,430
中文字幕
of things you should be thinking about when building an application.

98
00:05:24,430 --> 00:05:27,180
中文字幕
But today we're going to focus on these two, controller and view.

99
00:05:27,180 --> 00:05:30,840
中文字幕
And up until now, we've pretty much been doing entirely controller stuff

100
00:05:30,840 --> 00:05:32,130
中文字幕
when writing code.

101
00:05:32,130 --> 00:05:35,940
中文字幕
So the motivation, ultimately, will be to get to the point of building,

102
00:05:35,940 --> 00:05:39,540
中文字幕
essentially, this, the freshman intramural sports website,

103
00:05:39,540 --> 00:05:44,400
中文字幕
which I was the first one to make back in 1996 as a sophomore,

104
00:05:44,400 --> 00:05:48,120
中文字幕
maybe 1997 as a junior, after having only taken CS50 and a follow

105
00:05:48,120 --> 00:05:49,590
中文字幕
on class CS51.

106
00:05:49,590 --> 00:05:54,120
中文字幕
And even though this is horrifying to see nowadays, underneath the hood

107
00:05:54,120 --> 00:05:57,650
中文字幕
was a whole bunch of controller logic and a whole bunch of model code,

108
00:05:57,650 --> 00:06:00,060
中文字幕
even though I don't think MVC existed as an acronym

109
00:06:00,060 --> 00:06:02,680
中文字幕
back then till humans figured out the pattern.

110
00:06:02,680 --> 00:06:06,400
中文字幕
But what it did have via the menu up here was a whole lot of functionality.

111
00:06:06,400 --> 00:06:09,390
中文字幕
So no longer did you have to walk across campus filling out a form

112
00:06:09,390 --> 00:06:13,080
中文字幕
and drop off a sheet of paper in an RA or a proctor's dorm room.

113
00:06:13,080 --> 00:06:16,320
中文字幕
You can instead just go on the web, which all of us surely take for granted

114
00:06:16,320 --> 00:06:18,390
中文字幕
today, fill out a web-based form.

115
00:06:18,390 --> 00:06:22,020
中文字幕
And then at the time, the proctor in charge of froshims

116
00:06:22,020 --> 00:06:25,380
中文字幕
would get an email confirming who had actually registered for a sport.

117
00:06:25,380 --> 00:06:28,130
中文字幕
And eventually we added CSV files, comma separated values

118
00:06:28,130 --> 00:06:30,560
中文字幕
files like spreadsheets, in which the data was saved.

119
00:06:30,560 --> 00:06:32,190
中文字幕
Then we had this really cool tournament bracket

120
00:06:32,190 --> 00:06:35,100
中文字幕
thing, which was all very dynamic and impressive I'm sure at the time.

121
00:06:35,100 --> 00:06:38,410
中文字幕
But we'll focus on really just the fundamentals today.

122
00:06:38,410 --> 00:06:39,520
中文字幕
So how do we get there?

123
00:06:39,520 --> 00:06:42,120
中文字幕
Well, let me go ahead and open up CS50 IDE

124
00:06:42,120 --> 00:06:46,080
中文字幕
and propose that if we want to make a website, a web

125
00:06:46,080 --> 00:06:50,010
中文字幕
application really, and by application I mean something that does have logic.

126
00:06:50,010 --> 00:06:52,510
中文字幕
By website, it's generally something that's static.

127
00:06:52,510 --> 00:06:53,700
中文字幕
So that's what a web app is.

128
00:06:53,700 --> 00:06:56,780
中文字幕
It's something that changes based on who's using it, when you're using it,

129
00:06:56,780 --> 00:06:58,050
中文字幕
and what you're doing with it.

130
00:06:58,050 --> 00:07:02,190
中文字幕
Let me go ahead, and in the most annoying tedious way possible,

131
00:07:02,190 --> 00:07:05,340
中文字幕
implement a web application using Python.

132
00:07:05,340 --> 00:07:11,420
中文字幕
So I'm going to go ahead and open a file called serve.pie to serve up a website.

133
00:07:11,420 --> 00:07:13,720
中文字幕
And I'm going to go ahead and import some library code.

134
00:07:13,720 --> 00:07:19,110
中文字幕
So from HTTP server, import something called base HTTP request handler

135
00:07:19,110 --> 00:07:21,510
中文字幕
and also something called HTTP server.

136
00:07:21,510 --> 00:07:24,220
中文字幕
And then I'm going to go ahead and use this keyword class, which

137
00:07:24,220 --> 00:07:36,750
中文字幕
is HTTP server, server request, request handler, base HTTP request handler--

138
00:07:36,750 --> 00:07:37,640
中文字幕
handler.

139
00:07:37,640 --> 00:07:39,640
中文字幕
Then I'm going to go ahead and in here implement

140
00:07:39,640 --> 00:07:44,770
中文字幕
a function called def do_GET, which implies--

141
00:07:44,770 --> 00:07:48,160
中文字幕
this is a function in Python that should be called anytime a user

142
00:07:48,160 --> 00:07:51,970
中文字幕
visits my web server via GET, the type of verb

143
00:07:51,970 --> 00:07:54,110
中文字幕
that we've talked about in the context of the web.

144
00:07:54,110 --> 00:07:56,620
中文字幕
So suppose that my only goal here is to make

145
00:07:56,620 --> 00:08:00,160
中文字幕
a web-based application that for the moment just says hello world.

146
00:08:00,160 --> 00:08:03,320
中文字幕
We know how to do this with HTML, but with HTML that's just a file.

147
00:08:03,320 --> 00:08:07,540
中文字幕
Let's write a program that not just prints hello world,

148
00:08:07,540 --> 00:08:10,180
中文字幕
but generates a web page containing hello world.

149
00:08:10,180 --> 00:08:11,800
中文字幕
So the way I might do this is this.

150
00:08:11,800 --> 00:08:15,400
中文字幕
I can literally say self, because self refers to the web server in this case.

151
00:08:15,400 --> 00:08:18,420
中文字幕
And I can go ahead and send a response code of 200,

152
00:08:18,420 --> 00:08:20,470
中文字幕
just kind of presumptuously assuming everything's

153
00:08:20,470 --> 00:08:22,000
中文字幕
going to be OK in a moment.

154
00:08:22,000 --> 00:08:24,550
中文字幕
Then I'm going to go ahead and send a header, which

155
00:08:24,550 --> 00:08:26,500
中文字幕
recall, we've discussed briefly in the past,

156
00:08:26,500 --> 00:08:31,900
中文字幕
whereby this header is going to be content type and its value

157
00:08:31,900 --> 00:08:34,780
中文字幕
is going to be text HTML, which is a clue to browser

158
00:08:34,780 --> 00:08:37,990
中文字幕
that it's receiving not a GIF, or JPEG, or something else,

159
00:08:37,990 --> 00:08:39,400
中文字幕
but an actual HTML page.

160
00:08:39,400 --> 00:08:42,110
中文字幕
And then I'm going to go ahead and say that's it for the headers.

161
00:08:42,110 --> 00:08:44,830
中文字幕
I'm going to call function called end headers.

162
00:08:44,830 --> 00:08:47,500
中文字幕
And then lastly, I'm going to use Python code

163
00:08:47,500 --> 00:08:49,700
中文字幕
to dynamically generate my website.

164
00:08:49,700 --> 00:08:51,370
中文字幕
Now, what does the website have to have?

165
00:08:51,370 --> 00:08:54,410
中文字幕
Just hello world at the end of the day, but there's a whole bunch of html

166
00:08:54,410 --> 00:08:56,360
中文字幕
we need to do in order to get to that point.

167
00:08:56,360 --> 00:09:00,790
中文字幕
So I'm going to use a function called wfile write in order

168
00:09:00,790 --> 00:09:02,180
中文字幕
to write out the following.

169
00:09:02,180 --> 00:09:05,490
中文字幕
Let me go ahead and write out doctype--

170
00:09:05,490 --> 00:09:09,730
中文字幕
whoops, exclamation point doctype HTML.

171
00:09:09,730 --> 00:09:14,900
中文字幕
Then let me go ahead and do the same thing, wfile.write, let me go ahead

172
00:09:14,900 --> 00:09:17,530
中文字幕
and copy paste this moving forward, which, of course, is always

173
00:09:17,530 --> 00:09:18,520
中文字幕
a bad instinct.

174
00:09:18,520 --> 00:09:24,070
中文字幕
Then let me go ahead and output HTML lang equals en for English.

175
00:09:24,070 --> 00:09:26,840
中文字幕
And notice I'm using single quotes inside my double quotes

176
00:09:26,840 --> 00:09:28,600
中文字幕
so that Python doesn't get confused.

177
00:09:28,600 --> 00:09:33,130
中文字幕
Then let me go ahead and output head tag here.

178
00:09:33,130 --> 00:09:36,340
中文字幕
Then what comes after the head tag typically?

179
00:09:36,340 --> 00:09:38,140
中文字幕
Yeah, so usually title lately.

180
00:09:38,140 --> 00:09:44,080
中文字幕
So title will be like hello title, close the title tag.

181
00:09:44,080 --> 00:09:49,290
中文字幕
And now we're going to go ahead and what comes after title?

182
00:09:49,290 --> 00:09:51,750
中文字幕
Close head, I think, if I'm doing this right.

183
00:09:51,750 --> 00:09:55,350
中文字幕
And then after this we probably have a body.

184
00:09:55,350 --> 00:09:58,380
中文字幕
And then oh my God, this is the worst way to build a website.

185
00:09:58,380 --> 00:10:02,250
中文字幕
But let's go ahead and now say something simple like hello world.

186
00:10:02,250 --> 00:10:06,960
中文字幕
And now let's go in here and say something like body.

187
00:10:06,960 --> 00:10:13,340
中文字幕
And then finally, let's go ahead and end the page and say slash HTML.

188
00:10:13,340 --> 00:10:14,100
中文字幕
Done.

189
00:10:14,100 --> 00:10:17,520
中文字幕
OK, and now I actually need to configure the server to listen on a port.

190
00:10:17,520 --> 00:10:21,150
中文字幕
So let me go ahead and define a TCP port of 8080, which we've been using.

191
00:10:21,150 --> 00:10:23,860
中文字幕
Let me go ahead and define the server's address as being,

192
00:10:23,860 --> 00:10:28,710
中文字幕
oh 0.0.0.0, which is what the IDE uses by default, like a lot of servers.

193
00:10:28,710 --> 00:10:32,400
中文字幕
And then let me create the web server, HTTP server.

194
00:10:32,400 --> 00:10:43,060
中文字幕
server_address HTTP server request handler, httpd.serve_forever.

195
00:10:43,060 --> 00:10:45,900
中文字幕
OK, that is how you make a web-based application that

196
00:10:45,900 --> 00:10:47,970
中文字幕
dynamically generates HTML.

197
00:10:47,970 --> 00:10:51,180
中文字幕
In retrospect, I really regret typing all of that out because the whole point

198
00:10:51,180 --> 00:10:53,250
中文字幕
now is to throw this code away.

199
00:10:53,250 --> 00:10:55,710
中文字幕
Like, this is why frameworks exist.

200
00:10:55,710 --> 00:11:00,390
中文字幕
If my goal quite simply at hand is to write Python code that dynamically

201
00:11:00,390 --> 00:11:04,680
中文字幕
generates HTML, then calling lots of functions like write,

202
00:11:04,680 --> 00:11:08,730
中文字幕
which is essentially the equivalent of print in this context, is just tedious.

203
00:11:08,730 --> 00:11:11,430
中文字幕
I got bored writing it, I accomplished so terribly

204
00:11:11,430 --> 00:11:12,940
中文字幕
little at the end of the day.

205
00:11:12,940 --> 00:11:15,820
中文字幕
And so frameworks exist to make our lives easier.

206
00:11:15,820 --> 00:11:19,020
中文字幕
But what's going on underneath the hood is exactly this.

207
00:11:19,020 --> 00:11:21,720
中文字幕
When we start using this framework called Flask,

208
00:11:21,720 --> 00:11:24,460
中文字幕
it's just going to make all of this automated for us.

209
00:11:24,460 --> 00:11:27,330
中文字幕
It's going to make it easier to specify the IP address that you

210
00:11:27,330 --> 00:11:29,190
中文字幕
want to run your web server on, it's going

211
00:11:29,190 --> 00:11:32,100
中文字幕
to make it easier to specify the port number that you want your server

212
00:11:32,100 --> 00:11:35,010
中文字幕
to be listening on, and it's going to make it easier

213
00:11:35,010 --> 00:11:38,850
中文字幕
to respond to get requests because Flask will

214
00:11:38,850 --> 00:11:44,010
中文字幕
take care of the implementation of some function like this one called do get.

215
00:11:44,010 --> 00:11:46,260
中文字幕
So all of this is there underneath the hood,

216
00:11:46,260 --> 00:11:50,520
中文字幕
but the flask framework gives us essentially an abstraction

217
00:11:50,520 --> 00:11:51,640
中文字幕
on top of that.

218
00:11:51,640 --> 00:11:53,170
中文字幕
So what do I actually mean by that?

219
00:11:53,170 --> 00:11:57,360
中文字幕
If we want to distill this now into a simpler web application,

220
00:11:57,360 --> 00:11:58,740
中文字幕
first let's go ahead and do this.

221
00:11:58,740 --> 00:12:03,450
中文字幕
Let me go ahead and open up a terminal window and let me go into my code

222
00:12:03,450 --> 00:12:07,590
中文字幕
here and go ahead and run Python of serve.py.

223
00:12:07,590 --> 00:12:10,030
中文字幕
And you'll see nothing seems to be happening just yet.

224
00:12:10,030 --> 00:12:11,940
中文字幕
So I'm going to go to cs50 IDE web server

225
00:12:11,940 --> 00:12:15,990
中文字幕
to open up a tab containing the web server that I'm now running.

226
00:12:15,990 --> 00:12:17,040
中文字幕
And you'll see that's it.

227
00:12:17,040 --> 00:12:18,990
中文字幕
That's the only thing I accomplished right now.

228
00:12:18,990 --> 00:12:21,900
中文字幕
It's not dynamic to be sure, but there is code and Python code

229
00:12:21,900 --> 00:12:25,140
中文字幕
there with which I could actually do something dynamically.

230
00:12:25,140 --> 00:12:28,980
中文字幕
But let's instead do this now with Flask, this framework

231
00:12:28,980 --> 00:12:30,480
中文字幕
that seems to make our lives easier.

232
00:12:30,480 --> 00:12:34,940
中文字幕
I'm going to go ahead and make a program called application.py, which

233
00:12:34,940 --> 00:12:35,820
中文字幕
is just a convention.

234
00:12:35,820 --> 00:12:37,400
中文字幕
I could call it anything I want.

235
00:12:37,400 --> 00:12:39,400
中文字幕
And I'm going to go ahead and say the following.

236
00:12:39,400 --> 00:12:42,270
中文字幕
Let's first go ahead and import this framework called Flask.

237
00:12:42,270 --> 00:12:45,090
中文字幕
And specifically import capitalized flask, which

238
00:12:45,090 --> 00:12:46,710
中文字幕
is the name of the framework itself.

239
00:12:46,710 --> 00:12:49,650
中文字幕
And then let me preemptively import a couple of functions

240
00:12:49,650 --> 00:12:53,330
中文字幕
called render template and then this special global variable called request.

241
00:12:53,330 --> 00:12:55,920
中文字幕
You would only know to do this from reading the documentation.

242
00:12:55,920 --> 00:12:58,320
中文字幕
But now let me go ahead and say, hey Flask,

243
00:12:58,320 --> 00:13:01,500
中文字幕
could you please give me a web application?

244
00:13:01,500 --> 00:13:02,610
中文字幕
And this is copy paste.

245
00:13:02,610 --> 00:13:04,770
中文字幕
You need this at the top of any Flask application,

246
00:13:04,770 --> 00:13:07,200
中文字幕
and it just means turn this file--

247
00:13:07,200 --> 00:13:11,100
中文字幕
application.py-- into a web application.

248
00:13:11,100 --> 00:13:13,060
中文字幕
Then lastly, I'm going to go ahead and do this.

249
00:13:13,060 --> 00:13:15,630
中文字幕
I'm going to tell Flask I want to build an app that

250
00:13:15,630 --> 00:13:20,520
中文字幕
has a route that's listening for slash inside of that virtual envelope.

251
00:13:20,520 --> 00:13:25,950
中文字幕
And whenever, Flask, you see a request for slash from some user,

252
00:13:25,950 --> 00:13:29,550
中文字幕
go ahead and call this function which I arbitrarily called index,

253
00:13:29,550 --> 00:13:31,920
中文字幕
but I could call it foo, or bar, or whatever.

254
00:13:31,920 --> 00:13:36,920
中文字幕
And what I want you to do is this, return hello world.

255
00:13:36,920 --> 00:13:38,280
中文字幕
And that's it.

256
00:13:38,280 --> 00:13:41,450
中文字幕
So all of those other lines I tediously wrote out a moment ago

257
00:13:41,450 --> 00:13:44,510
中文字幕
are now distilled into just 7 lines, which none of which

258
00:13:44,510 --> 00:13:47,010
中文字幕
are completely obvious how they work just yet.

259
00:13:47,010 --> 00:13:50,330
中文字幕
But if you assume that this means give me access to the library,

260
00:13:50,330 --> 00:13:53,930
中文字幕
turned my file into a web application, and listen now

261
00:13:53,930 --> 00:13:57,100
中文字幕
for get requests on slash, it kind of makes sense

262
00:13:57,100 --> 00:13:59,900
中文字幕
and fits into the mental model that we introduced a couple of weeks

263
00:13:59,900 --> 00:14:02,510
中文字幕
ago with HTML and CSS itself.

264
00:14:02,510 --> 00:14:06,140
中文字幕
And to run this server, what I'm going to do now in my hello directory, which

265
00:14:06,140 --> 00:14:09,050
中文字幕
is where a online copy of this is on the course's website,

266
00:14:09,050 --> 00:14:11,530
中文字幕
I'm going to go ahead and quite simply say Flask run.

267
00:14:11,530 --> 00:14:14,450
中文字幕
So Flask is not only a framework or code that you have access

268
00:14:14,450 --> 00:14:17,270
中文字幕
to as free and open source code, but it's also

269
00:14:17,270 --> 00:14:19,970
中文字幕
a program you can run at the command line that also figures out

270
00:14:19,970 --> 00:14:22,650
中文字幕
how to turn the server on and just run it forever.

271
00:14:22,650 --> 00:14:25,700
中文字幕
You're going to see some diagnostic output at first glance, most of which

272
00:14:25,700 --> 00:14:26,930
中文字幕
you don't have to care about.

273
00:14:26,930 --> 00:14:29,000
中文字幕
But there will be a few URL that's spit out which

274
00:14:29,000 --> 00:14:30,650
中文字幕
is based on your own user name.

275
00:14:30,650 --> 00:14:34,380
中文字幕
Mine today is jharvard 3 just for demonstration purposes.

276
00:14:34,380 --> 00:14:37,460
中文字幕
And if you click on that URL and then click Open,

277
00:14:37,460 --> 00:14:42,010
中文字幕
you'll see now this version of the same application doing just this.

278
00:14:42,010 --> 00:14:43,430
中文字幕
Now, I'm kind of cheating, though.

279
00:14:43,430 --> 00:14:47,510
中文字幕
Because if I open up Chrome and view my page source, notice that of course

280
00:14:47,510 --> 00:14:51,190
中文字幕
I'm cheating because all I've done is print out hello world.

281
00:14:51,190 --> 00:14:52,940
中文字幕
And if I view the source of this page, I'm

282
00:14:52,940 --> 00:14:57,290
中文字幕
literally only going to say hello world and no actual HTML

283
00:14:57,290 --> 00:15:00,890
中文字幕
because I literally didn't type out any HTML in my file.

284
00:15:00,890 --> 00:15:04,000
中文字幕
But it turns out that Flask makes this easy, as well.

285
00:15:04,000 --> 00:15:06,590
中文字幕
So let me go ahead and stop the server here for just a moment.

286
00:15:06,590 --> 00:15:08,330
中文字幕
Control-c is your friend, it gets you out

287
00:15:08,330 --> 00:15:10,340
中文字幕
of whatever program is actually running.

288
00:15:10,340 --> 00:15:12,020
中文字幕
And let me go ahead and do this.

289
00:15:12,020 --> 00:15:14,870
中文字幕
Let me go ahead and not just return quote-unquote hello world

290
00:15:14,870 --> 00:15:16,560
中文字幕
as a hardcoded value.

291
00:15:16,560 --> 00:15:22,760
中文字幕
Let me go ahead and return the rendering of a template called index.html.

292
00:15:22,760 --> 00:15:24,890
中文字幕
And so this is a feature of Flask, too.

293
00:15:24,890 --> 00:15:27,100
中文字幕
If you want to separate your logic--

294
00:15:27,100 --> 00:15:29,780
中文字幕
your controller-- from your HTML--

295
00:15:29,780 --> 00:15:33,500
中文字幕
your view-- you literally put the former in application.pi,

296
00:15:33,500 --> 00:15:36,500
中文字幕
and you put the latter in an HTML file like this.

297
00:15:36,500 --> 00:15:38,840
中文字幕
And you tell the controller code--

298
00:15:38,840 --> 00:15:41,780
中文字幕
application.py-- show the user, to render

299
00:15:41,780 --> 00:15:44,870
中文字幕
for the user the index.html file.

300
00:15:44,870 --> 00:15:46,400
中文字幕
So where do I put this?

301
00:15:46,400 --> 00:15:50,450
中文字幕
The convention would be to make a directory called templates.

302
00:15:50,450 --> 00:15:55,530
中文字幕
And then in that directory, go ahead and put a file called index.html.

303
00:15:55,530 --> 00:15:57,740
中文字幕
And if I go ahead and open up the file that I already

304
00:15:57,740 --> 00:16:01,340
中文字幕
created in advance of class here, let me just show you what this looks like.

305
00:16:01,340 --> 00:16:03,260
中文字幕
And then we'll take a look at it in a browser.

306
00:16:03,260 --> 00:16:09,050
中文字幕
Here is HTML now with a pretty fancy feature

307
00:16:09,050 --> 00:16:11,660
中文字幕
that we're about to reveal the utility of.

308
00:16:11,660 --> 00:16:16,170
中文字幕
What jumps out at you is new in this file?

309
00:16:16,170 --> 00:16:18,220
中文字幕
Two curly braces on the name.

310
00:16:18,220 --> 00:16:20,140
中文字幕
Yeah, two curly braces.

311
00:16:20,140 --> 00:16:22,960
中文字幕
And somehow or other that used to be saying world,

312
00:16:22,960 --> 00:16:25,390
中文字幕
but in my final version of this I actually

313
00:16:25,390 --> 00:16:27,850
中文字幕
am hinting at some more powerful capabilities.

314
00:16:27,850 --> 00:16:29,980
中文字幕
This kind of looks like a placeholder, if you will.

315
00:16:29,980 --> 00:16:31,750
中文字幕
Maybe someone's actual name.

316
00:16:31,750 --> 00:16:34,760
中文字幕
And here's where the power of something like Flask comes into play.

317
00:16:34,760 --> 00:16:37,520
中文字幕
It makes it really easy to do something like this.

318
00:16:37,520 --> 00:16:39,520
中文字幕
So let me go ahead and actually turn this

319
00:16:39,520 --> 00:16:41,470
中文字幕
into something a little more interesting.

320
00:16:41,470 --> 00:16:43,300
中文字幕
Let me go into application.py.

321
00:16:43,300 --> 00:16:47,860
中文字幕
And before I actually render this HTML file, let me go ahead and do this.

322
00:16:47,860 --> 00:16:50,960
中文字幕
Let me go ahead and declare a variable called name.

323
00:16:50,960 --> 00:16:54,040
中文字幕
And let me go ahead and check the incoming request,

324
00:16:54,040 --> 00:16:56,530
中文字幕
the inside of that virtual envelope.

325
00:16:56,530 --> 00:17:01,390
中文字幕
Let me check its arguments or any of the HTTP parameters that were passed in

326
00:17:01,390 --> 00:17:05,200
中文字幕
and try to get something called name like this.

327
00:17:05,200 --> 00:17:07,930
中文字幕
Let me go ahead and save that and then notice this.

328
00:17:07,930 --> 00:17:10,110
中文字幕
Render template takes multiple arguments.

329
00:17:10,110 --> 00:17:12,950
中文字幕
The first one should be the name of the template you want to render.

330
00:17:12,950 --> 00:17:15,360
中文字幕
But if you want to pass in data dynamically,

331
00:17:15,360 --> 00:17:19,060
中文字幕
you can use named parameters in Python.

332
00:17:19,060 --> 00:17:22,350
中文字幕
Recall from last week that you can do things like this, x equals y,

333
00:17:22,350 --> 00:17:23,560
中文字幕
and z equals w.

334
00:17:23,560 --> 00:17:26,470
中文字幕
You can pass in the names of the things you want to pass in

335
00:17:26,470 --> 00:17:28,490
中文字幕
and their corresponding values.

336
00:17:28,490 --> 00:17:35,080
中文字幕
So if I want to pass in a name variable and set it equal to the name variable

337
00:17:35,080 --> 00:17:38,200
中文字幕
that I just defined, watch what we can do here.

338
00:17:38,200 --> 00:17:41,110
中文字幕
Let me go back to my console.

339
00:17:41,110 --> 00:17:45,940
中文字幕
Let me go ahead and rerun in my hello directory, which is available online,

340
00:17:45,940 --> 00:17:47,470
中文字幕
Flask run.

341
00:17:47,470 --> 00:17:51,310
中文字幕
And now let me go over to this where it previously said hello world.

342
00:17:51,310 --> 00:17:54,040
中文字幕
Let me now, just like with our Google example a couple of weeks

343
00:17:54,040 --> 00:17:57,730
中文字幕
ago, type in not q equals cats, which is what we did last time,

344
00:17:57,730 --> 00:18:01,720
中文字幕
but maybe name equals David to simulate a get request.

345
00:18:01,720 --> 00:18:06,530
中文字幕
And if I did everything right, when I hit Enter I now see this dynamically.

346
00:18:06,530 --> 00:18:10,000
中文字幕
And if I change this now from David to, say, Veronica, of course,

347
00:18:10,000 --> 00:18:11,830
中文字幕
this is going to dynamically output this.

348
00:18:11,830 --> 00:18:14,170
中文字幕
Can someone now try to break my code?

349
00:18:14,170 --> 00:18:19,950
中文字幕
Propose an input that I should try to see if I messed up somewhere.

350
00:18:19,950 --> 00:18:21,600
中文字幕
No entry.

351
00:18:21,600 --> 00:18:22,690
中文字幕
OK, no input.

352
00:18:22,690 --> 00:18:24,760
中文字幕
Or what's that?

353
00:18:24,760 --> 00:18:26,370
中文字幕
say again?

354
00:18:26,370 --> 00:18:28,000
中文字幕
Name equals name, I like that one, too.

355
00:18:28,000 --> 00:18:29,940
中文字幕
So let's try that, name equals name.

356
00:18:29,940 --> 00:18:34,840
中文字幕
So OK, I mean it's kind of maybe like a grammatical bug or semantic bug,

357
00:18:34,840 --> 00:18:37,450
中文字幕
but not really a code bug per se.

358
00:18:37,450 --> 00:18:38,470
中文字幕
That's just user error.

359
00:18:38,470 --> 00:18:40,570
中文字幕
But what if I just get rid of it?

360
00:18:40,570 --> 00:18:42,130
中文字幕
OK, that just looks a little stupid.

361
00:18:42,130 --> 00:18:44,790
中文字幕
So an aesthetic bug, but we should probably start handling this.

362
00:18:44,790 --> 00:18:46,600
中文字幕
What if I get rid of name altogether?

363
00:18:46,600 --> 00:18:47,620
中文字幕
Interesting.

364
00:18:47,620 --> 00:18:50,680
中文字幕
It seems that my final version actually has some built in functionality.

365
00:18:50,680 --> 00:18:52,360
中文字幕
So where is that coming from?

366
00:18:52,360 --> 00:18:53,750
中文字幕
Well, what if I did this?

367
00:18:53,750 --> 00:18:56,360
中文字幕
It turns out that I could say something like this.

368
00:18:56,360 --> 00:18:59,860
中文字幕
If not name, then go ahead and set name equal to world

369
00:18:59,860 --> 00:19:01,520
中文字幕
would be one way of doing it.

370
00:19:01,520 --> 00:19:04,870
中文字幕
Or I could actually use the function here.

371
00:19:04,870 --> 00:19:07,860
中文字幕
Turns out that this get function can take a default value.

372
00:19:07,860 --> 00:19:09,700
中文字幕
And so if you read the documentation, you'll

373
00:19:09,700 --> 00:19:11,830
中文字幕
see that the second value you provide will be

374
00:19:11,830 --> 00:19:13,870
中文字幕
used if the user hasn't provided one.

375
00:19:13,870 --> 00:19:17,230
中文字幕
And so indeed, if I reload now and see nothing, I get world.

376
00:19:17,230 --> 00:19:21,980
中文字幕
And if I instead do name equals, say, Brian, I get that dynamic output.

377
00:19:21,980 --> 00:19:26,290
中文字幕
And so when I say web application, this is just a hint of what I mean.

378
00:19:26,290 --> 00:19:28,660
中文字幕
This is dynamically generated content.

379
00:19:28,660 --> 00:19:31,400
中文字幕
It's not hardcoded, because it's actually coming from the user.

380
00:19:31,400 --> 00:19:35,780
中文字幕
So when Google implements its slash search web application,

381
00:19:35,780 --> 00:19:37,450
中文字幕
this is the kind of thing they're doing.

382
00:19:37,450 --> 00:19:38,650
中文字幕
It's way more involved, of course.

383
00:19:38,650 --> 00:19:41,520
中文字幕
They're searching a database, looking for cats, and dogs, or whatever

384
00:19:41,520 --> 00:19:44,140
中文字幕
it is you're searching for and then generating HTML.

385
00:19:44,140 --> 00:19:46,840
中文字幕
But notice with just this simple approach

386
00:19:46,840 --> 00:19:50,800
中文字幕
can we ourselves generate any HTML we want dynamically.

387
00:19:50,800 --> 00:19:52,870
中文字幕
Because all we have to do in that template

388
00:19:52,870 --> 00:19:56,980
中文字幕
called index.html is exactly this.

389
00:19:56,980 --> 00:19:59,800
中文字幕
Hello, comma, and then a placeholder where

390
00:19:59,800 --> 00:20:01,750
中文字幕
name is the variable you're passing in.

391
00:20:01,750 --> 00:20:04,000
中文字幕
And so to be clear, it doesn't have to be called name.

392
00:20:04,000 --> 00:20:07,190
中文字幕
I could do something like foo, which would be a little nonsensical.

393
00:20:07,190 --> 00:20:11,100
中文字幕
But if I do that, the variable I plug in needs to be called foo here.

394
00:20:11,100 --> 00:20:13,060
中文字幕
And so there's a one to one correspondence

395
00:20:13,060 --> 00:20:16,510
中文字幕
between the things before the equal signs and where they get

396
00:20:16,510 --> 00:20:19,060
中文字幕
plugged in down here.

397
00:20:19,060 --> 00:20:22,630
中文字幕
Any questions, then, on this simple example, but building block?

398
00:20:22,630 --> 00:20:23,580
中文字幕
Yeah?

399
00:20:23,580 --> 00:20:27,730
中文字幕
dynamically generated.

400
00:20:27,730 --> 00:20:28,480
中文字幕
Sure.

401
00:20:28,480 --> 00:20:34,360
中文字幕
By dynamically generated, I mean I have not written in advance by typing it out

402
00:20:34,360 --> 00:20:37,840
中文字幕
manually a web page that says hello David, or hello Brian,

403
00:20:37,840 --> 00:20:40,370
中文字幕
or hello Veronica.

404
00:20:40,370 --> 00:20:45,070
中文字幕
Those pages are all generated dynamically based on user input.

405
00:20:45,070 --> 00:20:46,540
中文字幕
I wrote most of those pages.

406
00:20:46,540 --> 00:20:49,870
中文字幕
I wrote everything up into and after the comma, but then-- sorry,

407
00:20:49,870 --> 00:20:54,160
中文字幕
up to the comma, but then the names are dynamically added.

408
00:20:54,160 --> 00:20:54,950
中文字幕
Good question.

409
00:20:54,950 --> 00:20:57,820
中文字幕
Other questions?

410
00:20:57,820 --> 00:20:58,670
中文字幕
All right.

411
00:20:58,670 --> 00:21:04,070
中文字幕
So why don't we rewind to 1997 or so and see

412
00:21:04,070 --> 00:21:07,280
中文字幕
if we can't build a more dynamic web application that actually allow

413
00:21:07,280 --> 00:21:09,680
中文字幕
students to register for something that's

414
00:21:09,680 --> 00:21:12,500
中文字幕
a little more compelling than just providing their name?

415
00:21:12,500 --> 00:21:17,150
中文字幕
So let me go ahead and open up froshim0, which is the first larger scale

416
00:21:17,150 --> 00:21:18,860
中文字幕
application we have here today.

417
00:21:18,860 --> 00:21:21,290
中文字幕
And notice that I have a few files.

418
00:21:21,290 --> 00:21:24,280
中文字幕
So already things are going to escalate quickly whereby we're

419
00:21:24,280 --> 00:21:26,240
中文字幕
going to suddenly introduce multiple templates,

420
00:21:26,240 --> 00:21:28,710
中文字幕
but we'll do this in order to solve a problem.

421
00:21:28,710 --> 00:21:31,880
中文字幕
But first let me go ahead and open up application,py,

422
00:21:31,880 --> 00:21:35,630
中文字幕
which just like your main function in C is kind of the entry point now

423
00:21:35,630 --> 00:21:37,430
中文字幕
to a web-based application.

424
00:21:37,430 --> 00:21:40,550
中文字幕
So notice that-- let's start like this.

425
00:21:40,550 --> 00:21:44,090
中文字幕
Let me go ahead and delete that and start from the beginning here.

426
00:21:44,090 --> 00:21:47,930
中文字幕
Let's go ahead and do this.

427
00:21:47,930 --> 00:21:52,910
中文字幕
In froshim0, we have this default route of slash,

428
00:21:52,910 --> 00:21:55,040
中文字幕
and notice that it's going to render index.html.

429
00:21:55,040 --> 00:21:56,960
中文字幕
So when you start to read someone else's code,

430
00:21:56,960 --> 00:21:58,710
中文字幕
you kind of follow these breadcrumbs.

431
00:21:58,710 --> 00:22:01,670
中文字幕
So let me go ahead and open the same folder, froshim0.

432
00:22:01,670 --> 00:22:03,970
中文字幕
Let me go into--

433
00:22:03,970 --> 00:22:06,560
中文字幕
let me go ahead, rather, let's do this from scratch, actually.

434
00:22:06,560 --> 00:22:07,250
中文字幕
Let's do this.

435
00:22:07,250 --> 00:22:13,490
中文字幕
Index.html, and let me do the familiar doctype HTML.

436
00:22:13,490 --> 00:22:16,850
中文字幕
Then let me go ahead and do an HTML tag here, it finishes my thought for me.

437
00:22:16,850 --> 00:22:22,070
中文字幕
The head tag here, the title tag here, froshim0 will be the title here.

438
00:22:22,070 --> 00:22:23,660
中文字幕
Let me go ahead and create a body.

439
00:22:23,660 --> 00:22:26,570
中文字幕
And now for this web page, I want to go ahead

440
00:22:26,570 --> 00:22:30,990
中文字幕
and have a few things via which the user can actually register for froshim.

441
00:22:30,990 --> 00:22:32,990
中文字幕
So let me go ahead and have just some title text

442
00:22:32,990 --> 00:22:36,620
中文字幕
here, like register for froshims like I did back in the day.

443
00:22:36,620 --> 00:22:38,840
中文字幕
Then let me go ahead and start a form tag.

444
00:22:38,840 --> 00:22:41,090
中文字幕
And then in here, what information might a student

445
00:22:41,090 --> 00:22:44,320
中文字幕
want to provide when registering for something like a sports team?

446
00:22:44,320 --> 00:22:45,100
中文字幕
Name.

447
00:22:45,100 --> 00:22:46,590
中文字幕
OK, the student's name.

448
00:22:46,590 --> 00:22:50,120
中文字幕
So input type equals text.

449
00:22:50,120 --> 00:22:53,140
中文字幕
The name of this input probably shouldn't be something generic like q,

450
00:22:53,140 --> 00:22:55,190
中文字幕
it should probably be more descriptive like name.

451
00:22:55,190 --> 00:22:57,530
中文字幕
So its a little weird looking, but name equals name.

452
00:22:57,530 --> 00:22:58,550
中文字幕
And we'll go ahead and do this.

453
00:22:58,550 --> 00:23:00,250
中文字幕
And if we really want to be fancy, we can

454
00:23:00,250 --> 00:23:04,100
中文字幕
do like a placeholder text of name just to in light gray text show the user

455
00:23:04,100 --> 00:23:05,030
中文字幕
what we want.

456
00:23:05,030 --> 00:23:07,040
中文字幕
And then back in the day, minimally the students

457
00:23:07,040 --> 00:23:09,960
中文字幕
registering for sports had to provide their dorm,

458
00:23:09,960 --> 00:23:11,810
中文字幕
so the building in which they lived.

459
00:23:11,810 --> 00:23:14,010
中文字幕
So in HTML, we've got a bunch of input types.

460
00:23:14,010 --> 00:23:17,320
中文字幕
We've got text boxes, turns out there's text areas which are even bigger,

461
00:23:17,320 --> 00:23:23,170
中文字幕
check boxes, radio buttons, what's most apt perhaps for choosing your dorm?

462
00:23:23,170 --> 00:23:24,170
中文字幕
Dropdown list.

463
00:23:24,170 --> 00:23:28,520
中文字幕
Like a dropdown list, otherwise called a menu.

464
00:23:28,520 --> 00:23:31,150
中文字幕
But which tag?

465
00:23:31,150 --> 00:23:32,330
中文字幕
Container?

466
00:23:32,330 --> 00:23:34,910
中文字幕
Not a container, a little more precise than that.

467
00:23:34,910 --> 00:23:37,970
中文字幕
With what tag can you generate a dropdown list

468
00:23:37,970 --> 00:23:39,830
中文字幕
if you've done this before in HTML?

469
00:23:39,830 --> 00:23:41,560
中文字幕
Select.

470
00:23:41,560 --> 00:23:45,710
中文字幕
So it's not perfectly clearly named, but it's, indeed, a select menu by name.

471
00:23:45,710 --> 00:23:47,040
中文字幕
And so I can actually do this.

472
00:23:47,040 --> 00:23:50,510
中文字幕
Select, and the name of this field will be dorm, for instance.

473
00:23:50,510 --> 00:23:53,920
中文字幕
And then inside of this I'm going to go ahead and have a few options.

474
00:23:53,920 --> 00:23:58,130
中文字幕
So one option might be let's say Apley Court, which

475
00:23:58,130 --> 00:24:01,100
中文字幕
is one of the buildings in which freshmen live.

476
00:24:01,100 --> 00:24:03,430
中文字幕
There might be another one called Canoday,

477
00:24:03,430 --> 00:24:05,390
中文字幕
and then there's going to be bunches of others.

478
00:24:05,390 --> 00:24:08,510
中文字幕
And then notice, too, if you've never used a select menu, which you wouldn't

479
00:24:08,510 --> 00:24:10,800
中文字幕
have really had occasion to yet unless you've done this

480
00:24:10,800 --> 00:24:14,300
中文字幕
before, these options also have to have values, which for my purposes

481
00:24:14,300 --> 00:24:16,350
中文字幕
are going to be exactly the same.

482
00:24:16,350 --> 00:24:20,780
中文字幕
But whereas what's between the tags is what the human sees,

483
00:24:20,780 --> 00:24:24,260
中文字幕
it's what's between these quotes as the value of value

484
00:24:24,260 --> 00:24:26,480
中文字幕
that the computer actually sees.

485
00:24:26,480 --> 00:24:29,270
中文字幕
So these are the words that populate the dropdown menu,

486
00:24:29,270 --> 00:24:32,600
中文字幕
these are the values that actually gets stuffed into the virtual envelope

487
00:24:32,600 --> 00:24:35,420
中文字幕
that the student him or herself actually see.

488
00:24:35,420 --> 00:24:37,640
中文字幕
So let me go ahead and save this.

489
00:24:37,640 --> 00:24:41,310
中文字幕
Let me go ahead and now open up my console.

490
00:24:41,310 --> 00:24:43,190
中文字幕
And I'm going to borrow a little code just so

491
00:24:43,190 --> 00:24:45,470
中文字幕
that we can do this from scratch here.

492
00:24:45,470 --> 00:24:51,950
中文字幕
So let me go ahead and grab from froshim0 my application.py file

493
00:24:51,950 --> 00:24:55,430
中文字幕
and go into my workspace.

494
00:24:55,430 --> 00:24:59,420
中文字幕
So let me go ahead now and run Flask run wherein

495
00:24:59,420 --> 00:25:01,370
中文字幕
I have this application.py file.

496
00:25:01,370 --> 00:25:04,190
中文字幕
I'm going to see the URL at which my code now lives.

497
00:25:04,190 --> 00:25:07,220
中文字幕
And if I open this up, I'm going to see an internal server error.

498
00:25:07,220 --> 00:25:11,180
中文字幕
So intended at some point because internal server error, recall,

499
00:25:11,180 --> 00:25:14,680
中文字幕
was one of the more arcane status codes, 500, that you probably

500
00:25:14,680 --> 00:25:17,810
中文字幕
have not seen unless you're visiting a website where something has actually

501
00:25:17,810 --> 00:25:18,930
中文字幕
going wrong.

502
00:25:18,930 --> 00:25:21,500
中文字幕
So how do I begin to figure out what has gone wrong now

503
00:25:21,500 --> 00:25:24,800
中文字幕
that I'm actually writing code and not just writing hard coded HTML?

504
00:25:24,800 --> 00:25:27,350
中文字幕
Well, all of the clues are going to be found

505
00:25:27,350 --> 00:25:30,090
中文字幕
here inside of the console window.

506
00:25:30,090 --> 00:25:33,860
中文字幕
So when you're running Flask you are running a full fledged web server.

507
00:25:33,860 --> 00:25:39,510
中文字幕
You are listening via TCP/IP for incoming requests from users.

508
00:25:39,510 --> 00:25:42,470
中文字幕
And so what you'll see in the console is not just the diagnostic output

509
00:25:42,470 --> 00:25:46,490
中文字幕
when you first start Flask, but you're going to see all of the error messages

510
00:25:46,490 --> 00:25:48,660
中文字幕
that might actually happen thereafter.

511
00:25:48,660 --> 00:25:50,210
中文字幕
And this is a little cryptic looking.

512
00:25:50,210 --> 00:25:53,110
中文字幕
Frankly, it's overwhelming to see this text at first glance.

513
00:25:53,110 --> 00:25:56,150
中文字幕
But whereas in Clang and in C it generally

514
00:25:56,150 --> 00:25:59,480
中文字幕
helps to look at the very top, sometimes the error messages

515
00:25:59,480 --> 00:26:02,250
中文字幕
here in this context of Flask are kind of toward the bottom.

516
00:26:02,250 --> 00:26:04,310
中文字幕
And here we have template not found.

517
00:26:04,310 --> 00:26:06,820
中文字幕
Template because it can't find index.html.

518
00:26:06,820 --> 00:26:08,370
中文字幕
And that's just because I screwed up.

519
00:26:08,370 --> 00:26:11,090
中文字幕
So let me actually exit Flask by typing control-c.

520
00:26:11,090 --> 00:26:14,690
中文字幕
And if I type ls in my directory, notice that I haven't quite

521
00:26:14,690 --> 00:26:16,440
中文字幕
practiced what I've preached.

522
00:26:16,440 --> 00:26:19,220
中文字幕
It's perhaps a little subtle, but I haven't organized myself

523
00:26:19,220 --> 00:26:19,950
中文字幕
in the right way.

524
00:26:19,950 --> 00:26:23,220
中文字幕
What have I done wrong?

525
00:26:23,220 --> 00:26:24,320
中文字幕
Yeah?

526
00:26:24,320 --> 00:26:25,190
中文字幕
Didn't make a templates directory.

527
00:26:25,190 --> 00:26:26,820
中文字幕
Yeah, it's kind of a silly mistake.

528
00:26:26,820 --> 00:26:28,290
中文字幕
I didn't make a templates directory.

529
00:26:28,290 --> 00:26:30,080
中文字幕
So you can do this in a few different ways.

530
00:26:30,080 --> 00:26:32,460
中文字幕
By the folder icon up here, you can create a new folder

531
00:26:32,460 --> 00:26:34,290
中文字幕
by right clicking or control clicking.

532
00:26:34,290 --> 00:26:37,290
中文字幕
Or in Linux you can do make dir for make directory.

533
00:26:37,290 --> 00:26:40,140
中文字幕
And so I can do make dir templates enter.

534
00:26:40,140 --> 00:26:43,410
中文字幕
And then I can move my index.html file, which

535
00:26:43,410 --> 00:26:47,850
中文字幕
I wrote a moment ago, into my templates directory by just using mv for move.

536
00:26:47,850 --> 00:26:52,020
中文字幕
And now I can go ahead and run Flask run, cross my fingers,

537
00:26:52,020 --> 00:26:54,960
中文字幕
go back to the browser tab and click reload,

538
00:26:54,960 --> 00:26:57,090
中文字幕
and voila, now I actually see the form.

539
00:26:57,090 --> 00:26:58,480
中文字幕
So have these kinds of instincts.

540
00:26:58,480 --> 00:27:01,180
中文字幕
I didn't actually intend that, but I forgot to create the folder.

541
00:27:01,180 --> 00:27:02,220
中文字幕
I got this server error.

542
00:27:02,220 --> 00:27:03,690
中文字幕
You don't have to just stare at the browser, which

543
00:27:03,690 --> 00:27:05,270
中文字幕
is not going to have much information.

544
00:27:05,270 --> 00:27:07,740
中文字幕
But if you look at the console, the terminal window

545
00:27:07,740 --> 00:27:11,710
中文字幕
that you have control over will you see those clang-like error messages.

546
00:27:11,710 --> 00:27:13,290
中文字幕
So here we have a basic HTML form.

547
00:27:13,290 --> 00:27:15,450
中文字幕
It's not complete because I didn't bother typing out

548
00:27:15,450 --> 00:27:18,090
中文字幕
all of the dorm names, but I do have an input of type text

549
00:27:18,090 --> 00:27:19,530
中文字幕
as well as the Select menu.

550
00:27:19,530 --> 00:27:22,260
中文字幕
And I'm also kind of missing a key detail, it seems.

551
00:27:22,260 --> 00:27:24,230
中文字幕
What should I probably add to this form?

552
00:27:24,230 --> 00:27:25,740
中文字幕
Where you're selecting.

553
00:27:25,740 --> 00:27:26,670
中文字幕
Well, I'm selecting--

554
00:27:26,670 --> 00:27:29,540
中文字幕
I could be selecting dorm, so I could clean this up in a couple ways.

555
00:27:29,540 --> 00:27:31,860
中文字幕
I also am missing a Submit button.

556
00:27:31,860 --> 00:27:33,780
中文字幕
Now, it turns out you could probably hit Enter

557
00:27:33,780 --> 00:27:36,570
中文字幕
and it would actually be submitted by default. But we can fix this.

558
00:27:36,570 --> 00:27:38,970
中文字幕
So let me go into index.html.

559
00:27:38,970 --> 00:27:42,410
中文字幕
Let me shrink this tab just a little bit and let me fix both of these things.

560
00:27:42,410 --> 00:27:46,950
中文字幕
So let me go ahead and open up this latest version, which

561
00:27:46,950 --> 00:27:50,450
中文字幕
is now in that templates directory.

562
00:27:50,450 --> 00:27:55,110
中文字幕
Let me go ahead and at the bottom here do an input type equals submit,

563
00:27:55,110 --> 00:27:57,840
中文字幕
the value of which is going to be a register, just to make

564
00:27:57,840 --> 00:27:59,620
中文字幕
clear to the human what's going on.

565
00:27:59,620 --> 00:28:04,260
中文字幕
Let me go ahead and go back to my form, click reload.

566
00:28:04,260 --> 00:28:05,980
中文字幕
And nothing's happened just yet.

567
00:28:05,980 --> 00:28:10,080
中文字幕
And that's because by default when you make changes to some of your files,

568
00:28:10,080 --> 00:28:11,440
中文字幕
Flask is not going to notice.

569
00:28:11,440 --> 00:28:13,480
中文字幕
And we'll fix this actually in the coming problem

570
00:28:13,480 --> 00:28:15,300
中文字幕
set by adding more code and a little more

571
00:28:15,300 --> 00:28:17,130
中文字幕
complexity to automate this for you.

572
00:28:17,130 --> 00:28:20,050
中文字幕
But when in doubt, just control-c to quit flask.

573
00:28:20,050 --> 00:28:23,130
中文字幕
Then go ahead and rerun flask, that will reload all

574
00:28:23,130 --> 00:28:25,140
中文字幕
of your HTML, all of your Python code.

575
00:28:25,140 --> 00:28:28,890
中文字幕
And if I now go back here and click reload, we'll see the Register button.

576
00:28:28,890 --> 00:28:31,030
中文字幕
So there should never be any surprises.

577
00:28:31,030 --> 00:28:35,610
中文字幕
And if there are, just try to get to the diagnosis thereof.

578
00:28:35,610 --> 00:28:38,850
中文字幕
This is also a little unclear, too, to what this menu is.

579
00:28:38,850 --> 00:28:42,180
中文字幕
So it turns out that if you actually create a bogus option like this

580
00:28:42,180 --> 00:28:47,080
中文字幕
that has no value and say something like dorm, you can save this.

581
00:28:47,080 --> 00:28:50,820
中文字幕
Let's go ahead and restart Flask and reload the page here.

582
00:28:50,820 --> 00:28:52,260
中文字幕
You'll see that now you see dorm.

583
00:28:52,260 --> 00:28:56,340
中文字幕
Unfortunately, this is kind of stupid because now dorm

584
00:28:56,340 --> 00:28:58,320
中文字幕
is where you can literally live apparently,

585
00:28:58,320 --> 00:28:59,850
中文字幕
which doesn't quite feel right.

586
00:28:59,850 --> 00:29:01,950
中文字幕
So there's HTML fixes for this too.

587
00:29:01,950 --> 00:29:05,130
中文字幕
I can actually go in here and technically say disabled,

588
00:29:05,130 --> 00:29:06,960
中文字幕
so you can't actually select that.

589
00:29:06,960 --> 00:29:12,200
中文字幕
Now if I rerun Flask and reload, now it still shows it there.

590
00:29:12,200 --> 00:29:15,000
中文字幕
But because I already selected Apley Court, you can see it in gray.

591
00:29:15,000 --> 00:29:16,910
中文字幕
And we can actually be a little more specific,

592
00:29:16,910 --> 00:29:21,360
中文字幕
if you want to not only disable it, but select it by default and then go ahead

593
00:29:21,360 --> 00:29:24,170
中文字幕
and reload the page here, now you'll see hopefully

594
00:29:24,170 --> 00:29:25,550
中文字幕
what's familiar on most websites.

595
00:29:25,550 --> 00:29:27,780
中文字幕
It says dorm, but it's disabled.

596
00:29:27,780 --> 00:29:29,760
中文字幕
And even though the silly checkmark is there,

597
00:29:29,760 --> 00:29:31,720
中文字幕
you're forced to choose an actual dorm.

598
00:29:31,720 --> 00:29:33,930
中文字幕
So these are minor aesthetics, but the kind of things

599
00:29:33,930 --> 00:29:35,440
中文字幕
you now have control over.

600
00:29:35,440 --> 00:29:36,840
中文字幕
So what's going to happen?

601
00:29:36,840 --> 00:29:39,240
中文字幕
I haven't actually specified where this form should

602
00:29:39,240 --> 00:29:42,970
中文字幕
go when I actually register because I'm missing some key details on the form

603
00:29:42,970 --> 00:29:43,470
中文字幕
tag.

604
00:29:43,470 --> 00:29:45,380
中文字幕
And we haven't done this in a couple of weeks.

605
00:29:45,380 --> 00:29:48,480
中文字幕
But when we were playfully reimplementing Google,

606
00:29:48,480 --> 00:29:52,340
中文字幕
what else did we add to the form tag?

607
00:29:52,340 --> 00:29:53,360
中文字幕
What attributes?

608
00:29:56,860 --> 00:29:58,990
中文字幕
Anyone remember?

609
00:29:58,990 --> 00:29:59,870
中文字幕
Yeah.

610
00:29:59,870 --> 00:30:01,940
中文字幕
Oh, say again?

611
00:30:01,940 --> 00:30:04,850
中文字幕
Action, which means what?

612
00:30:04,850 --> 00:30:06,800
中文字幕
What to do.

613
00:30:06,800 --> 00:30:08,500
中文字幕
All right, so the action we want to take,

614
00:30:08,500 --> 00:30:11,510
中文字幕
even though this is not necessarily perfectly well named,

615
00:30:11,510 --> 00:30:13,870
中文字幕
is where do you want to submit the form to?

616
00:30:13,870 --> 00:30:16,250
中文字幕
And I could actually submit this in a few different ways.

617
00:30:16,250 --> 00:30:18,120
中文字幕
I'm going to go ahead and say, you know what,

618
00:30:18,120 --> 00:30:21,540
中文字幕
submit it to a reasonably named route slash register.

619
00:30:21,540 --> 00:30:23,840
中文字幕
Google, for instance, might have code that instead says

620
00:30:23,840 --> 00:30:25,250
中文字幕
to submit their form to slash search.

621
00:30:25,250 --> 00:30:27,170
中文字幕
But we're not searching for something, we're registering.

622
00:30:27,170 --> 00:30:29,270
中文字幕
So the name of the route is entirely up to us.

623
00:30:29,270 --> 00:30:32,300
中文字幕
And via what method should we submit this information?

624
00:30:32,300 --> 00:30:33,380
中文字幕
What are our two options?

625
00:30:33,380 --> 00:30:35,500
中文字幕
Get or post.

626
00:30:35,500 --> 00:30:38,480
中文字幕
Get tends to be the default if you don't mention in links.

627
00:30:38,480 --> 00:30:41,310
中文字幕
Why might you want to use post instead?

628
00:30:41,310 --> 00:30:44,110
中文字幕
You want it to go to a database in order to do something.

629
00:30:44,110 --> 00:30:46,940
中文字幕
Yeah, you want it to go to a database and do something.

630
00:30:46,940 --> 00:30:49,450
中文字幕
And the right verb to use there is to post information

631
00:30:49,450 --> 00:30:51,010
中文字幕
as opposed to getting information.

632
00:30:51,010 --> 00:30:54,190
中文字幕
And even more specifically when it comes to privacy, when you use post,

633
00:30:54,190 --> 00:30:56,800
中文字幕
the information doesn't end up in the user's URL,

634
00:30:56,800 --> 00:30:58,930
中文字幕
and therefore doesn't end up in his or her history,

635
00:30:58,930 --> 00:31:02,180
中文字幕
and therefore doesn't end up in a place that siblings, or roommates, or anyone

636
00:31:02,180 --> 00:31:04,010
中文字幕
else can actually see just by poking around.

637
00:31:04,010 --> 00:31:07,010
中文字幕
So we'll, indeed, go ahead, because this is my name, and dorm, and maybe

638
00:31:07,010 --> 00:31:09,200
中文字幕
my phone number, and email, and credit card number,

639
00:31:09,200 --> 00:31:10,660
中文字幕
and the like on some other website.

640
00:31:10,660 --> 00:31:13,100
中文字幕
I'm going to use post for that instead.

641
00:31:13,100 --> 00:31:16,180
中文字幕
So the catch here is that this week, we now

642
00:31:16,180 --> 00:31:18,760
中文字幕
have the ability to implement slash register.

643
00:31:18,760 --> 00:31:22,480
中文字幕
Two weeks ago we could just send people to Google's slash search,

644
00:31:22,480 --> 00:31:25,120
中文字幕
but now we have the ability to make our own routes.

645
00:31:25,120 --> 00:31:29,780
中文字幕
But how many routes have we defined thus far in application.py?

646
00:31:29,780 --> 00:31:30,920
中文字幕
Just the one.

647
00:31:30,920 --> 00:31:34,610
中文字幕
And again, some new syntax with the funky at sign and the route

648
00:31:34,610 --> 00:31:35,690
中文字幕
keyword here.

649
00:31:35,690 --> 00:31:38,300
中文字幕
But let me actually just intuitively guess

650
00:31:38,300 --> 00:31:43,460
中文字幕
that if I go ahead and say app.route slash register,

651
00:31:43,460 --> 00:31:46,160
中文字幕
I bet I could implement a second route and tell the web server

652
00:31:46,160 --> 00:31:50,180
中文字幕
to listen in two places, on slash as well as on slash register.

653
00:31:50,180 --> 00:31:55,550
中文字幕
But if I wanted to listen specifically on post, it actually has to be this.

654
00:31:55,550 --> 00:31:58,670
中文字幕
Methods equals quote-unquote post.

655
00:31:58,670 --> 00:32:02,370
中文字幕
Because by default just for convenience, it assumes only gets.

656
00:32:02,370 --> 00:32:03,290
中文字幕
So I need to add that.

657
00:32:03,290 --> 00:32:05,120
中文字幕
You'd only know that from the documentation.

658
00:32:05,120 --> 00:32:07,120
中文字幕
Now I'm going to go ahead and define a function.

659
00:32:07,120 --> 00:32:09,050
中文字幕
This is slightly an annoying feature of Flask.

660
00:32:09,050 --> 00:32:11,710
中文字幕
You have to give the function a name even though you'll probably

661
00:32:11,710 --> 00:32:13,070
中文字幕
never reference it anywhere.

662
00:32:13,070 --> 00:32:15,980
中文字幕
So I'm going to go ahead and just reasonably call this register.

663
00:32:15,980 --> 00:32:18,060
中文字幕
And now I have a to do.

664
00:32:18,060 --> 00:32:23,060
中文字幕
What am I going to want to do when the user clicks that Submit button?

665
00:32:23,060 --> 00:32:23,850
中文字幕
Store it.

666
00:32:23,850 --> 00:32:25,600
中文字幕
I want to store it somewhere.

667
00:32:25,600 --> 00:32:27,120
中文字幕
So I probably want to store it.

668
00:32:27,120 --> 00:32:30,560
中文字幕
But what might I want to do first before he or she is actually

669
00:32:30,560 --> 00:32:34,400
中文字幕
allowed to register, even though they've clicked that submit form?

670
00:32:34,400 --> 00:32:36,130
中文字幕
Maybe confirm their information, right?

671
00:32:36,130 --> 00:32:39,830
中文字幕
Because if a lazy user comes in, or if a user accidentally clicks the button

672
00:32:39,830 --> 00:32:42,770
中文字幕
or hits enter, they might actually submit nothing-- no name, no dorm.

673
00:32:42,770 --> 00:32:44,020
中文字幕
That's not useful information.

674
00:32:44,020 --> 00:32:45,680
中文字幕
It could just be perceived as spam.

675
00:32:45,680 --> 00:32:48,020
中文字幕
So we probably want to ask some kind of logical question

676
00:32:48,020 --> 00:32:51,130
中文字幕
like if they didn't give us a name or they didn't give us a dorm,

677
00:32:51,130 --> 00:32:53,140
中文字幕
yell at the user in some way.

678
00:32:53,140 --> 00:32:54,690
中文字幕
So I'm going to go ahead and do that.

679
00:32:54,690 --> 00:32:56,330
中文字幕
So let me actually express this in Python,

680
00:32:56,330 --> 00:32:58,640
中文字幕
kind of like we did last week with some error checking.

681
00:32:58,640 --> 00:33:03,680
中文字幕
So recall that the user's name can be gotten from an HTTP parameter.

682
00:33:03,680 --> 00:33:09,470
中文字幕
From the request.args get, and then ask for the name parameter.

683
00:33:09,470 --> 00:33:13,580
中文字幕
Their dorm, meanwhile, can come from request.args get dorm.

684
00:33:13,580 --> 00:33:16,520
中文字幕
And again, this request.args is something

685
00:33:16,520 --> 00:33:19,430
中文字幕
we gave ourselves access to up here when we said, hey Flask,

686
00:33:19,430 --> 00:33:22,790
中文字幕
please give me access to the user's request, that virtual envelope.

687
00:33:22,790 --> 00:33:26,390
中文字幕
Request.arg refers to all of the HTTP parameters in the URL.

688
00:33:26,390 --> 00:33:30,020
中文字幕
And get is just a function or a method built into that special Flask

689
00:33:30,020 --> 00:33:33,260
中文字幕
feature that allows us to get a specific parameter like name,

690
00:33:33,260 --> 00:33:35,180
中文字幕
or dorm, or anything else.

691
00:33:35,180 --> 00:33:38,390
中文字幕
And recall that in Python, what's kind of nice is that you can say pretty

692
00:33:38,390 --> 00:33:42,490
中文字幕
English-like, if not name or not--

693
00:33:42,490 --> 00:33:46,170
中文字幕
not dorm, let's go ahead and reprimand the user.

694
00:33:46,170 --> 00:33:50,360
中文字幕
For instance, we could say failure because he or she did not actually

695
00:33:50,360 --> 00:33:51,980
中文字幕
cooperate as we intended.

696
00:33:51,980 --> 00:33:54,110
中文字幕
Otherwise if they did cooperate, I'm going

697
00:33:54,110 --> 00:33:58,070
中文字幕
to go ahead and render template success.

698
00:33:58,070 --> 00:34:00,030
中文字幕
And we'll flesh this out in just a moment.

699
00:34:00,030 --> 00:34:01,520
中文字幕
So I've got two scenarios handled.

700
00:34:01,520 --> 00:34:05,150
中文字幕
If they didn't cooperate or if they did, render quote-unquote failure

701
00:34:05,150 --> 00:34:07,320
中文字幕
or a full fledged HTML template.

702
00:34:07,320 --> 00:34:12,100
中文字幕
So now that I've implemented slash register and I'm listening for a route

703
00:34:12,100 --> 00:34:15,230
中文字幕
by a post, let's go ahead and reload the page for good measure.

704
00:34:15,230 --> 00:34:16,190
中文字幕
Type in my name.

705
00:34:16,190 --> 00:34:20,110
中文字幕
Not going to tell you my dorm, but you're going to notice as much.

706
00:34:20,110 --> 00:34:24,080
中文字幕
OK, so now the server has noticed that I didn't actually cooperate and provide

707
00:34:24,080 --> 00:34:25,250
中文字幕
both a name and a dorm.

708
00:34:25,250 --> 00:34:27,900
中文字幕
And so it's returning to me just quote-unquote failure.

709
00:34:27,900 --> 00:34:31,070
中文字幕
So that's good because now I know, all right, I did something wrong clearly.

710
00:34:31,070 --> 00:34:34,610
中文字幕
Let me go back let me go ahead and maybe do Canaday here.

711
00:34:34,610 --> 00:34:36,230
中文字幕
And now let me go ahead and register.

712
00:34:36,230 --> 00:34:39,230
中文字幕
But, but, but, but, this I know in advance is going to err.

713
00:34:39,230 --> 00:34:40,790
中文字幕
Why?

714
00:34:40,790 --> 00:34:42,290
中文字幕
I don't have a success.html.

715
00:34:42,290 --> 00:34:44,540
中文字幕
OK, so let's preemptively address this.

716
00:34:44,540 --> 00:34:47,230
中文字幕
Let me actually go in here to my templates directory.

717
00:34:47,230 --> 00:34:52,040
中文字幕
I'm going to go ahead and create a new file called success.html.

718
00:34:52,040 --> 00:34:54,390
中文字幕
Let me go into the templates to save it there.

719
00:34:54,390 --> 00:34:56,690
中文字幕
And you know what, success can be a pretty simple page.

720
00:34:56,690 --> 00:35:00,300
中文字幕
And let me open my index page, let me copy that, let me go into success,

721
00:35:00,300 --> 00:35:01,160
中文字幕
let me paste this.

722
00:35:01,160 --> 00:35:06,470
中文字幕
Let me get rid of all of that body and just say success, for instance.

723
00:35:06,470 --> 00:35:10,690
中文字幕
So let me now go ahead and go restart Flask,

724
00:35:10,690 --> 00:35:12,110
中文字幕
because I've made a new template.

725
00:35:12,110 --> 00:35:14,520
中文字幕
Let me go ahead and reload the form just for good measure.

726
00:35:14,520 --> 00:35:17,720
中文字幕
Let me go ahead and give you my name this time, and OK, I live in Canaday,

727
00:35:17,720 --> 00:35:19,760
中文字幕
and register.

728
00:35:19,760 --> 00:35:22,080
中文字幕
And what did I do wrong this time?

729
00:35:22,080 --> 00:35:25,940
中文字幕
So it turns out you can't do it this way, obviously.

730
00:35:25,940 --> 00:35:31,310
中文字幕
[LAUGHTER] So when you're actually submitting information to

731
00:35:31,310 --> 00:35:35,720
中文字幕
via a form via get, Flask very cleverly puts

732
00:35:35,720 --> 00:35:37,460
中文字幕
that information in a different place.

733
00:35:37,460 --> 00:35:40,370
中文字幕
Because by definition, as I claim very correctly earlier,

734
00:35:40,370 --> 00:35:42,860
中文字幕
in request.args are all of the key value pairs

735
00:35:42,860 --> 00:35:46,790
中文字幕
that are in the URL that are coming in from the user's request.

736
00:35:46,790 --> 00:35:50,870
中文字幕
But when you submit via post, for reasons I wish were now otherwise

737
00:35:50,870 --> 00:35:54,930
中文字幕
you actually have to access those values via a different variable.

738
00:35:54,930 --> 00:35:58,760
中文字幕
So instead of using request.args, you have to use request.form both here

739
00:35:58,760 --> 00:36:02,990
中文字幕
and here to make clear-- and this is horribly named for exactly the reasons

740
00:36:02,990 --> 00:36:04,550
中文字幕
that I think I'm tripping over here--

741
00:36:04,550 --> 00:36:09,380
中文字幕
because they actually are both coming in via a form, via a get or post.

742
00:36:09,380 --> 00:36:15,770
中文字幕
But Flask puts get arguments in args and puts post arguments in form.

743
00:36:15,770 --> 00:36:18,020
中文字幕
Thereby leading clearly to potential confusion.

744
00:36:18,020 --> 00:36:24,920
中文字幕
But if I go ahead now and load this version of the site and I keep hoping,

745
00:36:24,920 --> 00:36:31,610
中文字幕
I'm going to go ahead now run Flask, restart this page, type in David,

746
00:36:31,610 --> 00:36:36,240
中文字幕
give you my dorm, and register and successfully register for froshim.

747
00:36:36,240 --> 00:36:39,020
中文字幕
See how easy web programming is?

748
00:36:39,020 --> 00:36:44,180
中文字幕
So hopefully now we can at least focus on the structure of what I've done

749
00:36:44,180 --> 00:36:45,590
中文字幕
and now begin to improve it.

750
00:36:45,590 --> 00:36:49,910
中文字幕
Because notice that I kind of did not practice what I preached a moment ago.

751
00:36:49,910 --> 00:36:56,050
中文字幕
What habit did I violate when I whipped up success.html?

752
00:36:56,050 --> 00:36:57,220
中文字幕
How did I get to that point?

753
00:36:57,220 --> 00:36:57,630
中文字幕
Yeah?

754
00:36:57,630 --> 00:36:57,960
中文字幕
Copy and paste.

755
00:36:57,960 --> 00:36:59,540
中文字幕
Yeah, I copied and paste.

756
00:36:59,540 --> 00:37:02,450
中文字幕
Which again, usually in programming not the right thing to do.

757
00:37:02,450 --> 00:37:05,550
中文字幕
Might get the job done super fast, but it's probably the wrong instinct,

758
00:37:05,550 --> 00:37:07,170
中文字幕
because it's going to get harder and harder to maintain.

759
00:37:07,170 --> 00:37:08,060
中文字幕
Now, why is that?

760
00:37:08,060 --> 00:37:10,220
中文字幕
You've played HTML a couple of weeks ago.

761
00:37:10,220 --> 00:37:13,940
中文字幕
And recall from that problem set when you had to make a home page,

762
00:37:13,940 --> 00:37:17,540
中文字幕
you probably found yourselves copying and pasting across your two,

763
00:37:17,540 --> 00:37:20,930
中文字幕
or three, or four pages because you wanted them to kind of look the same.

764
00:37:20,930 --> 00:37:23,720
中文字幕
And therefore it made sense for them to have some commonalities.

765
00:37:23,720 --> 00:37:28,730
中文字幕
But in HTML alone, there was no way to say use the same layout for my whole

766
00:37:28,730 --> 00:37:32,060
中文字幕
site-- use the same color scheme, the same fonts, the same CSS--

767
00:37:32,060 --> 00:37:35,510
中文字幕
but just change the body of the page for each individual page.

768
00:37:35,510 --> 00:37:38,010
中文字幕
And so some of you very rightly on discourse and beyond like

769
00:37:38,010 --> 00:37:39,880
中文字幕
posted questions asking, could you do this?

770
00:37:39,880 --> 00:37:43,030
中文字幕
And you can't really in HTML alone.

771
00:37:43,030 --> 00:37:46,050
中文字幕
But now that we have access to Python, an actual programming language

772
00:37:46,050 --> 00:37:48,330
中文字幕
they can do things logically, now you can actually

773
00:37:48,330 --> 00:37:50,490
中文字幕
start to factor those things out, too.

774
00:37:50,490 --> 00:37:57,000
中文字幕
And notice in this file, success.html, as well as in index.html,

775
00:37:57,000 --> 00:38:00,120
中文字幕
what are some of the commonalities, suffice it to say?

776
00:38:00,120 --> 00:38:02,520
中文字幕
The form is only in one of them, but what

777
00:38:02,520 --> 00:38:06,190
中文字幕
else is obviously redundant everywhere?

778
00:38:06,190 --> 00:38:10,840
中文字幕
The title, the head of the page more generally, the doctype at the very top,

779
00:38:10,840 --> 00:38:11,760
中文字幕
the body tag alone.

780
00:38:11,760 --> 00:38:14,850
中文字幕
And you could imagine there'd be even more details like from your own home

781
00:38:14,850 --> 00:38:18,350
中文字幕
pages that you wanted to be the same across multiple pages.

782
00:38:18,350 --> 00:38:22,120
中文字幕
So let's actually take a look at a refactorization of this code,

783
00:38:22,120 --> 00:38:25,090
中文字幕
the one I did write in advance in froshim0,

784
00:38:25,090 --> 00:38:28,030
中文字幕
and you'll see why it actually makes sense

785
00:38:28,030 --> 00:38:30,820
中文字幕
to have not only multiple files, each of which

786
00:38:30,820 --> 00:38:34,060
中文字幕
represents one of your routes or your views,

787
00:38:34,060 --> 00:38:37,720
中文字幕
but also to have this file called layout.html.

788
00:38:37,720 --> 00:38:40,570
中文字幕
In Flask, when building a web application that you know

789
00:38:40,570 --> 00:38:43,570
中文字幕
is going to follow a certain structural pattern, commonalities

790
00:38:43,570 --> 00:38:46,790
中文字幕
across all of your pages, you can actually do this.

791
00:38:46,790 --> 00:38:52,570
中文字幕
So in this file here, layout.html is a whole bunch of hardcoded HTML.

792
00:38:52,570 --> 00:38:53,540
中文字幕
And it's pretty simple.

793
00:38:53,540 --> 00:38:57,830
中文字幕
It's got my HTML tag, head tag, title tag, body tag, and a few other things,

794
00:38:57,830 --> 00:38:59,870
中文字幕
but that's the general structure of the page.

795
00:38:59,870 --> 00:39:02,290
中文字幕
And notice it has this funky syntax in the middle.

796
00:39:02,290 --> 00:39:04,960
中文字幕
In white here is what's called the block.

797
00:39:04,960 --> 00:39:07,010
中文字幕
This is now Flask specific.

798
00:39:07,010 --> 00:39:09,760
中文字幕
Just like Flask supports those two curly braces on the left

799
00:39:09,760 --> 00:39:12,520
中文字幕
and the right that says put a value here, flask

800
00:39:12,520 --> 00:39:17,230
中文字幕
also supports this other notation, curly brace percent and percent curly

801
00:39:17,230 --> 00:39:22,900
中文字幕
brace that actually allows you to put placeholders for actual chunks of HTML.

802
00:39:22,900 --> 00:39:26,050
中文字幕
Not just variables, but actual chunks of HTML.

803
00:39:26,050 --> 00:39:29,470
中文字幕
And so this layout you can think of as a mold or a template

804
00:39:29,470 --> 00:39:33,780
中文字幕
literally that all of your other pages are going to be structured based on,

805
00:39:33,780 --> 00:39:37,180
中文字幕
but they are going to vary in this line and only this line.

806
00:39:37,180 --> 00:39:40,600
中文字幕
And we're going to put as much HTML between the body tags as we want,

807
00:39:40,600 --> 00:39:42,070
中文字幕
the open and the close tag.

808
00:39:42,070 --> 00:39:45,860
中文字幕
This just indicates to Flask this is the stuff that should be changing.

809
00:39:45,860 --> 00:39:50,070
中文字幕
So if I now look at my index.html, which recall earlier

810
00:39:50,070 --> 00:39:53,260
中文字幕
contained my form index.html.

811
00:39:53,260 --> 00:39:55,780
中文字幕
Notice that here's the form, and I finished it earlier.

812
00:39:55,780 --> 00:39:57,990
中文字幕
I went ahead and typed out all of the freshman dorms,

813
00:39:57,990 --> 00:39:59,260
中文字幕
not just the two of them.

814
00:39:59,260 --> 00:40:01,840
中文字幕
And you'll see that the file starts almost the same

815
00:40:01,840 --> 00:40:03,980
中文字幕
and then continues with more stuff.

816
00:40:03,980 --> 00:40:07,090
中文字幕
But notice what's missing from index.html this time.

817
00:40:07,090 --> 00:40:08,350
中文字幕
No doctype.

818
00:40:08,350 --> 00:40:09,820
中文字幕
No HTML tag.

819
00:40:09,820 --> 00:40:12,340
中文字幕
No head tag, no title tag, no body tag.

820
00:40:12,340 --> 00:40:14,770
中文字幕
All of the common stuff has been factored out.

821
00:40:14,770 --> 00:40:18,280
中文字幕
But there's some funky new syntax that, again, is Flask specific.

822
00:40:18,280 --> 00:40:22,090
中文字幕
This first line is the link between this file and the layout.

823
00:40:22,090 --> 00:40:25,870
中文字幕
That first line says, hey Flask, this index.html file

824
00:40:25,870 --> 00:40:29,140
中文字幕
extends the definition of layout.html.

825
00:40:29,140 --> 00:40:31,660
中文字幕
So it says grab that template and plug myself in there.

826
00:40:31,660 --> 00:40:32,920
中文字幕
What do you want to plug in?

827
00:40:32,920 --> 00:40:34,300
中文字幕
The same syntax here.

828
00:40:34,300 --> 00:40:37,570
中文字幕
When you actually put stuff between the block tag

829
00:40:37,570 --> 00:40:42,130
中文字幕
and the end block tag, which is down below, that's when you say to Flask,

830
00:40:42,130 --> 00:40:46,540
中文字幕
go ahead and take this stuff and plug it into the placeholder in the layout.

831
00:40:46,540 --> 00:40:51,130
中文字幕
So meanwhile, the success page also now can be a little more sophisticated.

832
00:40:51,130 --> 00:40:54,070
中文字幕
If I go into success, it's not very complicated.

833
00:40:54,070 --> 00:40:55,960
中文字幕
And honestly, it doesn't even look like HTML

834
00:40:55,960 --> 00:40:58,600
中文字幕
anymore because we're using these more dynamic features.

835
00:40:58,600 --> 00:41:01,180
中文字幕
But this just says, hey Flask, use the same layout

836
00:41:01,180 --> 00:41:03,410
中文字幕
so the page is structured exactly the same.

837
00:41:03,410 --> 00:41:07,420
中文字幕
But for the body, go ahead and plug in this value instead.

838
00:41:07,420 --> 00:41:10,220
中文字幕
So indeed, when you go ahead and load this success message,

839
00:41:10,220 --> 00:41:12,100
中文字幕
you see this message here-- not just success,

840
00:41:12,100 --> 00:41:14,220
中文字幕
I expounded here and said you are registered.

841
00:41:14,220 --> 00:41:16,600
中文字幕
Well, not really, that's because there's no database yet.

842
00:41:16,600 --> 00:41:19,240
中文字幕
But that's going to generate a full fledged HTML page.

843
00:41:19,240 --> 00:41:20,290
中文字幕
And what about failure?

844
00:41:20,290 --> 00:41:22,810
中文字幕
Before I was just cheating and just saying return failure,

845
00:41:22,810 --> 00:41:24,640
中文字幕
quote-unquote, no HTML at all.

846
00:41:24,640 --> 00:41:27,100
中文字幕
The failure page is going to be almost the same,

847
00:41:27,100 --> 00:41:30,220
中文字幕
but now I can actually provide some descriptive text.

848
00:41:30,220 --> 00:41:33,400
中文字幕
This body just says you must provide your name and dorm,

849
00:41:33,400 --> 00:41:37,040
中文字幕
thereby admonishing the user for not having cooperated properly.

850
00:41:37,040 --> 00:41:40,120
中文字幕
So now your home pages, if you kind of extrapolate from this,

851
00:41:40,120 --> 00:41:43,630
中文字幕
could have the exact same layout, aesthetics and menu bars,

852
00:41:43,630 --> 00:41:46,760
中文字幕
and all of that fanciness, but only the content would have to change.

853
00:41:46,760 --> 00:41:49,430
中文字幕
And you can get out of the business of just copying and pasting.

854
00:41:49,430 --> 00:41:51,970
中文字幕
So there, too, to your question earlier about dynamism,

855
00:41:51,970 --> 00:41:54,420
中文字幕
the dynamism doesn't have to just come from the user.

856
00:41:54,420 --> 00:41:58,180
中文字幕
It can also come from the construction dynamically of a website

857
00:41:58,180 --> 00:41:59,200
中文字幕
based on multiple pages.

858
00:41:59,200 --> 00:42:00,910
中文字幕
So at the end of the day, the browser has

859
00:42:00,910 --> 00:42:05,560
中文字幕
no idea that Python exists, has no familiarity with Flask.

860
00:42:05,560 --> 00:42:08,020
中文字幕
All the browser still sees is an HTML page.

861
00:42:08,020 --> 00:42:10,030
中文字幕
But what Flask and in turn Python are doing

862
00:42:10,030 --> 00:42:13,630
中文字幕
for us is constructing that page dynamically, following

863
00:42:13,630 --> 00:42:15,850
中文字幕
the rules from two weeks to go in HTML and CSS,

864
00:42:15,850 --> 00:42:19,650
中文字幕
and following last week's rules on how Python works.

865
00:42:19,650 --> 00:42:22,600
中文字幕
Questions?

866
00:42:22,600 --> 00:42:25,550
中文字幕
So even though 

867
00:42:33,930 --> 00:42:35,070
中文字幕
It's not.

868
00:42:35,070 --> 00:42:36,180
中文字幕
Good question.

869
00:42:36,180 --> 00:42:39,300
中文字幕
This new syntax, the double curly braces that we saw earlier and now

870
00:42:39,300 --> 00:42:43,410
中文字幕
the curly brace percent signs, this is actually yet another language

871
00:42:43,410 --> 00:42:44,420
中文字幕
called jinja--

872
00:42:44,420 --> 00:42:48,610
中文字幕
J-I-N-J-A-- which is a templating language.

873
00:42:48,610 --> 00:42:51,450
中文字幕
And there's dozens of these things in the world, people just come up

874
00:42:51,450 --> 00:42:52,740
中文字幕
with their own syntax.

875
00:42:52,740 --> 00:42:56,370
中文字幕
And the reason for the funky syntax is that the author of jinja

876
00:42:56,370 --> 00:42:58,920
中文字幕
presumably could think of no other language that

877
00:42:58,920 --> 00:43:01,530
中文字幕
uses like a curly brace and a percent sign

878
00:43:01,530 --> 00:43:03,150
中文字幕
and a percent sign and a curly brace.

879
00:43:03,150 --> 00:43:05,030
中文字幕
And so therefore they decided, you know what,

880
00:43:05,030 --> 00:43:08,370
中文字幕
I'm going to use this syntax because it will look distinct from HTML,

881
00:43:08,370 --> 00:43:11,970
中文字幕
and CSS, and Python So that frameworks like Flask

882
00:43:11,970 --> 00:43:14,390
中文字幕
don't confuse it with something else.

883
00:43:14,390 --> 00:43:18,370
中文字幕
So do you have to upload that into ,, or is it automatic?

884
00:43:18,370 --> 00:43:20,120
中文字幕
It's automatically supported.

885
00:43:20,120 --> 00:43:23,550
中文字幕
So Flask by default supports jinja.

886
00:43:23,550 --> 00:43:25,890
中文字幕
It could have come up with its own templating syntax.

887
00:43:25,890 --> 00:43:29,180
中文字幕
But whoever invented Flask decided I don't need to reinvent this wheel,

888
00:43:29,180 --> 00:43:31,140
中文字幕
someone else already made a templating language

889
00:43:31,140 --> 00:43:32,640
中文字幕
that gives me this functionality.

890
00:43:32,640 --> 00:43:34,780
中文字幕
So I'm going to combine our works into one.

891
00:43:34,780 --> 00:43:36,660
中文字幕
And I didn't call it a language a moment ago,

892
00:43:36,660 --> 00:43:39,250
中文字幕
because frankly, HTML, CSS, Python, JavaScript--

893
00:43:39,250 --> 00:43:41,340
中文字幕
I mean, we're already running out of fingers here.

894
00:43:41,340 --> 00:43:43,810
中文字幕
But jinja is, indeed, yet another language.

895
00:43:43,810 --> 00:43:46,050
中文字幕
It's just not a programming language per se,

896
00:43:46,050 --> 00:43:48,180
中文字幕
though it will have some control flow features

897
00:43:48,180 --> 00:43:49,470
中文字幕
that we'll see in a little bit.

898
00:43:49,470 --> 00:43:51,150
中文字幕
It's just much more limited than Python.

899
00:43:51,150 --> 00:43:52,100
中文字幕
Other questions?

900
00:43:52,100 --> 00:43:54,780
中文字幕
Is it possible to combine the success and failure HTML

901
00:43:54,780 --> 00:43:57,490
中文字幕
files into one just for better design?

902
00:43:57,490 --> 00:43:58,620
中文字幕
Good question.

903
00:43:58,620 --> 00:44:03,180
中文字幕
Could you combine the success and the failure pages into one?

904
00:44:03,180 --> 00:44:04,110
中文字幕
Short answer, yes.

905
00:44:04,110 --> 00:44:07,110
中文字幕
And let me not show it yet, because it'll get a little more complicated.

906
00:44:07,110 --> 00:44:11,370
中文字幕
But yes, I could imagine passing a variable in that's a Boolean--

907
00:44:11,370 --> 00:44:12,420
中文字幕
true or false--

908
00:44:12,420 --> 00:44:13,800
中文字幕
into just one of these templates.

909
00:44:13,800 --> 00:44:17,190
中文字幕
And maybe I call the new template result.html.

910
00:44:17,190 --> 00:44:20,700
中文字幕
I can actually then have an if condition in my template that

911
00:44:20,700 --> 00:44:23,100
中文字幕
says if the result is true, say this.

912
00:44:23,100 --> 00:44:25,510
中文字幕
Else if the result is false, say this other thing.

913
00:44:25,510 --> 00:44:27,030
中文字幕
So you could do that, yes.

914
00:44:27,030 --> 00:44:31,040
中文字幕
Generally, though, it's probably cleaner to keep messaging separate

915
00:44:31,040 --> 00:44:32,670
中文字幕
if they functionally do something else.

916
00:44:32,670 --> 00:44:35,430
中文字幕
After all, these files are pretty small anyway.

917
00:44:35,430 --> 00:44:36,110
中文字幕
Yeah?

918
00:44:36,110 --> 00:44:38,070
中文字幕
Just for question, what does the user

919
00:44:38,070 --> 00:44:42,000
中文字幕
see if they were to open up the debugging console on Chrome

920
00:44:42,000 --> 00:44:46,470
中文字幕
and look at at it, what do they see as the HTML that shows up?

921
00:44:46,470 --> 00:44:47,890
中文字幕
Really good question.

922
00:44:47,890 --> 00:44:48,840
中文字幕
What does the user see?

923
00:44:48,840 --> 00:44:51,870
中文字幕
We can answer this by just literally opening Chrome and opening

924
00:44:51,870 --> 00:44:53,970
中文字幕
View Page Source or the Inspector.

925
00:44:53,970 --> 00:44:55,290
中文字幕
This is what the browser sees.

926
00:44:55,290 --> 00:44:58,770
中文字幕
So when I claimed earlier that the browser has no idea of Python or Flask

927
00:44:58,770 --> 00:45:00,720
中文字幕
are even involved, that is, indeed, true.

928
00:45:00,720 --> 00:45:02,970
中文字幕
Because what browser's receiving at the end of the day

929
00:45:02,970 --> 00:45:06,390
中文字幕
is just this, the dynamically constructed HTML.

930
00:45:06,390 --> 00:45:06,980
中文字幕
Good question.

931
00:45:06,980 --> 00:45:07,770
中文字幕
Yeah?

932
00:45:07,770 --> 00:45:11,090
中文字幕
can you also put Python code in there,

933
00:45:11,090 --> 00:45:11,990
中文字幕
or is it just HTML?

934
00:45:11,990 --> 00:45:12,580
中文字幕
Good question.

935
00:45:12,580 --> 00:45:14,410
中文字幕
We'll see more of this in just a little bit.

936
00:45:14,410 --> 00:45:17,840
中文字幕
The question is, can you between the curly brace and percent signs

937
00:45:17,840 --> 00:45:19,630
中文字幕
put actual Python code?

938
00:45:19,630 --> 00:45:23,170
中文字幕
You can put stuff that looks like Python code, but not all of Python.

939
00:45:23,170 --> 00:45:24,710
中文字幕
And so more of that in a bit.

940
00:45:24,710 --> 00:45:26,200
中文字幕
Is there a function call or something like that?

941
00:45:26,200 --> 00:45:27,700
中文字幕
Only certain functions.

942
00:45:27,700 --> 00:45:30,310
中文字幕
Templating languages, long story short, are sandbox so

943
00:45:30,310 --> 00:45:33,310
中文字幕
that they are not as expressive as a real programming language.

944
00:45:33,310 --> 00:45:36,110
中文字幕
Otherwise you are vulnerable to potential hacks.

945
00:45:36,110 --> 00:45:38,740
中文字幕
You want their functionality to be very limited because they're

946
00:45:38,740 --> 00:45:42,820
中文字幕
only about displaying data, not about thinking or doing logic generally.

947
00:45:42,820 --> 00:45:43,780
中文字幕
More on that in a bit.

948
00:45:43,780 --> 00:45:45,370
中文字幕
All right, that was a lot all at once.

949
00:45:45,370 --> 00:45:48,160
中文字幕
Let's take a five minute break here, turn on some music, come back,

950
00:45:48,160 --> 00:45:49,770
中文字幕
and we'll make this act better.

951
00:45:49,770 --> 00:45:51,310
中文字幕
All right, we are back.

952
00:45:51,310 --> 00:45:54,820
中文字幕
So to recap where froshim0 left off, we now

953
00:45:54,820 --> 00:45:58,120
中文字幕
have this structure which is pretty much conventional.

954
00:45:58,120 --> 00:46:00,640
中文字幕
Any web application we make here on out is

955
00:46:00,640 --> 00:46:04,540
中文字幕
going to follow this pattern of having an application.py entry point where

956
00:46:04,540 --> 00:46:08,110
中文字幕
all the interesting stuff starts, a layout.html file

957
00:46:08,110 --> 00:46:09,820
中文字幕
in your templates directory that lays out

958
00:46:09,820 --> 00:46:13,900
中文字幕
the whole site and any commonalities, and then one or more other pages that

959
00:46:13,900 --> 00:46:17,440
中文字幕
actually represent your individual views that correspond to one or more

960
00:46:17,440 --> 00:46:18,760
中文字幕
of your actual routes.

961
00:46:18,760 --> 00:46:21,430
中文字幕
So now we're at the point of a stable baseline,

962
00:46:21,430 --> 00:46:25,000
中文字幕
but had we dived in right to this, it would perhaps not make as much sense

963
00:46:25,000 --> 00:46:27,920
中文字幕
as to why we did this various factorization.

964
00:46:27,920 --> 00:46:29,260
中文字幕
So let's now improve this.

965
00:46:29,260 --> 00:46:31,930
中文字幕
Because of course, if you look at success.html,

966
00:46:31,930 --> 00:46:33,410
中文字幕
it just claims you are registered.

967
00:46:33,410 --> 00:46:34,580
中文字幕
Well, not really.

968
00:46:34,580 --> 00:46:40,730
中文字幕
Because in application.py, did we do anything with the user's information?

969
00:46:40,730 --> 00:46:41,230
中文字幕
No.

970
00:46:41,230 --> 00:46:43,140
中文字幕
We just checked, did they give us information?

971
00:46:43,140 --> 00:46:44,560
中文字幕
And if so, we claim success.

972
00:46:44,560 --> 00:46:48,040
中文字幕
Else if they missed their name and/or their dorm, we just claimed failure.

973
00:46:48,040 --> 00:46:51,550
中文字幕
So what might a data structure be in Python

974
00:46:51,550 --> 00:46:53,020
中文字幕
where we could store registrants?

975
00:46:53,020 --> 00:46:55,150
中文字幕
We don't have databases yet, we don't have SQL yet.

976
00:46:55,150 --> 00:46:56,340
中文字幕
That's a week ahead.

977
00:46:56,340 --> 00:46:57,040
中文字幕
Array.

978
00:46:57,040 --> 00:46:59,410
中文字幕
Yeah, we could use an array, otherwise known

979
00:46:59,410 --> 00:47:00,430
中文字幕
as a list in Python.

980
00:47:00,430 --> 00:47:02,500
中文字幕
So let me propose how we might do this.

981
00:47:02,500 --> 00:47:08,050
中文字幕
Let me actually open up froshims1 for our second iteration of this program.

982
00:47:08,050 --> 00:47:10,510
中文字幕
And in application.py, notice this.

983
00:47:10,510 --> 00:47:12,970
中文字幕
At the very top of the file, not only am I

984
00:47:12,970 --> 00:47:16,390
中文字幕
creating my application using the same line as before,

985
00:47:16,390 --> 00:47:19,990
中文字幕
and I've commented things this time in advance using the hash symbol,

986
00:47:19,990 --> 00:47:22,660
中文字幕
notice that I claim that on line 6 and 7 here, here

987
00:47:22,660 --> 00:47:25,540
中文字幕
is an empty list for all of the students who have registered.

988
00:47:25,540 --> 00:47:27,470
中文字幕
This way we can keep the information around.

989
00:47:27,470 --> 00:47:29,770
中文字幕
And we only did this briefly last time, but does anyone

990
00:47:29,770 --> 00:47:33,330
中文字幕
remember how you add something to a list in Python?

991
00:47:33,330 --> 00:47:35,100
中文字幕
By what function?

992
00:47:35,100 --> 00:47:36,030
中文字幕
Append.

993
00:47:36,030 --> 00:47:38,590
中文字幕
So if you have .append at the end of a list's name,

994
00:47:38,590 --> 00:47:39,760
中文字幕
you can add something to it.

995
00:47:39,760 --> 00:47:41,110
中文字幕
So where is that going to go?

996
00:47:41,110 --> 00:47:44,840
中文字幕
Well, here is my route for slash, implies, again, get by default.

997
00:47:44,840 --> 00:47:46,840
中文字幕
That's the default route that a human might get,

998
00:47:46,840 --> 00:47:50,470
中文字幕
and they are going to see index.html, which contains that form.

999
00:47:50,470 --> 00:47:55,270
中文字幕
If I scroll down now, you'll see that I have a register route just like before.

1000
00:47:55,270 --> 00:47:58,330
中文字幕
But I'm doing one additional step.

1001
00:47:58,330 --> 00:48:01,430
中文字幕
Which is the new line here, to be clear?

1002
00:48:01,430 --> 00:48:03,100
中文字幕
Yeah, 26.

1003
00:48:03,100 --> 00:48:05,420
中文字幕
So I could implement this in any number of ways.

1004
00:48:05,420 --> 00:48:08,120
中文字幕
But the key detail is that I reference the list name-- students,

1005
00:48:08,120 --> 00:48:09,620
中文字幕
but I could have called it anything.

1006
00:48:09,620 --> 00:48:12,870
中文字幕
.append, as someone proposed, is how you add something to the end of the list.

1007
00:48:12,870 --> 00:48:14,320
中文字幕
And then I can add anything I want.

1008
00:48:14,320 --> 00:48:16,510
中文字幕
To keep it simple, I'm just going to add a string.

1009
00:48:16,510 --> 00:48:18,430
中文字幕
And I'm going to keep it super simple and just

1010
00:48:18,430 --> 00:48:21,940
中文字幕
say the string is so-and-so from such and such a dorm.

1011
00:48:21,940 --> 00:48:25,480
中文字幕
So David from Matthews Hall, or Brian from wherever.

1012
00:48:25,480 --> 00:48:28,770
中文字幕
And so here we have placeholders using f strings in Python.

1013
00:48:28,770 --> 00:48:30,520
中文字幕
So this has nothing to do with Flask, this

1014
00:48:30,520 --> 00:48:33,550
中文字幕
has nothing to do with jinja or anything we just talked about.

1015
00:48:33,550 --> 00:48:37,450
中文字幕
This has to do everything with last week's syntax in Python alone.

1016
00:48:37,450 --> 00:48:42,050
中文字幕
So this appends to that list this name from this dorm.

1017
00:48:42,050 --> 00:48:44,830
中文字幕
So let's go ahead now and try this version out.

1018
00:48:44,830 --> 00:48:50,200
中文字幕
If I go into my source sub and directory for today's code into froshims1

1019
00:48:50,200 --> 00:48:54,010
中文字幕
and run flask run, we'll see a URL that I can now visit.

1020
00:48:54,010 --> 00:48:56,630
中文字幕
Let me go ahead and open that for froshims1.

1021
00:48:56,630 --> 00:48:59,140
中文字幕
Notice that I have that complete dropdown now.

1022
00:48:59,140 --> 00:49:02,890
中文字幕
Let me go ahead and say David, but I'm not going to tell you my dorm

1023
00:49:02,890 --> 00:49:04,720
中文字幕
yet and try to register.

1024
00:49:04,720 --> 00:49:07,210
中文字幕
Now I see a more friendly message, not just failure.

1025
00:49:07,210 --> 00:49:10,030
中文字幕
And that's because of my new and improved template.

1026
00:49:10,030 --> 00:49:12,670
中文字幕
OK, I'll go ahead and be David, and I'll be from Matthews here.

1027
00:49:12,670 --> 00:49:14,800
中文字幕
Let me go ahead and register and voila.

1028
00:49:14,800 --> 00:49:17,340
中文字幕
Now we see David from Matthews has registered.

1029
00:49:17,340 --> 00:49:20,260
中文字幕
And it seems to be all of a sudden in the form of a new bulleted list.

1030
00:49:20,260 --> 00:49:22,120
中文字幕
But where did that actually come from?

1031
00:49:22,120 --> 00:49:22,920
中文字幕
Well, I don't know.

1032
00:49:22,920 --> 00:49:23,830
中文字幕
Let me try this again.

1033
00:49:23,830 --> 00:49:26,860
中文字幕
Let me go back to slash, which is the route that gives me the form.

1034
00:49:26,860 --> 00:49:29,760
中文字幕
Let me go ahead and type in not David this time, but say, Brian.

1035
00:49:29,760 --> 00:49:31,140
中文字幕
And Brian, which dorm are you in?

1036
00:49:31,140 --> 00:49:33,120
中文字幕
Pennypacker.

1037
00:49:33,120 --> 00:49:36,070
中文字幕
So let me choose this from the menu instead and click Register.

1038
00:49:36,070 --> 00:49:37,690
中文字幕
And now we see Brian from Pennypacker.

1039
00:49:37,690 --> 00:49:39,970
中文字幕
So somehow the application is changing state,

1040
00:49:39,970 --> 00:49:43,730
中文字幕
and notice the URL that we're at is called slash registrants.

1041
00:49:43,730 --> 00:49:47,530
中文字幕
So that seems to be a third route this time that apparently is not interactive

1042
00:49:47,530 --> 00:49:50,480
中文字幕
per se, it just spits out the list of registered students.

1043
00:49:50,480 --> 00:49:53,470
中文字幕
So let's just put the proverbial engineering hat on.

1044
00:49:53,470 --> 00:49:56,950
中文字幕
If we go about implementing this slash registrants route,

1045
00:49:56,950 --> 00:50:03,970
中文字幕
logically what must that code be doing in verbal pseudocode, if you will?

1046
00:50:03,970 --> 00:50:05,310
中文字幕
A for loop?

1047
00:50:05,310 --> 00:50:07,600
中文字幕
Like a for loop, iterating over what?

1048
00:50:07,600 --> 00:50:10,170
中文字幕
In the list that saves all the registrants.

1049
00:50:10,170 --> 00:50:11,100
中文字幕
Yeah.

1050
00:50:11,100 --> 00:50:13,140
中文字幕
Iterating over the list of students which

1051
00:50:13,140 --> 00:50:14,640
中文字幕
contains all of those registrants.

1052
00:50:14,640 --> 00:50:18,990
中文字幕
And the template, meanwhile, probably has like an LI tag for list item

1053
00:50:18,990 --> 00:50:22,480
中文字幕
and a UL tag for unordered list, which gives me the bulleted list.

1054
00:50:22,480 --> 00:50:23,740
中文字幕
So let's take a look at that.

1055
00:50:23,740 --> 00:50:25,990
中文字幕
So how do we follow these breadcrumbs?

1056
00:50:25,990 --> 00:50:29,310
中文字幕
Well, if I scroll up in application.py, we'll

1057
00:50:29,310 --> 00:50:31,440
中文字幕
see a route called slash registrants.

1058
00:50:31,440 --> 00:50:33,840
中文字幕
And you'll see that all it does apparently

1059
00:50:33,840 --> 00:50:36,860
中文字幕
is it returns a template called registered.html,

1060
00:50:36,860 --> 00:50:40,320
中文字幕
where registered.html is probably a template that is generating that list.

1061
00:50:40,320 --> 00:50:42,900
中文字幕
But there's something different this time.

1062
00:50:42,900 --> 00:50:44,160
中文字幕
I'm passing in an argument.

1063
00:50:44,160 --> 00:50:45,390
中文字幕
And we saw this earlier.

1064
00:50:45,390 --> 00:50:48,720
中文字幕
When I wanted to pass in name equals David or name equals Brian,

1065
00:50:48,720 --> 00:50:51,450
中文字幕
I just grabbed that from a variable.

1066
00:50:51,450 --> 00:50:54,560
中文字幕
This time I'm not doing request.args, I'm not doing request.form.

1067
00:50:54,560 --> 00:50:55,600
中文字幕
Because what is students?

1068
00:50:58,400 --> 00:51:00,750
中文字幕
Where did this come from?

1069
00:51:00,750 --> 00:51:02,510
中文字幕
That's the list from higher up.

1070
00:51:02,510 --> 00:51:06,470
中文字幕
Recall that we have this global variable at the top of the program, students,

1071
00:51:06,470 --> 00:51:08,240
中文字幕
which is initialized to an empty list.

1072
00:51:08,240 --> 00:51:11,990
中文字幕
But recall that we keep appending to it in my register route.

1073
00:51:11,990 --> 00:51:13,850
中文字幕
So I can go ahead and say, you know what?

1074
00:51:13,850 --> 00:51:18,020
中文字幕
Go ahead and pass into register.html a template-- or rather, a list--

1075
00:51:18,020 --> 00:51:21,280
中文字幕
called students whose value is exactly that.

1076
00:51:21,280 --> 00:51:24,200
中文字幕
And again, it's stupid looking that you have the same word on the left

1077
00:51:24,200 --> 00:51:26,120
中文字幕
and the right of the variable name.

1078
00:51:26,120 --> 00:51:27,370
中文字幕
You could do this differently.

1079
00:51:27,370 --> 00:51:30,290
中文字幕
Again, you could say foo, you could say x, or y, or anything.

1080
00:51:30,290 --> 00:51:32,670
中文字幕
But frankly, it tends to make most sense, just pass

1081
00:51:32,670 --> 00:51:36,230
中文字幕
in the same name as the variable that you care about so that the template can

1082
00:51:36,230 --> 00:51:37,320
中文字幕
see exactly that.

1083
00:51:37,320 --> 00:51:38,570
中文字幕
So what's the next breadcrumb?

1084
00:51:38,570 --> 00:51:40,650
中文字幕
If I want to understand exactly what is happening,

1085
00:51:40,650 --> 00:51:43,600
中文字幕
what file should I open up next perhaps?

1086
00:51:43,600 --> 00:51:44,970
中文字幕
Probably register.html.

1087
00:51:44,970 --> 00:51:46,150
中文字幕
So let's go in there.

1088
00:51:46,150 --> 00:51:48,260
中文字幕
It's in my templates directory by definition,

1089
00:51:48,260 --> 00:51:51,850
中文字幕
and you'll see, indeed, a failure message which allows me to error check.

1090
00:51:51,850 --> 00:51:55,700
中文字幕
Index, which contains the form; layout, which contains the overall structure;

1091
00:51:55,700 --> 00:51:58,390
中文字幕
and finally, registered.html.

1092
00:51:58,390 --> 00:52:01,960
中文字幕
And now we can answer the question that you asked earlier about Python code

1093
00:52:01,960 --> 00:52:03,020
中文字幕
in the template.

1094
00:52:03,020 --> 00:52:05,660
中文字幕
So this one looks more advanced than before,

1095
00:52:05,660 --> 00:52:07,760
中文字幕
but notice it follows a pattern.

1096
00:52:07,760 --> 00:52:10,360
中文字幕
Register.html extends that same layout.

1097
00:52:10,360 --> 00:52:13,120
中文字幕
So it borrows from that same mold, so it looks the same.

1098
00:52:13,120 --> 00:52:16,570
中文字幕
The body of this page, though, is just this snippet of HTML.

1099
00:52:16,570 --> 00:52:19,390
中文字幕
Give me an unordered list, open and closed, and this

1100
00:52:19,390 --> 00:52:21,040
中文字幕
is what you can do now with jinja.

1101
00:52:21,040 --> 00:52:23,260
中文字幕
Again, it's almost identical to Python, so you

1102
00:52:23,260 --> 00:52:26,360
中文字幕
don't have to worry about thinking about learning yet another language.

1103
00:52:26,360 --> 00:52:28,820
中文字幕
It's just a subset of Python essentially.

1104
00:52:28,820 --> 00:52:33,370
中文字幕
So if I want to output in the list of all of the students,

1105
00:52:33,370 --> 00:52:37,260
中文字幕
I use my jinja syntax here, my template syntax with curly brace percent.

1106
00:52:37,260 --> 00:52:38,720
中文字幕
And I say for student and students.

1107
00:52:38,720 --> 00:52:42,340
中文字幕
Just like in Python, that induces an iteration over that list.

1108
00:52:42,340 --> 00:52:43,760
中文字幕
And then what do I want to output?

1109
00:52:43,760 --> 00:52:46,810
中文字幕
Well, we can borrow our curly braces from our name example

1110
00:52:46,810 --> 00:52:51,460
中文字幕
and just do list item, plug in the name of the student, close list item.

1111
00:52:51,460 --> 00:52:53,080
中文字幕
And then endfor.

1112
00:52:53,080 --> 00:52:55,240
中文字幕
So this is the one stupid thing with the templates.

1113
00:52:55,240 --> 00:52:58,360
中文字幕
Whereas in Python proper, recall that you can just

1114
00:52:58,360 --> 00:53:00,550
中文字幕
say for student in students, you have a colon

1115
00:53:00,550 --> 00:53:02,740
中文字幕
and then indentation handles everything.

1116
00:53:02,740 --> 00:53:04,720
中文字幕
The problem with that in the world of HTML

1117
00:53:04,720 --> 00:53:07,660
中文字幕
is that browsers recall ignore all whitespace,

1118
00:53:07,660 --> 00:53:10,750
中文字幕
like whitespace has no special significance, but in Python it does.

1119
00:53:10,750 --> 00:53:14,020
中文字幕
So the way people solve this is you literally,

1120
00:53:14,020 --> 00:53:16,090
中文字幕
if a little weirdly, say endfor--

1121
00:53:16,090 --> 00:53:17,810
中文字幕
one word, no space.

1122
00:53:17,810 --> 00:53:18,400
中文字幕
And that's it.

1123
00:53:18,400 --> 00:53:20,800
中文字幕
And indentation helps you read something like this.

1124
00:53:20,800 --> 00:53:22,690
中文字幕
So what is the HTML I'm getting back?

1125
00:53:22,690 --> 00:53:23,860
中文字幕
I can actually look at this.

1126
00:53:23,860 --> 00:53:26,200
中文字幕
Let me go ahead and view page source in Chrome,

1127
00:53:26,200 --> 00:53:28,570
中文字幕
and you'll see it's not quite as pretty as might be ideal

1128
00:53:28,570 --> 00:53:31,410
中文字幕
because there's a lot of whitespace which comes from those templates

1129
00:53:31,410 --> 00:53:33,340
中文字幕
from my having pretty printed those, as well.

1130
00:53:33,340 --> 00:53:36,490
中文字幕
But this is syntactically correct, and I'm dynamically putting

1131
00:53:36,490 --> 00:53:40,120
中文字幕
this part inside of this layout.

1132
00:53:40,120 --> 00:53:42,740
中文字幕
Any questions, then, on this?

1133
00:53:42,740 --> 00:53:47,220
中文字幕
So if we restart the server, whatever's stored

1134
00:53:47,220 --> 00:53:49,180
中文字幕
in the list, that goes away, right?

1135
00:53:49,180 --> 00:53:50,300
中文字幕
Good question.

1136
00:53:50,300 --> 00:53:51,940
中文字幕
Let's kill Flask with control-c.

1137
00:53:51,940 --> 00:53:53,590
中文字幕
Let's rerun the server.

1138
00:53:53,590 --> 00:53:57,640
中文字幕
And let me go back to my registrants route and reload.

1139
00:53:57,640 --> 00:54:01,090
中文字幕
And sadly, yes, this is not the best way to register students for a sport.

1140
00:54:01,090 --> 00:54:04,570
中文字幕
Because if the server ever goes offline, loses power, you hit control-c,

1141
00:54:04,570 --> 00:54:06,670
中文字幕
you obviously, indeed, lose everyone.

1142
00:54:06,670 --> 00:54:08,620
中文字幕
And notice, too, even though we've generally

1143
00:54:08,620 --> 00:54:12,850
中文字幕
frowned upon using global variables, which this students list indeed

1144
00:54:12,850 --> 00:54:17,170
中文字幕
is, why did I define it up here in line 7 and not,

1145
00:54:17,170 --> 00:54:20,430
中文字幕
for instance, in my register route here?

1146
00:54:20,430 --> 00:54:23,320
中文字幕
Because indeed, I'm appending to the list here.

1147
00:54:23,320 --> 00:54:28,900
中文字幕
But I very deliberately did not declare the list there.

1148
00:54:28,900 --> 00:54:29,630
中文字幕
Yeah?

1149
00:54:29,630 --> 00:54:31,530
中文字幕
You're using it in other parts.

1150
00:54:31,530 --> 00:54:34,780
中文字幕
I'm using it elsewhere in my other routes, the registrants route.

1151
00:54:34,780 --> 00:54:38,180
中文字幕
And also even more to the point, if I declared a list here,

1152
00:54:38,180 --> 00:54:40,030
中文字幕
it becomes by definition a local variable.

1153
00:54:40,030 --> 00:54:41,830
中文字幕
Which means as soon as this function exits,

1154
00:54:41,830 --> 00:54:45,760
中文字幕
now I've just thrown away those students who register immediately not

1155
00:54:45,760 --> 00:54:47,340
中文字幕
even after a control-c.

1156
00:54:47,340 --> 00:54:49,510
中文字幕
So this was a better approach to do it, but it's not

1157
00:54:49,510 --> 00:54:51,850
中文字幕
what I did way back in my day.

1158
00:54:51,850 --> 00:54:54,130
中文字幕
I actually did something that was a little fancier.

1159
00:54:54,130 --> 00:54:56,350
中文字幕
So at the time, I didn't really know-- at least in,

1160
00:54:56,350 --> 00:54:58,490
中文字幕
what, 1997-- anything about databases.

1161
00:54:58,490 --> 00:55:01,120
中文字幕
I don't think I even knew about CSV files just yet, or at least

1162
00:55:01,120 --> 00:55:02,920
中文字幕
how to create them dynamically.

1163
00:55:02,920 --> 00:55:05,110
中文字幕
So I instead took this approach.

1164
00:55:05,110 --> 00:55:11,320
中文字幕
Let me go into froshims2, and it has noticed the same templates as before.

1165
00:55:11,320 --> 00:55:14,410
中文字幕
And indeed, I pretty much copied and pasted for this second example.

1166
00:55:14,410 --> 00:55:17,980
中文字幕
But in application.py, notice this fanciness.

1167
00:55:17,980 --> 00:55:22,300
中文字幕
So here I have almost the same thing up top in terms of Flask,

1168
00:55:22,300 --> 00:55:25,670
中文字幕
but I'm also using this OS library, more on that in a bit.

1169
00:55:25,670 --> 00:55:27,460
中文字幕
But what about line 2?

1170
00:55:27,460 --> 00:55:33,160
中文字幕
It's subtle, but I rattled this acronym off I think just once weeks ago, SMTP.

1171
00:55:33,160 --> 00:55:34,750
中文字幕
Does anyone know what that stands for?

1172
00:55:34,750 --> 00:55:36,410
中文字幕
Simple mail transfer protocol?

1173
00:55:36,410 --> 00:55:39,640
中文字幕
Yeah, simple mail transfer protocol-- email, that is.

1174
00:55:39,640 --> 00:55:41,440
中文字幕
So Python comes with built in functionality

1175
00:55:41,440 --> 00:55:43,870
中文字幕
via which you can send emails, and this is exactly what I

1176
00:55:43,870 --> 00:55:45,580
中文字幕
did when I first made this website.

1177
00:55:45,580 --> 00:55:47,650
中文字幕
Didn't know anything about databases, I didn't know anything

1178
00:55:47,650 --> 00:55:50,320
中文字幕
about saving things to files just yet, I was still learning.

1179
00:55:50,320 --> 00:55:53,050
中文字幕
But I didn't realize, hm, I could use programming

1180
00:55:53,050 --> 00:55:56,530
中文字幕
to send an email to the proctor or the RA who was overseeing the sports

1181
00:55:56,530 --> 00:55:59,470
中文字幕
program so that they could just save it in a folder

1182
00:55:59,470 --> 00:56:00,660
中文字幕
and know who had registered.

1183
00:56:00,660 --> 00:56:03,040
中文字幕
It's not super user friendly, but it at least

1184
00:56:03,040 --> 00:56:06,040
中文字幕
got the job done because they were then able to track everything.

1185
00:56:06,040 --> 00:56:11,030
中文字幕
So in this program, notice that I have my route for my form.

1186
00:56:11,030 --> 00:56:14,210
中文字幕
And I have this register route but a few new lines of code.

1187
00:56:14,210 --> 00:56:17,050
中文字幕
And you would only know how to do this by reading the documentation.

1188
00:56:17,050 --> 00:56:20,140
中文字幕
But in this case here, notice what I'm doing in my register route.

1189
00:56:20,140 --> 00:56:25,600
中文字幕
I'm first getting the user's name and their email this time and their dorm.

1190
00:56:25,600 --> 00:56:26,650
中文字幕
Then I'm error checking.

1191
00:56:26,650 --> 00:56:29,170
中文字幕
If they didn't give me a name, or their email, or the dorm,

1192
00:56:29,170 --> 00:56:32,230
中文字幕
render failure.html to apprise them as much.

1193
00:56:32,230 --> 00:56:34,490
中文字幕
Then go ahead and do these lines of code.

1194
00:56:34,490 --> 00:56:36,910
中文字幕
And this is more of a mouthful, and you would only, again,

1195
00:56:36,910 --> 00:56:38,280
中文字幕
know this from the documentation.

1196
00:56:38,280 --> 00:56:40,570
中文字幕
But it turns out if you read the documentation

1197
00:56:40,570 --> 00:56:46,160
中文字幕
for this SMTP lib or library, you can use lines of code like this as follows.

1198
00:56:46,160 --> 00:56:49,870
中文字幕
You can tell the library what server to use for sending email.

1199
00:56:49,870 --> 00:56:52,000
中文字幕
And it turns out if you read Gmail's documentation,

1200
00:56:52,000 --> 00:56:56,110
中文字幕
you can use smtp.gmail.com to automatically send e-mails not using

1201
00:56:56,110 --> 00:56:57,970
中文字幕
the web UI, but using code.

1202
00:56:57,970 --> 00:57:00,770
中文字幕
587 is the TCP port that they use.

1203
00:57:00,770 --> 00:57:04,180
中文字幕
So it's not 80, it's not 443, it's 587 by convention.

1204
00:57:04,180 --> 00:57:07,690
中文字幕
Starttls, if you read the documentation, says turn on encryption.

1205
00:57:07,690 --> 00:57:11,020
中文字幕
So the email is encrypted between you and Gmail.

1206
00:57:11,020 --> 00:57:13,750
中文字幕
Then go ahead and log in with a certain username and password.

1207
00:57:13,750 --> 00:57:17,830
中文字幕
I created an account in advance called jharvard@cs50.net, and my password

1208
00:57:17,830 --> 00:57:19,560
中文字幕
is in my IDE's environment.

1209
00:57:19,560 --> 00:57:21,940
中文字幕
I stored it elsewhere so that it's not visible on screen,

1210
00:57:21,940 --> 00:57:24,610
中文字幕
otherwise people could send emails as John.

1211
00:57:24,610 --> 00:57:27,970
中文字幕
Then I go ahead and call literally a function called send mail.

1212
00:57:27,970 --> 00:57:29,770
中文字幕
And if you read the documentation, this one

1213
00:57:29,770 --> 00:57:33,070
中文字幕
takes as argument who you want to send email to,

1214
00:57:33,070 --> 00:57:36,490
中文字幕
the contents of the email that you want to send,

1215
00:57:36,490 --> 00:57:39,490
中文字幕
and the message that you actually want to send here.

1216
00:57:39,490 --> 00:57:42,340
中文字幕
Or rather, this is the from address, the to address,

1217
00:57:42,340 --> 00:57:44,830
中文字幕
and the actual message that you want to send.

1218
00:57:44,830 --> 00:57:48,070
中文字幕
After that, you just go ahead and render template and assume success.

1219
00:57:48,070 --> 00:57:49,720
中文字幕
I could add more error checking, like I should probably

1220
00:57:49,720 --> 00:57:52,360
中文字幕
check if anything went wrong here, but I'm keeping it simple.

1221
00:57:52,360 --> 00:57:56,050
中文字幕
But these new lines that are highlighted actually send an email.

1222
00:57:56,050 --> 00:57:56,990
中文字幕
So let's try this.

1223
00:57:56,990 --> 00:58:02,320
中文字幕
Let me go into froshims2 and let me go ahead and do Flask run.

1224
00:58:02,320 --> 00:58:06,030
中文字幕
Let me go ahead and open up the page here, slash.

1225
00:58:06,030 --> 00:58:09,290
中文字幕
And notice I do, indeed, have a second field for text now.

1226
00:58:09,290 --> 00:58:12,700
中文字幕
So this will be David, and this will be--

1227
00:58:12,700 --> 00:58:16,900
中文字幕
let's see, how about let's go ahead and just register not myself,

1228
00:58:16,900 --> 00:58:19,770
中文字幕
since it's not my email account, but John Harvard who we claim's

1229
00:58:19,770 --> 00:58:22,960
中文字幕
email is cs50.net, jharvard thereat.

1230
00:58:22,960 --> 00:58:25,730
中文字幕
And he lives in say, Weld.

1231
00:58:25,730 --> 00:58:29,330
中文字幕
Let's go ahead and click Register.

1232
00:58:29,330 --> 00:58:31,420
中文字幕
All right, it's taking a little longer this time,

1233
00:58:31,420 --> 00:58:33,630
中文字幕
but it was doing a little more work sending an email.

1234
00:58:33,630 --> 00:58:38,920
中文字幕
So now let's try to go to gmail.com, open this up.

1235
00:58:38,920 --> 00:58:39,420
中文字幕
Ooh.

1236
00:58:39,420 --> 00:58:41,760
中文字幕
In my inbox, you are registered.

1237
00:58:41,760 --> 00:58:45,390
中文字幕
If I open this up, notice jharvard@cs50.net

1238
00:58:45,390 --> 00:58:48,390
中文字幕
has sent me an email by a BC seed, at least keep part of the information

1239
00:58:48,390 --> 00:58:48,890
中文字幕
private.

1240
00:58:48,890 --> 00:58:52,950
中文字幕
And it just says in the body of the message if I move the cursor,

1241
00:58:52,950 --> 00:58:54,390
中文字幕
you are registered.

1242
00:58:54,390 --> 00:58:56,790
中文字幕
So I did a little more back in 1997, but I

1243
00:58:56,790 --> 00:58:59,740
中文字幕
included like the user's name, and their email address, and their dorm,

1244
00:58:59,740 --> 00:59:03,080
中文字幕
and maybe their phone number or whatnot, and the sports they were interested in.

1245
00:59:03,080 --> 00:59:04,360
中文字幕
But the idea is exactly that.

1246
00:59:04,360 --> 00:59:07,800
中文字幕
You can send any information you want just by now using code.

1247
00:59:07,800 --> 00:59:12,470
中文字幕
You could not do that with HTML or with CSS alone.

1248
00:59:12,470 --> 00:59:16,130
中文字幕
Any questions, then, on this?

1249
00:59:16,130 --> 00:59:16,780
中文字幕
Yeah?

1250
00:59:16,780 --> 00:59:19,400
中文字幕
Last week when we wrote code in Python we had to like

1251
00:59:19,400 --> 00:59:24,270
中文字幕
say if name equals the function to like execute that.

1252
00:59:24,270 --> 00:59:26,030
中文字幕
How come in this we're not doing that?

1253
00:59:26,030 --> 00:59:27,690
中文字幕
That was all in JavaScript.

1254
00:59:27,690 --> 00:59:31,060
中文字幕
So that allusion to if name equals, and then you assign it to a function,

1255
00:59:31,060 --> 00:59:35,860
中文字幕
I think you're referring to our JavaScript examples, no?

1256
00:59:35,860 --> 00:59:36,380
中文字幕
OK.

1257
00:59:36,380 --> 00:59:38,090
中文字幕
So we'll actually come back to that in a little bit

1258
00:59:38,090 --> 00:59:39,980
中文字幕
where we reintroduce a bit of JavaScript,

1259
00:59:39,980 --> 00:59:42,680
中文字幕
which actually gives us some more functionality reminiscent

1260
00:59:42,680 --> 00:59:43,610
中文字幕
of those examples.

1261
00:59:43,610 --> 00:59:44,590
中文字幕
Other question?

1262
00:59:44,590 --> 00:59:47,770
中文字幕
What email address did you send that email from,

1263
00:59:47,770 --> 00:59:50,110
中文字幕
and don't you need to enter like a password to make sure

1264
00:59:50,110 --> 00:59:52,280
中文字幕
that no one just randomly sends email?

1265
00:59:52,280 --> 00:59:54,240
中文字幕
Yeah, it's a really good question.

1266
00:59:54,240 --> 00:59:57,440
中文字幕
So via what email address did I send that, and to whom was it sent?

1267
00:59:57,440 --> 01:00:01,310
中文字幕
So again, this is the from address, this is the to address,

1268
01:00:01,310 --> 01:00:02,540
中文字幕
and this is now the message.

1269
01:00:02,540 --> 01:00:06,170
中文字幕
And just because I only have one email account open, I had John send himself

1270
01:00:06,170 --> 01:00:07,670
中文字幕
an email in this case.

1271
01:00:07,670 --> 01:00:11,330
中文字幕
Theoretically if I were running the freshmen intramural sports program,

1272
01:00:11,330 --> 01:00:16,340
中文字幕
I could try to do this and change this from address to be myself.

1273
01:00:16,340 --> 01:00:19,850
中文字幕
The catch is that Gmail actually has protections in place so that if you've

1274
01:00:19,850 --> 01:00:23,390
中文字幕
logged in as jharvard with his password, then

1275
01:00:23,390 --> 01:00:26,090
中文字幕
the email, no matter what you specify as the from address,

1276
01:00:26,090 --> 01:00:29,150
中文字幕
is actually going to be overridden to be from John Harvard.

1277
01:00:29,150 --> 01:00:32,010
中文字幕
However, this does speak to the potential insecurity of email.

1278
01:00:32,010 --> 01:00:34,010
中文字幕
If you don't use Gmail but you use a third party

1279
01:00:34,010 --> 01:00:36,620
中文字幕
service that is not so rigorous with its error checking,

1280
01:00:36,620 --> 01:00:40,920
中文字幕
it is incredibly easy to fake emails from one person to another.

1281
01:00:40,920 --> 01:00:42,920
中文字幕
I mean, look through your spam folder sometime.

1282
01:00:42,920 --> 01:00:45,710
中文字幕
Most of those people who send you those spams don't exist.

1283
01:00:45,710 --> 01:00:48,560
中文字幕
Like, the email addresses and/or the names are fake.

1284
01:00:48,560 --> 01:00:52,190
中文字幕
And yet they might appear to actually be from a sibling of yours, a family

1285
01:00:52,190 --> 01:00:55,610
中文字幕
member, or a friend, even though those humans did not send e-mails.

1286
01:00:55,610 --> 01:00:57,890
中文字幕
And that's because some spammer has written code

1287
01:00:57,890 --> 01:00:59,810
中文字幕
like this in Python or some other language,

1288
01:00:59,810 --> 01:01:03,740
中文字幕
but has overridden these fields, but used a server that's not Gmail

1289
01:01:03,740 --> 01:01:07,200
中文字幕
that doesn't enforce these policies.

1290
01:01:07,200 --> 01:01:09,970
中文字幕
Other questions?

1291
01:01:09,970 --> 01:01:12,880
中文字幕
Fun fact, also in 1995, I learned how to send--

1292
01:01:12,880 --> 01:01:15,410
中文字幕
or how to change the from address on an email.

1293
01:01:15,410 --> 01:01:17,830
中文字幕
And turns out at Harvard there's this entity called the ad

1294
01:01:17,830 --> 01:01:19,270
中文字幕
board who doesn't like doing this.

1295
01:01:19,270 --> 01:01:22,820
中文字幕
So don't do that.

1296
01:01:22,820 --> 01:01:25,950
中文字幕
Sometimes there's human defenses in place for this, not just technological.

1297
01:01:25,950 --> 01:01:30,490
中文字幕
Thankfully, my friend whom I faked an email from did not--

1298
01:01:30,490 --> 01:01:31,870
中文字幕
it worked out OK.

1299
01:01:31,870 --> 01:01:33,250
中文字幕
All right.

1300
01:01:33,250 --> 01:01:36,550
中文字幕
You have now great power, don't use it for evil.

1301
01:01:36,550 --> 01:01:40,070
中文字幕
All right, so let's go ahead now and do another example, but that takes this

1302
01:01:40,070 --> 01:01:44,500
中文字幕
a further step, adding, finally some persistence of information.

1303
01:01:44,500 --> 01:01:48,940
中文字幕
Let's go ahead into froshims3 now and open up application.py.

1304
01:01:48,940 --> 01:01:53,970
中文字幕
So recall that we can use CSV files-- comma separated value files--

1305
01:01:53,970 --> 01:01:55,810
中文字幕
to create the illusion of like spreadsheets,

1306
01:01:55,810 --> 01:01:58,120
中文字幕
but now we're actually going to create them ourselves.

1307
01:01:58,120 --> 01:02:00,100
中文字幕
The code for this is a little more involved,

1308
01:02:00,100 --> 01:02:03,020
中文字幕
and the only thing I've changed now really is the register method.

1309
01:02:03,020 --> 01:02:07,320
中文字幕
So in version one of this code, I saved it in a global list just in memory.

1310
01:02:07,320 --> 01:02:09,700
中文字幕
That was not good because it gets thrown away too easily.

1311
01:02:09,700 --> 01:02:11,260
中文字幕
Version two of this we just sent an email

1312
01:02:11,260 --> 01:02:12,730
中文字幕
to the proctor who runs the program.

1313
01:02:12,730 --> 01:02:15,400
中文字幕
That was a little better, because at least they can then save the email.

1314
01:02:15,400 --> 01:02:18,400
中文字幕
Version three, we're going to use a very lightweight database called

1315
01:02:18,400 --> 01:02:22,360
中文字幕
the CSV file that saves it to my hard drive permanently.

1316
01:02:22,360 --> 01:02:25,280
中文字幕
So even when the server stops, the data is still there.

1317
01:02:25,280 --> 01:02:27,230
中文字幕
So in Python, how does this work?

1318
01:02:27,230 --> 01:02:30,890
中文字幕
Well, notice that I've improved my register route this time as follows.

1319
01:02:30,890 --> 01:02:33,470
中文字幕
If the user did not give me their name or dorm,

1320
01:02:33,470 --> 01:02:35,020
中文字幕
then I go ahead and render a failure.

1321
01:02:35,020 --> 01:02:36,860
中文字幕
That's pretty much the same logic as before,

1322
01:02:36,860 --> 01:02:39,110
中文字幕
but I didn't bother declaring the variables this time,

1323
01:02:39,110 --> 01:02:41,270
中文字幕
I just called the functions directly.

1324
01:02:41,270 --> 01:02:44,730
中文字幕
Here's a new line of code that might be reminiscent of some of your past file

1325
01:02:44,730 --> 01:02:45,730
中文字幕
I/O code.

1326
01:02:45,730 --> 01:02:50,440
中文字幕
In line 16 here, I'm telling Python to go ahead and open a file called

1327
01:02:50,440 --> 01:02:53,770
中文字幕
registered.csv quote-unquote a.

1328
01:02:53,770 --> 01:02:56,600
中文字幕
So we've seen R, we've seen W for read and write.

1329
01:02:56,600 --> 01:02:59,400
中文字幕
Anyone recall what a is, or no?

1330
01:02:59,400 --> 01:03:00,160
中文字幕
Append.

1331
01:03:00,160 --> 01:03:02,490
中文字幕
It happens to mean append, which means just

1332
01:03:02,490 --> 01:03:04,180
中文字幕
add a row to the file, which is nice.

1333
01:03:04,180 --> 01:03:06,790
中文字幕
Because if there's already students registered, when a new one registers

1334
01:03:06,790 --> 01:03:08,830
中文字幕
we just want to append to the bottom of the file.

1335
01:03:08,830 --> 01:03:12,310
中文字幕
Quote-unquote a is supported by Python with this open function.

1336
01:03:12,310 --> 01:03:15,220
中文字幕
That gives me back a reference or like a pointer to file,

1337
01:03:15,220 --> 01:03:17,740
中文字幕
even though Python does not have pointers.

1338
01:03:17,740 --> 01:03:19,100
中文字幕
Then this is the new feature.

1339
01:03:19,100 --> 01:03:21,340
中文字幕
And here, too, you'd only know this from having seen an example

1340
01:03:21,340 --> 01:03:22,900
中文字幕
or you reading the documentation.

1341
01:03:22,900 --> 01:03:26,900
中文字幕
You can use the CSV library, which we'll see as imported up above.

1342
01:03:26,900 --> 01:03:31,430
中文字幕
And you can ask for a writer, a piece of code that writes out-- that is,

1343
01:03:31,430 --> 01:03:31,930
中文字幕
creates--

1344
01:03:31,930 --> 01:03:33,190
中文字幕
CSV files.

1345
01:03:33,190 --> 01:03:35,620
中文字幕
And specifically, you want to write to this file.

1346
01:03:35,620 --> 01:03:38,320
中文字幕
That library-- the CSV library-- comes with a function

1347
01:03:38,320 --> 01:03:40,450
中文字幕
called write row, which does what it says.

1348
01:03:40,450 --> 01:03:43,960
中文字幕
If you pass it in a comma separated list of fields

1349
01:03:43,960 --> 01:03:46,810
中文字幕
that you want to represent your first column, your second column,

1350
01:03:46,810 --> 01:03:49,660
中文字幕
and your third column, it will handle the writing for you

1351
01:03:49,660 --> 01:03:51,790
中文字幕
so you don't have to get into the weeds of file I/O

1352
01:03:51,790 --> 01:03:53,800
中文字幕
like you did several problem sets ago.

1353
01:03:53,800 --> 01:03:54,970
中文字幕
Notice the subtlety.

1354
01:03:54,970 --> 01:03:58,510
中文字幕
You do need to have these second pair of parentheses,

1355
01:03:58,510 --> 01:04:00,850
中文字幕
because technically what you're giving it is a tuple.

1356
01:04:00,850 --> 01:04:02,930
中文字幕
We talked very briefly about that last week,

1357
01:04:02,930 --> 01:04:06,250
中文字幕
which is just like an x comma y pair, or latitude comma longitude.

1358
01:04:06,250 --> 01:04:07,120
中文字幕
Same idea here.

1359
01:04:07,120 --> 01:04:11,230
中文字幕
First column, second column, and so forth is a so-called tuple.

1360
01:04:11,230 --> 01:04:13,940
中文字幕
Then I close the file, then I render the template.

1361
01:04:13,940 --> 01:04:15,920
中文字幕
So what does this actually do for me?

1362
01:04:15,920 --> 01:04:19,390
中文字幕
Well, let me go into my folder froshims3 here.

1363
01:04:19,390 --> 01:04:22,360
中文字幕
And notice register.csv at the moment is empty.

1364
01:04:22,360 --> 01:04:23,560
中文字幕
This is a CSV file.

1365
01:04:23,560 --> 01:04:25,490
中文字幕
Nothing's going on inside of that.

1366
01:04:25,490 --> 01:04:27,340
中文字幕
There's no one registered yet.

1367
01:04:27,340 --> 01:04:32,260
中文字幕
But let me go ahead, then, and go into froshims3, run Flask run.

1368
01:04:32,260 --> 01:04:33,970
中文字幕
Let me go ahead and load this up.

1369
01:04:33,970 --> 01:04:37,460
中文字幕
And you'll see the same kind of form, but also a new link.

1370
01:04:37,460 --> 01:04:40,760
中文字幕
Notice that no one's registered yet if I click on that link.

1371
01:04:40,760 --> 01:04:46,220
中文字幕
But if I go into here and register David from Matthews and click Register,

1372
01:04:46,220 --> 01:04:48,310
中文字幕
now it claims I am registered really.

1373
01:04:48,310 --> 01:04:52,150
中文字幕
Let me click this link and notice that it's very small on the screen,

1374
01:04:52,150 --> 01:04:54,280
中文字幕
but slash registered is where this is going to lead

1375
01:04:54,280 --> 01:04:56,470
中文字幕
me, which is just where I was before.

1376
01:04:56,470 --> 01:04:58,980
中文字幕
You see that now David from Matthews registered.

1377
01:04:58,980 --> 01:05:00,400
中文字幕
Let me go back to the form itself.

1378
01:05:00,400 --> 01:05:02,860
中文字幕
Let's register, say, Brian from Pennypacker.

1379
01:05:02,860 --> 01:05:04,090
中文字幕
Click Register.

1380
01:05:04,090 --> 01:05:05,510
中文字幕
He, too, is apparently registered.

1381
01:05:05,510 --> 01:05:06,580
中文字幕
Let's click that link.

1382
01:05:06,580 --> 01:05:07,870
中文字幕
Brian from Pennypacker.

1383
01:05:07,870 --> 01:05:09,760
中文字幕
All right, so where is this data going?

1384
01:05:09,760 --> 01:05:13,360
中文字幕
Let me go back to the IDE, close my registered CSV file,

1385
01:05:13,360 --> 01:05:16,090
中文字幕
because it's probably changed and open it up.

1386
01:05:16,090 --> 01:05:19,090
中文字幕
And voila, indeed, it's prompting me to reload it.

1387
01:05:19,090 --> 01:05:20,330
中文字幕
There is the file.

1388
01:05:20,330 --> 01:05:25,270
中文字幕
And notice David comma Matthews, Brian comma Pennypacker, all of those rows

1389
01:05:25,270 --> 01:05:26,270
中文字幕
were written out for me.

1390
01:05:26,270 --> 01:05:28,450
中文字幕
So now I actually have a database.

1391
01:05:28,450 --> 01:05:31,510
中文字幕
And even though it's kind of a simple database, you know what I can do?

1392
01:05:31,510 --> 01:05:34,990
中文字幕
Let me go ahead and right click or control click on it in the IDE,

1393
01:05:34,990 --> 01:05:37,360
中文字幕
download it into my Downloads folder.

1394
01:05:37,360 --> 01:05:39,340
中文字幕
And then if I actually open this thing, if I

1395
01:05:39,340 --> 01:05:42,350
中文字幕
have Excel installed or Apple Numbers, which

1396
01:05:42,350 --> 01:05:47,690
中文字幕
is the first time I've ever used it, let me go ahead and open that file.

1397
01:05:47,690 --> 01:05:49,400
中文字幕
Opening register.csv.

1398
01:05:49,400 --> 01:05:51,690
中文字幕
And voila, here now is a file.

1399
01:05:51,690 --> 01:05:54,380
中文字幕
And Numbers is formatting it in kind of a funky way,

1400
01:05:54,380 --> 01:05:56,210
中文字幕
but it is showing rows and columns.

1401
01:05:56,210 --> 01:05:58,970
中文字幕
Those of you who are more familiar with Excel we can do that, too.

1402
01:05:58,970 --> 01:06:00,560
中文字幕
Let me go down here.

1403
01:06:00,560 --> 01:06:03,200
中文字幕
Let me go into my Downloads folder.

1404
01:06:03,200 --> 01:06:07,040
中文字幕
Control click or right click here, and this time open it with Microsoft Excel.

1405
01:06:07,040 --> 01:06:10,730
中文字幕
And if you've seen Excel before, we'll probably see a very similar UI.

1406
01:06:10,730 --> 01:06:12,680
中文字幕
Because anytime Excel or Numbers--

1407
01:06:12,680 --> 01:06:14,330
中文字幕
OK, first time I've used Excel.

1408
01:06:14,330 --> 01:06:18,500
中文字幕
So that, too, will open up some rows and columns, as well.

1409
01:06:18,500 --> 01:06:20,990
中文字幕
So CSV files are just very lightweight spreadsheets.

1410
01:06:20,990 --> 01:06:24,150
中文字幕
But what's cool about them is that you can create them so easily.

1411
01:06:24,150 --> 01:06:25,700
中文字幕
You just have to put commas in there.

1412
01:06:25,700 --> 01:06:29,420
中文字幕
Now, as an aside, can you contrive a user's input

1413
01:06:29,420 --> 01:06:32,660
中文字幕
that could potentially break a CSV file?

1414
01:06:32,660 --> 01:06:37,550
中文字幕
What could a human type in that could potentially break your own CSV files?

1415
01:06:37,550 --> 01:06:38,460
中文字幕
A comma, right?

1416
01:06:38,460 --> 01:06:42,150
中文字幕
If it's like David Mayland comma junior, or something like that.

1417
01:06:42,150 --> 01:06:45,000
中文字幕
Or anything with weird punctuation.

1418
01:06:45,000 --> 01:06:46,530
中文字幕
This is why you use libraries.

1419
01:06:46,530 --> 01:06:49,020
中文字幕
That CSV library in this code, which we're

1420
01:06:49,020 --> 01:06:53,100
中文字幕
importing at the very top of this version 3 of the code,

1421
01:06:53,100 --> 01:06:55,830
中文字幕
is actually handling all of that complexity for us.

1422
01:06:55,830 --> 01:06:58,950
中文字幕
When the library encounters David Mayland comma junior if that's

1423
01:06:58,950 --> 01:07:00,900
中文字幕
the user's input, it will then additionally

1424
01:07:00,900 --> 01:07:03,720
中文字幕
put quotes around my whole name, thereby making sure

1425
01:07:03,720 --> 01:07:06,660
中文字幕
that my comma is inside quotes and not, therefore,

1426
01:07:06,660 --> 01:07:10,450
中文字幕
confused with the special comma that demarcates the start of other columns.

1427
01:07:10,450 --> 01:07:12,690
中文字幕
So again, that's why you don't reinvent the wheel,

1428
01:07:12,690 --> 01:07:14,470
中文字幕
because corner cases like that arise.

1429
01:07:14,470 --> 01:07:17,640
中文字幕
Well, what about slash registered, which is this list that's

1430
01:07:17,640 --> 01:07:18,960
中文字幕
generating an unordered list?

1431
01:07:18,960 --> 01:07:20,320
中文字幕
Let's see how that works.

1432
01:07:20,320 --> 01:07:23,280
中文字幕
If I scroll down to this code, notice that it's not

1433
01:07:23,280 --> 01:07:25,920
中文字幕
just a simple matter of grabbing a global variable,

1434
01:07:25,920 --> 01:07:28,230
中文字幕
because there is no global variable anymore.

1435
01:07:28,230 --> 01:07:30,790
中文字幕
Now I have to read it from that CSV file.

1436
01:07:30,790 --> 01:07:34,630
中文字幕
So here's three new lines of code that work as follows.

1437
01:07:34,630 --> 01:07:38,730
中文字幕
I'm going to go ahead and open this file, register.csv, in Read mode

1438
01:07:38,730 --> 01:07:40,290
中文字幕
this time, not append.

1439
01:07:40,290 --> 01:07:44,400
中文字幕
I'm going to go ahead now and say hey Python, use the CSV reader--

1440
01:07:44,400 --> 01:07:45,960
中文字幕
which is the opposite of writer--

1441
01:07:45,960 --> 01:07:47,190
中文字幕
on that file.

1442
01:07:47,190 --> 01:07:50,710
中文字幕
And then, hey Python, go ahead and turn that whole reader into a list.

1443
01:07:50,710 --> 01:07:53,010
中文字幕
So you'd only know this from reading the documentation.

1444
01:07:53,010 --> 01:07:54,330
中文字幕
It turns out this is the recommendation.

1445
01:07:54,330 --> 01:07:57,540
中文字幕
If you want to take a reader and just read the whole thing into memory

1446
01:07:57,540 --> 01:08:00,600
中文字幕
at once and convert it to a Python list, you literally just pass it

1447
01:08:00,600 --> 01:08:01,890
中文字幕
to this list function.

1448
01:08:01,890 --> 01:08:04,260
中文字幕
That gives me a list I'm going to call students,

1449
01:08:04,260 --> 01:08:06,840
中文字幕
and then I can do my same code as before.

1450
01:08:06,840 --> 01:08:08,640
中文字幕
For good measure, I should probably do what

1451
01:08:08,640 --> 01:08:13,260
中文字幕
I did last time, which is file.close to close the file, as well, just

1452
01:08:13,260 --> 01:08:15,820
中文字幕
to make sure it's closed the next time it's opened.

1453
01:08:15,820 --> 01:08:18,770
中文字幕
But I can actually simplify this, and you'll see more of these examples

1454
01:08:18,770 --> 01:08:19,520
中文字幕
online.

1455
01:08:19,520 --> 01:08:23,310
中文字幕
It's actually more conventional in Python not to do this,

1456
01:08:23,310 --> 01:08:25,950
中文字幕
but instead to change your code as follows.

1457
01:08:25,950 --> 01:08:31,080
中文字幕
To not bother closing it explicitly, to instead use a keyword called with

1458
01:08:31,080 --> 01:08:35,370
中文字幕
to instead put the variable name back there and indent everything underneath.

1459
01:08:35,370 --> 01:08:38,010
中文字幕
Doesn't matter for our purposes which one you do.

1460
01:08:38,010 --> 01:08:39,430
中文字幕
The first one was correct.

1461
01:08:39,430 --> 01:08:40,630
中文字幕
The second one is correct.

1462
01:08:40,630 --> 01:08:43,410
中文字幕
This is just more conventional, if only because it handles

1463
01:08:43,410 --> 01:08:44,970
中文字幕
the closing of the file for you.

1464
01:08:44,970 --> 01:08:47,520
中文字幕
So if you see this online, that's all that's happening there.

1465
01:08:47,520 --> 01:08:53,100
中文字幕
But it's just like in C doing fopen and fclose, or in this case open and close

1466
01:08:53,100 --> 01:08:54,720
中文字幕
like I had a moment ago.

1467
01:08:54,720 --> 01:08:56,130
中文字幕
Any questions, then?

1468
01:08:56,130 --> 01:08:58,110
中文字幕
How would you handle duplicates?

1469
01:08:58,110 --> 01:08:59,600
中文字幕
How would I duplicates?

1470
01:08:59,600 --> 01:09:00,240
中文字幕
good question.

1471
01:09:00,240 --> 01:09:03,600
中文字幕
So haven't handled duplicates here at all, and David from Matthews

1472
01:09:03,600 --> 01:09:05,310
中文字幕
could register again and again.

1473
01:09:05,310 --> 01:09:07,080
中文字幕
But logically what might I do?

1474
01:09:07,080 --> 01:09:10,430
中文字幕
Well, it probably belongs here in my register route.

1475
01:09:10,430 --> 01:09:14,430
中文字幕
I probably want to do more error checking than just these two lines.

1476
01:09:14,430 --> 01:09:17,640
中文字幕
Because what I probably want to do to see if David from Matthews

1477
01:09:17,640 --> 01:09:20,720
中文字幕
is already registered is open the CSV file,

1478
01:09:20,720 --> 01:09:26,060
中文字幕
iterate over its lines looking for David and for Matthews on the same line

1479
01:09:26,060 --> 01:09:29,340
中文字幕
and then show a failure to the user if he or she is

1480
01:09:29,340 --> 01:09:31,200
中文字幕
trying to register for a second time.

1481
01:09:31,200 --> 01:09:33,660
中文字幕
I've not made it easy with this code, and frankly that's

1482
01:09:33,660 --> 01:09:35,930
中文字幕
going to be so much easier next week with SQL.

1483
01:09:35,930 --> 01:09:37,970
中文字幕
SQL, this other language for databases, will

1484
01:09:37,970 --> 01:09:41,100
中文字幕
make it easy to search data that has already been saved.

1485
01:09:41,100 --> 01:09:43,060
中文字幕
CSV files do not make this easy.

1486
01:09:43,060 --> 01:09:46,200
中文字幕
It's doable, but you have to write more lines of code.

1487
01:09:46,200 --> 01:09:47,470
中文字幕
So more on that to come.

1488
01:09:47,470 --> 01:09:48,290
中文字幕
Other questions?

1489
01:09:51,270 --> 01:09:55,470
中文字幕
All right, so let's skip ahead to one final example,

1490
01:09:55,470 --> 01:10:00,400
中文字幕
froshim6, which we'll do something a little more for us here.

1491
01:10:00,400 --> 01:10:04,140
中文字幕
So if I go ahead into froshim6, notice that if I

1492
01:10:04,140 --> 01:10:08,700
中文字幕
do Flask run, and go back to the website here, and reload the screen,

1493
01:10:08,700 --> 01:10:13,320
中文字幕
and I go ahead and give you my name, but no, I'm not going to give you my dorm,

1494
01:10:13,320 --> 01:10:14,680
中文字幕
we have this feature.

1495
01:10:14,680 --> 01:10:18,450
中文字幕
It's ugly again, but where did we see this kind of functionality

1496
01:10:18,450 --> 01:10:19,880
中文字幕
when the user does not cooperate?

1497
01:10:23,350 --> 01:10:25,270
中文字幕
Or how did I implement this, apparently?

1498
01:10:25,270 --> 01:10:26,150
中文字幕
JavaScript?

1499
01:10:26,150 --> 01:10:27,690
中文字幕
Yeah, JavaScript.

1500
01:10:27,690 --> 01:10:30,690
中文字幕
So it turns out that with Python, you can obviously

1501
01:10:30,690 --> 01:10:33,780
中文字幕
validate the user's input on the server by just checking what's

1502
01:10:33,780 --> 01:10:37,710
中文字幕
in request.args or request.form and then yell at the user success or failure

1503
01:10:37,710 --> 01:10:38,770
中文字幕
accordingly.

1504
01:10:38,770 --> 01:10:42,220
中文字幕
But you can also use JavaScript-- and honestly, we did this two weeks ago,

1505
01:10:42,220 --> 01:10:44,640
中文字幕
so we just seem to be solving the same problems again.

1506
01:10:44,640 --> 01:10:46,780
中文字幕
So how do you think about this?

1507
01:10:46,780 --> 01:10:50,500
中文字幕
Should I be checking for the user's name and dorm in JavaScript?

1508
01:10:50,500 --> 01:10:53,170
中文字幕
Should I be checking for the user's name and dorm on the server?

1509
01:10:56,220 --> 01:10:59,800
中文字幕
I mean, mixed messages now.

1510
01:10:59,800 --> 01:11:01,190
中文字幕
Whatever's fastest.

1511
01:11:01,190 --> 01:11:02,000
中文字幕
Whatever fastest.

1512
01:11:02,000 --> 01:11:04,370
中文字幕
That's a pretty good heuristic to use, what's fastest.

1513
01:11:04,370 --> 01:11:07,010
中文字幕
And we can make it prettier by using Bootstrap or some library

1514
01:11:07,010 --> 01:11:10,790
中文字幕
to give you like a colorful box, or red error text or something like that.

1515
01:11:10,790 --> 01:11:14,050
中文字幕
So which probably is faster, Python or JavaScript?

1516
01:11:14,050 --> 01:11:15,920
中文字幕
JavaScript.

1517
01:11:15,920 --> 01:11:18,420
中文字幕
Why, is JavaScript just a better, faster language?

1518
01:11:18,420 --> 01:11:20,360
中文字幕
You're not creating it 

1519
01:11:20,360 --> 01:11:20,850
中文字幕
Say again?

1520
01:11:20,850 --> 01:11:22,770
中文字幕
You're not creating it on a new server,

1521
01:11:22,770 --> 01:11:24,230
中文字幕
so it's all happening on the same--

1522
01:11:24,230 --> 01:11:25,100
中文字幕
That's why, yeah.

1523
01:11:25,100 --> 01:11:27,760
中文字幕
We don't have to get into the religious debate of which language

1524
01:11:27,760 --> 01:11:30,800
中文字幕
is better or faster, but where they're running is certainly important.

1525
01:11:30,800 --> 01:11:34,140
中文字幕
JavaScript is running, recall, by definition, in the browser.

1526
01:11:34,140 --> 01:11:36,140
中文字幕
It is sent as JavaScript code to the browser

1527
01:11:36,140 --> 01:11:37,940
中文字幕
which then executes it client side.

1528
01:11:37,940 --> 01:11:40,940
中文字幕
Python by definition today is doing everything server side.

1529
01:11:40,940 --> 01:11:42,650
中文字幕
And indeed, the browser doesn't even know

1530
01:11:42,650 --> 01:11:47,240
中文字幕
Python is involved, because all it gets is the HTML code that results.

1531
01:11:47,240 --> 01:11:49,910
中文字幕
So OK, that seems to be an argument for not

1532
01:11:49,910 --> 01:11:53,530
中文字幕
doing all of the new work we did today with if not name, if not dorm,

1533
01:11:53,530 --> 01:11:55,910
中文字幕
and all of that, and just use JavaScript.

1534
01:11:55,910 --> 01:12:00,080
中文字幕
But the problem is that if you get a little sloppy or a little clever

1535
01:12:00,080 --> 01:12:03,050
中文字幕
and only implement your error checking client side.

1536
01:12:03,050 --> 01:12:06,230
中文字幕
Because as you say, it's faster, and frankly once I make it prettier,

1537
01:12:06,230 --> 01:12:09,330
中文字幕
it's just going to be more interactive and more seamless.

1538
01:12:09,330 --> 01:12:12,860
中文字幕
The problem is you can't and should not trust users.

1539
01:12:12,860 --> 01:12:15,320
中文字幕
Suppose that I'm a malicious user and I just

1540
01:12:15,320 --> 01:12:18,910
中文字幕
want to inject some bogus data into your website, or I want to spam you,

1541
01:12:18,910 --> 01:12:22,550
中文字幕
or subscribe 1,000 freshmen who don't actually exist, or just

1542
01:12:22,550 --> 01:12:24,590
中文字幕
generally create problems for you.

1543
01:12:24,590 --> 01:12:26,300
中文字幕
Well, you might think, well, that's OK, I

1544
01:12:26,300 --> 01:12:28,420
中文字幕
have some defenses in place, and JavaScript code,

1545
01:12:28,420 --> 01:12:31,670
中文字幕
and this adversary is going to get very quick feedback, very pretty

1546
01:12:31,670 --> 01:12:34,880
中文字幕
feedback that they've not provided these various fields.

1547
01:12:34,880 --> 01:12:38,600
中文字幕
But honestly, you can't trust anything ever coming from the human.

1548
01:12:38,600 --> 01:12:41,150
中文字幕
If I open up Chrome's developer tools, and I

1549
01:12:41,150 --> 01:12:45,770
中文字幕
go to this down here to the dot dot dot menu, and I go to Settings,

1550
01:12:45,770 --> 01:12:50,120
中文字幕
and I go down here, there.

1551
01:12:50,120 --> 01:12:52,670
中文字幕
That's all it takes to disable all of your hard work.

1552
01:12:52,670 --> 01:12:54,470
中文字幕
He or she can just open up their browser--

1553
01:12:54,470 --> 01:12:55,730
中文字幕
Chrome or something else--

1554
01:12:55,730 --> 01:12:57,170
中文字幕
turn off JavaScript.

1555
01:12:57,170 --> 01:13:00,200
中文字幕
So now when I actually submit this form, there's

1556
01:13:00,200 --> 01:13:02,960
中文字幕
going to be no on-submit checking, no on-click handling.

1557
01:13:02,960 --> 01:13:04,260
中文字幕
All of that is disabled.

1558
01:13:04,260 --> 01:13:07,400
中文字幕
So if I go ahead and click Register, I at least

1559
01:13:07,400 --> 01:13:11,520
中文字幕
still, in this version of froshims, have server side checking, as well.

1560
01:13:11,520 --> 01:13:14,420
中文字幕
So this might be a little frustrating, but it's kind of the reality.

1561
01:13:14,420 --> 01:13:16,700
中文字幕
It is perfectly fine to use JavaScript code

1562
01:13:16,700 --> 01:13:19,820
中文字幕
and use client side code to give the user a better experience-- a.k.a.

1563
01:13:19,820 --> 01:13:21,920
中文字幕
UX, user experience.

1564
01:13:21,920 --> 01:13:24,530
中文字幕
But you can't cut corners and not implement

1565
01:13:24,530 --> 01:13:27,230
中文字幕
the same kind of logic server side because you

1566
01:13:27,230 --> 01:13:28,490
中文字幕
need to defend against this.

1567
01:13:28,490 --> 01:13:30,860
中文字幕
Otherwise bogus data is going to end up in your database,

1568
01:13:30,860 --> 01:13:32,120
中文字幕
things are going to go wrong.

1569
01:13:32,120 --> 01:13:35,850
中文字幕
Never, ever, ever trust the user.

1570
01:13:35,850 --> 01:13:37,190
中文字幕
Any questions?

1571
01:13:37,190 --> 01:13:38,770
中文字幕
Can you do the same via CSS?

1572
01:13:38,770 --> 01:13:40,520
中文字幕
Can you do the same with CSS?

1573
01:13:40,520 --> 01:13:43,130
中文字幕
Yes, can you JavaScript ??

1574
01:13:43,130 --> 01:13:44,840
中文字幕
Not with CSS alone.

1575
01:13:44,840 --> 01:13:47,990
中文字幕
You can use CSS to make the error messages far prettier, yes,

1576
01:13:47,990 --> 01:13:51,230
中文字幕
but not logically enough with CSS alone.

1577
01:13:51,230 --> 01:13:54,320
中文字幕
And in fact, just to give you a sense now how you can make things prettier

1578
01:13:54,320 --> 01:13:58,700
中文字幕
since I keep alluding to better design skills than the ones I'm showing here.

1579
01:13:58,700 --> 01:14:01,550
中文字幕
If we go to Bootstrap, this very popular, free, and open source

1580
01:14:01,550 --> 01:14:05,070
中文字幕
library for CSS, it actually has some interactive features, as well.

1581
01:14:05,070 --> 01:14:08,360
中文字幕
And if I go under components in the documentation and I scroll down

1582
01:14:08,360 --> 01:14:11,630
中文字幕
and I go to forms, you'll see, one, notice

1583
01:14:11,630 --> 01:14:14,230
中文字幕
that these forms are already way prettier than the ones

1584
01:14:14,230 --> 01:14:15,230
中文字幕
I've been making, right?

1585
01:14:15,230 --> 01:14:17,600
中文字幕
It's like black text, and gray text, and small text.

1586
01:14:17,600 --> 01:14:19,580
中文字幕
It just looks nicer and cleaner.

1587
01:14:19,580 --> 01:14:21,080
中文字幕
But it's relatively easy to do this.

1588
01:14:21,080 --> 01:14:22,950
中文字幕
And indeed, for the next problems that you'll

1589
01:14:22,950 --> 01:14:26,000
中文字幕
be welcome to copy and paste some of this sample code and HTML,

1590
01:14:26,000 --> 01:14:29,270
中文字幕
use Bootstrap CSS just to make your forms prettier.

1591
01:14:29,270 --> 01:14:32,400
中文字幕
But what it can really do if I go to the sub menu over here,

1592
01:14:32,400 --> 01:14:34,840
中文字幕
notice that there's this validation section in Bootstrap.

1593
01:14:34,840 --> 01:14:36,300
中文字幕
And other libraries have this, too.

1594
01:14:36,300 --> 01:14:38,480
中文字幕
And you'll want to read the actual documentation.

1595
01:14:38,480 --> 01:14:41,780
中文字幕
But if I just scroll down for a while, here's a sample form in Bootstrap.

1596
01:14:41,780 --> 01:14:45,440
中文字幕
It already looks a little prettier than anything I've made in just raw HTML.

1597
01:14:45,440 --> 01:14:50,420
中文字幕
But notice if I don't cooperate, you can do really cool validation of forms

1598
01:14:50,420 --> 01:14:53,030
中文字幕
with green and red text if the user does or doesn't

1599
01:14:53,030 --> 01:14:57,260
中文字幕
cooperate by using a mix of CSS, but with some JavaScript code.

1600
01:14:57,260 --> 01:14:59,540
中文字幕
And so what Bootstrap does for you is it actually

1601
01:14:59,540 --> 01:15:01,940
中文字幕
automates some of the process of that JavaScript code

1602
01:15:01,940 --> 01:15:04,050
中文字幕
that we saw two weeks ago and just used now.

1603
01:15:04,050 --> 01:15:06,140
中文字幕
But it doesn't just pop up a message for the user,

1604
01:15:06,140 --> 01:15:08,090
中文字幕
it actually gives them more immediate feedback.

1605
01:15:08,090 --> 01:15:11,270
中文字幕
And almost any popular web site you visit these days gives you

1606
01:15:11,270 --> 01:15:13,280
中文字幕
this more immediate proximal input.

1607
01:15:13,280 --> 01:15:16,760
中文字幕
Generally you don't see some simple error message popping up,

1608
01:15:16,760 --> 01:15:19,940
中文字幕
even though that's easier to do.

1609
01:15:19,940 --> 01:15:22,420
中文字幕
Any questions?

1610
01:15:22,420 --> 01:15:24,530
中文字幕
All right, so where did that logic come from?

1611
01:15:24,530 --> 01:15:27,680
中文字幕
So let me go into, for instance, my template

1612
01:15:27,680 --> 01:15:30,860
中文字幕
file now for the form in froshim6--

1613
01:15:30,860 --> 01:15:32,840
中文字幕
again, the last of these examples--

1614
01:15:32,840 --> 01:15:34,730
中文字幕
and you'll notice that I did this.

1615
01:15:34,730 --> 01:15:37,520
中文字幕
If I scroll through this file, you'll see the same HTML

1616
01:15:37,520 --> 01:15:39,330
中文字幕
as we've been using for some time.

1617
01:15:39,330 --> 01:15:43,010
中文字幕
But notice at the bottom of the page that I draw some inspiration

1618
01:15:43,010 --> 01:15:48,290
中文字幕
from two weeks back when we looked at HTML, and CSS, and JavaScript.

1619
01:15:48,290 --> 01:15:51,650
中文字幕
So just as a quick refresher, notice how this is working.

1620
01:15:51,650 --> 01:15:54,320
中文字幕
This line of code says in JavaScript check

1621
01:15:54,320 --> 01:15:57,730
中文字幕
the document using the query selector, which lets you select anything

1622
01:15:57,730 --> 01:16:00,740
中文字幕
in the web page looking for a form.

1623
01:16:00,740 --> 01:16:05,840
中文字幕
When that form is submitted, call the following anonymous function.

1624
01:16:05,840 --> 01:16:11,210
中文字幕
If the document query selector finds an input that does not have a value--

1625
01:16:11,210 --> 01:16:13,520
中文字幕
and I say not because of the exclamation point here--

1626
01:16:13,520 --> 01:16:15,980
中文字幕
then yell at the user with this, you must provide your name

1627
01:16:15,980 --> 01:16:17,120
中文字幕
and return false.

1628
01:16:17,120 --> 01:16:22,820
中文字幕
Else if the user did not provide a value for the select menu-- a.k.a. the dorm--

1629
01:16:22,820 --> 01:16:25,520
中文字幕
go ahead and alert them that they must provide the dorm,

1630
01:16:25,520 --> 01:16:26,930
中文字幕
otherwise return true.

1631
01:16:26,930 --> 01:16:29,270
中文字幕
And just to be clear and to recall from two weeks ago,

1632
01:16:29,270 --> 01:16:31,010
中文字幕
what am I returning false?

1633
01:16:31,010 --> 01:16:33,030
中文字幕
What does that effect have logically?

1634
01:16:36,270 --> 01:16:38,290
中文字幕
Yeah, say again?

1635
01:16:38,290 --> 01:16:40,330
中文字幕
What was that?

1636
01:16:40,330 --> 01:16:41,930
中文字幕
I heard a whisper here.

1637
01:16:41,930 --> 01:16:43,730
中文字幕
No?

1638
01:16:43,730 --> 01:16:46,310
中文字幕
Yeah, it prevents submission of the form.

1639
01:16:46,310 --> 01:16:48,770
中文字幕
The default behavior of a form is it wants to be submitted.

1640
01:16:48,770 --> 01:16:49,950
中文字幕
That's why they exist.

1641
01:16:49,950 --> 01:16:51,920
中文字幕
But if you return false in JavaScript, it

1642
01:16:51,920 --> 01:16:54,860
中文字幕
will short circuit that and prevent that default behavior,

1643
01:16:54,860 --> 01:16:58,050
中文字幕
thereby stopping the user from submitting the form at all.

1644
01:16:58,050 --> 01:17:02,810
中文字幕
So let's take one step back now, there's now so much going on in this one file

1645
01:17:02,810 --> 01:17:03,500
中文字幕
alone.

1646
01:17:03,500 --> 01:17:05,990
中文字幕
In this sixth and final example, notice that we

1647
01:17:05,990 --> 01:17:09,260
中文字幕
have application.py, which is the entry point, the so-called controller

1648
01:17:09,260 --> 01:17:11,090
中文字幕
of this web application.

1649
01:17:11,090 --> 01:17:15,380
中文字幕
It has a route which very simply for slash looks like this.

1650
01:17:15,380 --> 01:17:19,490
中文字幕
When the user gets slash, this template is simply returned.

1651
01:17:19,490 --> 01:17:22,320
中文字幕
What is in that index.html template?

1652
01:17:22,320 --> 01:17:25,560
中文字幕
Well, it contains a partial HTML file.

1653
01:17:25,560 --> 01:17:27,550
中文字幕
It contains this HTML.

1654
01:17:27,550 --> 01:17:31,160
中文字幕
But it does not contain the doctype, the HTML tag, head tag, the body tag,

1655
01:17:31,160 --> 01:17:32,570
中文字幕
the title tag, and all of that.

1656
01:17:32,570 --> 01:17:37,040
中文字幕
It only contains the stuff that should go inside of the body tag.

1657
01:17:37,040 --> 01:17:39,890
中文字幕
Because this file is using a bit of jinja,

1658
01:17:39,890 --> 01:17:42,260
中文字幕
which is the templating language that Flask uses.

1659
01:17:42,260 --> 01:17:44,540
中文字幕
You can just think of it as Flask, that's fine.

1660
01:17:44,540 --> 01:17:51,980
中文字幕
It uses some HTML here, but it also in the bottom of the file uses JavaScript.

1661
01:17:51,980 --> 01:17:55,880
中文字幕
And so just as before when we've looked at the source of the page, what

1662
01:17:55,880 --> 01:18:00,230
中文字幕
I'm going to see in the browser on this forms page is no jinja,

1663
01:18:00,230 --> 01:18:02,810
中文字幕
no Python, nothing related to Flask.

1664
01:18:02,810 --> 01:18:06,530
中文字幕
Just a fully formed HTML page that also now contains

1665
01:18:06,530 --> 01:18:08,480
中文字幕
some of that client side code.

1666
01:18:08,480 --> 01:18:11,570
中文字幕
And so I have this mixture now of several different language,

1667
01:18:11,570 --> 01:18:15,970
中文字幕
but each of which solves a very distinct problem.

1668
01:18:15,970 --> 01:18:16,950
中文字幕
Yeah?

1669
01:18:16,950 --> 01:18:21,010
中文字幕
So I think it was a week ago or two weeks ago when

1670
01:18:21,010 --> 01:18:23,030
中文字幕
we were working on JavaScript and CSS, you

1671
01:18:23,030 --> 01:18:28,880
中文字幕
were saying that it's preferable to split languages, not

1672
01:18:28,880 --> 01:18:30,580
中文字幕
mix them in the same document.

1673
01:18:30,580 --> 01:18:32,570
中文字幕
Right now we are mixing multiple languages.

1674
01:18:32,570 --> 01:18:34,110
中文字幕
Really good observation.

1675
01:18:34,110 --> 01:18:37,100
中文字幕
So a couple of weeks ago I really preached the separation of concerns,

1676
01:18:37,100 --> 01:18:38,630
中文字幕
and therefore separation of files.

1677
01:18:38,630 --> 01:18:40,940
中文字幕
And that's why we introduced a .css file,

1678
01:18:40,940 --> 01:18:44,450
中文字幕
we also briefly showed examples of a .js file.

1679
01:18:44,450 --> 01:18:47,780
中文字幕
The short answer is as your applications get more complex,

1680
01:18:47,780 --> 01:18:48,830
中文字幕
life starts to get messy.

1681
01:18:48,830 --> 01:18:50,960
中文字幕
And the team and I were actually talking about this

1682
01:18:50,960 --> 01:18:53,210
中文字幕
earlier as to how to present some of these examples,

1683
01:18:53,210 --> 01:18:57,770
中文字幕
because what you are seeing in my design decision here is a tension.

1684
01:18:57,770 --> 01:19:00,090
中文字幕
So that tension here is as follows.

1685
01:19:00,090 --> 01:19:04,100
中文字幕
It is not necessarily the best practice to just have your logical JavaScript

1686
01:19:04,100 --> 01:19:06,790
中文字幕
code comingled with your HTML.

1687
01:19:06,790 --> 01:19:08,960
中文字幕
It makes it harder to collaborate with someone else.

1688
01:19:08,960 --> 01:19:11,900
中文字幕
If one of you is really good at design and wants to work on the HTML and CSS,

1689
01:19:11,900 --> 01:19:14,540
中文字幕
the other person really wants to do the JavaScript code, kind of hard

1690
01:19:14,540 --> 01:19:16,460
中文字幕
to do that when they're both in the same file.

1691
01:19:16,460 --> 01:19:17,900
中文字幕
So we could factor this out.

1692
01:19:17,900 --> 01:19:23,420
中文字幕
I could change this line, just to be super clear, to be this.

1693
01:19:23,420 --> 01:19:27,110
中文字幕
Instead of putting my actual code in the file, I could do something like this.

1694
01:19:27,110 --> 01:19:32,930
中文字幕
The source of this shall be form.js, and that is just it.

1695
01:19:32,930 --> 01:19:36,170
中文字幕
And then I have a separate file maybe my colleague works in as follows.

1696
01:19:36,170 --> 01:19:38,420
中文字幕
But at some point the thoughts that go through my head

1697
01:19:38,420 --> 01:19:42,710
中文字幕
are, it's only like 10 lines of code and I just

1698
01:19:42,710 --> 01:19:45,440
中文字幕
have to create a second file now, and that second file

1699
01:19:45,440 --> 01:19:48,230
中文字幕
is going to be maybe in a different folder as my template.

1700
01:19:48,230 --> 01:19:51,860
中文字幕
And you know, it feels like this is just overengineering a solution

1701
01:19:51,860 --> 01:19:52,740
中文字幕
to the problem.

1702
01:19:52,740 --> 01:19:57,420
中文字幕
However, once it's 20 lines, 100 lines, now OK, now it's feeling messy.

1703
01:19:57,420 --> 01:19:59,220
中文字幕
Somewhere there's this inflection point.

1704
01:19:59,220 --> 01:20:02,240
中文字幕
And this is where reasonable people will disagree, and I might argue one way,

1705
01:20:02,240 --> 01:20:03,490
中文字幕
you might argue the other way.

1706
01:20:03,490 --> 01:20:05,900
中文字幕
And honestly, both of us are probably right.

1707
01:20:05,900 --> 01:20:09,680
中文字幕
And so this just speaks to the web's development over time.

1708
01:20:09,680 --> 01:20:12,350
中文字幕
And there's fancier frameworks now. and if we tie things earlier

1709
01:20:12,350 --> 01:20:16,270
中文字幕
into the question about CS50 beyond, an opportunity after this class that

1710
01:20:16,270 --> 01:20:18,110
中文字幕
looks more closely at web programming, there

1711
01:20:18,110 --> 01:20:22,130
中文字幕
are even fancier frameworks nowadays than Flask and than Bootstrap

1712
01:20:22,130 --> 01:20:23,720
中文字幕
that if tried to solve this problem.

1713
01:20:23,720 --> 01:20:26,590
中文字幕
React is one of the most popular ones developed by Facebook,

1714
01:20:26,590 --> 01:20:28,340
中文字幕
now open source and used by so many people

1715
01:20:28,340 --> 01:20:30,710
中文字幕
around the world that actually addresses this issue.

1716
01:20:30,710 --> 01:20:33,530
中文字幕
And it allows you to separate your HTML from your CSS

1717
01:20:33,530 --> 01:20:37,820
中文字幕
from your JavaScript in different parts of the file but still in the same file.

1718
01:20:37,820 --> 01:20:39,500
中文字幕
And that was their particular solution.

1719
01:20:39,500 --> 01:20:42,740
中文字幕
And View and Angular, there are so many different solutions to these problems.

1720
01:20:42,740 --> 01:20:45,770
中文字幕
And unfortunately, once we take the training wheels of CS50 off,

1721
01:20:45,770 --> 01:20:46,940
中文字幕
this is what's ahead of you.

1722
01:20:46,940 --> 01:20:47,980
中文字幕
The world is messy.

1723
01:20:47,980 --> 01:20:50,690
中文字幕
And the reason there are so many darn languages and frameworks is

1724
01:20:50,690 --> 01:20:53,810
中文字幕
because people like you have these instincts and think,

1725
01:20:53,810 --> 01:20:55,040
中文字幕
this could be done better.

1726
01:20:55,040 --> 01:20:57,690
中文字幕
And thus do we iterate and have new and new technologies.

1727
01:20:57,690 --> 01:20:59,780
中文字幕
But this is the kind of stuff-- and honestly, this

1728
01:20:59,780 --> 01:21:02,370
中文字幕
is the kind of silliness that changes over time.

1729
01:21:02,370 --> 01:21:04,910
中文字幕
The fundamentals of HTTP, and client side code,

1730
01:21:04,910 --> 01:21:07,880
中文字幕
and JavaScript code, those fundamentals are invariant

1731
01:21:07,880 --> 01:21:10,430
中文字幕
even as the implementation details change.

1732
01:21:10,430 --> 01:21:12,710
中文字幕
So the short answer is, could this be better?

1733
01:21:12,710 --> 01:21:13,390
中文字幕
Probably.

1734
01:21:13,390 --> 01:21:14,390
中文字幕
Could it be much better?

1735
01:21:14,390 --> 01:21:15,080
中文字幕
I don't know.

1736
01:21:15,080 --> 01:21:18,860
中文字幕
It really now becomes more of a debate among developers.

1737
01:21:18,860 --> 01:21:20,000
中文字幕
Good question.

1738
01:21:20,000 --> 01:21:23,420
中文字幕
All right, so let's now use some of these basic building

1739
01:21:23,420 --> 01:21:26,330
中文字幕
blocks to make a final set of examples that demonstrates

1740
01:21:26,330 --> 01:21:29,730
中文字幕
a feature with which most of us are pretty familiar reminiscent of what we

1741
01:21:29,730 --> 01:21:31,280
中文字幕
did two weeks ago with Google Search.

1742
01:21:31,280 --> 01:21:32,780
中文字幕
At the time we searched for cats.

1743
01:21:32,780 --> 01:21:35,150
中文字幕
Today we'll keep it a little simpler and a little less graphical

1744
01:21:35,150 --> 01:21:36,230
中文字幕
and just search for words.

1745
01:21:36,230 --> 01:21:38,480
中文字幕
Because you'll recall from our speller problem set,

1746
01:21:38,480 --> 01:21:42,860
中文字幕
you implemented a spell checker with 140,000 plus English words.

1747
01:21:42,860 --> 01:21:45,770
中文字幕
That's a pretty juicy dataset to search over,

1748
01:21:45,770 --> 01:21:49,550
中文字幕
and you're probably all familiar with autocomplete these days.

1749
01:21:49,550 --> 01:21:52,370
中文字幕
There's hardly a website these days that when you start typing it

1750
01:21:52,370 --> 01:21:54,270
中文字幕
doesn't try to finish your thought for you.

1751
01:21:54,270 --> 01:21:56,450
中文字幕
Google, Facebook, any a number of other sites.

1752
01:21:56,450 --> 01:21:58,900
中文字幕
So autocomplete, how does that work?

1753
01:21:58,900 --> 01:22:00,900
中文字幕
Well, let me propose the following mental model.

1754
01:22:00,900 --> 01:22:03,260
中文字幕
If you do have some data set like a big list of words,

1755
01:22:03,260 --> 01:22:06,440
中文字幕
or a big list of Facebook friends, or a big list of whatever,

1756
01:22:06,440 --> 01:22:09,970
中文字幕
you might store that server side because it's a lot, a lot of data.

1757
01:22:09,970 --> 01:22:12,350
中文字幕
And in fact, next week you might store in a big database.

1758
01:22:12,350 --> 01:22:14,140
中文字幕
But for today we'll just store it in a file

1759
01:22:14,140 --> 01:22:15,980
中文字幕
like we did for the speller piece set.

1760
01:22:15,980 --> 01:22:18,110
中文字幕
But if you want to create an interactive experience

1761
01:22:18,110 --> 01:22:20,210
中文字幕
for the human, what language are you're probably

1762
01:22:20,210 --> 01:22:24,340
中文字幕
going to want to use so that he or she gets immediate feedback?

1763
01:22:24,340 --> 01:22:25,520
中文字幕
Probably JavaScript, right?

1764
01:22:25,520 --> 01:22:26,650
中文字幕
That's the whole principle.

1765
01:22:26,650 --> 01:22:28,810
中文字幕
Client side code is just going to execute faster because there's

1766
01:22:28,810 --> 01:22:30,820
中文字幕
no internet between you and the code.

1767
01:22:30,820 --> 01:22:33,670
中文字幕
But with Python, you have access to files.

1768
01:22:33,670 --> 01:22:36,850
中文字幕
And yet with JavaScript code you have closer access to the user,

1769
01:22:36,850 --> 01:22:38,230
中文字幕
so there's these tensions.

1770
01:22:38,230 --> 01:22:43,150
中文字幕
So how could we go about building a site that lets a human via form search

1771
01:22:43,150 --> 01:22:45,310
中文字幕
across that file for words?

1772
01:22:45,310 --> 01:22:47,080
中文字幕
Well, let's start as follows.

1773
01:22:47,080 --> 01:22:52,900
中文字幕
So in word 0 we have the following.

1774
01:22:52,900 --> 01:22:56,680
中文字幕
Large, which is just a text file borrowed from the speller problem set,

1775
01:22:56,680 --> 01:22:58,480
中文字幕
140,000 words, one poor line therein.

1776
01:22:58,480 --> 01:23:00,400
中文字幕
I'm not even going to double click and open it

1777
01:23:00,400 --> 01:23:03,280
中文字幕
because it's so darn big it'll take a few seconds to open.

1778
01:23:03,280 --> 01:23:06,560
中文字幕
In application.py we have probably the entry point to this application,

1779
01:23:06,560 --> 01:23:09,210
中文字幕
and in templates we have just three templates this time.

1780
01:23:09,210 --> 01:23:12,010
中文字幕
So just when you're reading someone else's code for the first time,

1781
01:23:12,010 --> 01:23:13,210
中文字幕
where should our entry point be?

1782
01:23:13,210 --> 01:23:15,710
中文字幕
Where should we start looking to understand what's going on?

1783
01:23:18,170 --> 01:23:19,230
中文字幕
Maybe application.py.

1784
01:23:19,230 --> 01:23:20,360
中文字幕
Or honestly, you know what?

1785
01:23:20,360 --> 01:23:23,030
中文字幕
If you want to see what something does, run it.

1786
01:23:23,030 --> 01:23:23,990
中文字幕
No harm in doing that.

1787
01:23:23,990 --> 01:23:25,600
中文字幕
So lets run Flask run.

1788
01:23:25,600 --> 01:23:26,850
中文字幕
Make this a little bit bigger.

1789
01:23:26,850 --> 01:23:30,020
中文字幕
Let me open up the URL here, open, and I see a very simple form

1790
01:23:30,020 --> 01:23:31,400
中文字幕
asking me for a query.

1791
01:23:31,400 --> 01:23:35,810
中文字幕
Let me go ahead and search for a and click Search.

1792
01:23:35,810 --> 01:23:37,970
中文字幕
And after a moment, OK.

1793
01:23:37,970 --> 01:23:40,730
中文字幕
This is a lot of words, but apparently these

1794
01:23:40,730 --> 01:23:42,860
中文字幕
are all the English words that our dictionary knows

1795
01:23:42,860 --> 01:23:44,480
中文字幕
about that start with the letter a.

1796
01:23:44,480 --> 01:23:46,350
中文字幕
And if I go all the way to the bottom, you'll

1797
01:23:46,350 --> 01:23:49,460
中文字幕
see it stops with az whatever with no B words, in fact.

1798
01:23:49,460 --> 01:23:52,290
中文字幕
Well, let's make sure this actually works and isn't just a trick.

1799
01:23:52,290 --> 01:23:54,320
中文字幕
Let's search for b words.

1800
01:23:54,320 --> 01:23:56,170
中文字幕
OK, so that seems to work, as well.

1801
01:23:56,170 --> 01:23:58,730
中文字幕
And notice I borrowed some inspiration from Google.

1802
01:23:58,730 --> 01:24:02,450
中文字幕
Notice that the route I'm using is called slash search like two weeks ago.

1803
01:24:02,450 --> 01:24:06,600
中文字幕
Does take a cue parameter for query, and b is whatever the human typed in.

1804
01:24:06,600 --> 01:24:10,010
中文字幕
So if I want to search for z the words, enter,

1805
01:24:10,010 --> 01:24:11,750
中文字幕
I should hopefully get back now z words.

1806
01:24:11,750 --> 01:24:15,650
中文字幕
So now unlike two weeks ago, we can implement both the front end

1807
01:24:15,650 --> 01:24:17,610
中文字幕
and the back end for a search engine.

1808
01:24:17,610 --> 01:24:19,910
中文字幕
But our search engine's searching now just for words.

1809
01:24:19,910 --> 01:24:23,150
中文字幕
So let's look at application.py as proposed, which is the entry point,

1810
01:24:23,150 --> 01:24:24,800
中文字幕
and let's see how I'm doing this.

1811
01:24:24,800 --> 01:24:28,220
中文字幕
So this is some code that I borrowed a little bit from last week

1812
01:24:28,220 --> 01:24:30,230
中文字幕
when we quickly implemented the spell checker

1813
01:24:30,230 --> 01:24:33,140
中文字幕
in like 12 or 20 lines of Python code.

1814
01:24:33,140 --> 01:24:35,270
中文字幕
I'm declaring a global variable called words,

1815
01:24:35,270 --> 01:24:38,110
中文字幕
and I capitalized it just to be reminiscent of last time

1816
01:24:38,110 --> 01:24:39,160
中文字幕
and the problem set.

1817
01:24:39,160 --> 01:24:41,240
中文字幕
I'm using this syntax which I alluded to earlier

1818
01:24:41,240 --> 01:24:43,700
中文字幕
is just more conventional or Pythonic.

1819
01:24:43,700 --> 01:24:47,540
中文字幕
Open the large file in Read mode and call the variable file.

1820
01:24:47,540 --> 01:24:50,240
中文字幕
Then here is a for loop via which you can iterate over

1821
01:24:50,240 --> 01:24:53,330
中文字幕
every line in the file, reading one at a time.

1822
01:24:53,330 --> 01:24:55,670
中文字幕
But recall, what does every line in this file end with?

1823
01:24:58,270 --> 01:25:01,820
中文字幕
Like a backslash n, and we don't really want those as part of the words.

1824
01:25:01,820 --> 01:25:03,320
中文字幕
That's not part of the English word.

1825
01:25:03,320 --> 01:25:07,290
中文字幕
So R strip, right strip removes any whitespace from the end of the string.

1826
01:25:07,290 --> 01:25:09,330
中文字幕
And that's why I needed to add that extra line.

1827
01:25:09,330 --> 01:25:11,750
中文字幕
So I'm just cleaning up the file or massaging the data

1828
01:25:11,750 --> 01:25:15,300
中文字幕
as you might do with any sort of data based application.

1829
01:25:15,300 --> 01:25:18,320
中文字幕
So then I just seem to have this route that renders the template.

1830
01:25:18,320 --> 01:25:21,440
中文字幕
If I look in index.html, let's follow the bread crumbs.

1831
01:25:21,440 --> 01:25:23,120
中文字幕
Go into index.html.

1832
01:25:23,120 --> 01:25:24,830
中文字幕
OK, not that much going on here.

1833
01:25:24,830 --> 01:25:27,830
中文字幕
Looks like an HTML form, the action of which is slash search,

1834
01:25:27,830 --> 01:25:28,850
中文字幕
just like Google's.

1835
01:25:28,850 --> 01:25:31,180
中文字幕
The method of which is is get just like Google's.

1836
01:25:31,180 --> 01:25:34,100
中文字幕
There's nothing really private about the words I'm searching for here,

1837
01:25:34,100 --> 01:25:35,390
中文字幕
so I don't care.

1838
01:25:35,390 --> 01:25:37,010
中文字幕
There's some fancier features here.

1839
01:25:37,010 --> 01:25:39,840
中文字幕
Notice placeholder is the grayed out text the human sees.

1840
01:25:39,840 --> 01:25:41,090
中文字幕
Auto focus.

1841
01:25:41,090 --> 01:25:42,990
中文字幕
What does this do again?

1842
01:25:42,990 --> 01:25:45,070
中文字幕
This is just a UI feature, better user experience.

1843
01:25:45,070 --> 01:25:47,290
中文字幕
Puts the like, right in the text box.

1844
01:25:47,290 --> 01:25:50,210
中文字幕
Yeah, it puts the cursor right in the text box.

1845
01:25:50,210 --> 01:25:53,040
中文字幕
To focus on something in a web page means make it what's

1846
01:25:53,040 --> 01:25:54,590
中文字幕
interacting with the user right now.

1847
01:25:54,590 --> 01:25:56,710
中文字幕
And Mac OS, for instance, highlights it in blue.

1848
01:25:56,710 --> 01:25:58,590
中文字幕
So when you first load the page, the cursoe's

1849
01:25:58,590 --> 01:26:02,160
中文字幕
blinking in the choice of text boxes that you care about most.

1850
01:26:02,160 --> 01:26:05,620
中文字幕
Autocomplete off just disables the browser's version of autocomplete.

1851
01:26:05,620 --> 01:26:08,250
中文字幕
So I don't see past searches, just because the whole point here

1852
01:26:08,250 --> 01:26:10,440
中文字幕
is to implement this ourselves ultimately,

1853
01:26:10,440 --> 01:26:11,820
中文字幕
and then I have my search button.

1854
01:26:11,820 --> 01:26:15,360
中文字幕
This is just jinja stuff from Flask so that I have a layout file.

1855
01:26:15,360 --> 01:26:16,730
中文字幕
Lets follow that breadcrumb.

1856
01:26:16,730 --> 01:26:20,250
中文字幕
Lay out.html, nothing really that interesting going on there.

1857
01:26:20,250 --> 01:26:23,010
中文字幕
If you've ever wondered why we have these in a lot of our demos,

1858
01:26:23,010 --> 01:26:26,130
中文字幕
this cryptic looking line here just makes web sites look better

1859
01:26:26,130 --> 01:26:27,600
中文字幕
on mobile devices.

1860
01:26:27,600 --> 01:26:30,750
中文字幕
Typically by default if you pull up your phone and look at a website,

1861
01:26:30,750 --> 01:26:32,700
中文字幕
if it doesn't have that kind of line, like

1862
01:26:32,700 --> 01:26:35,970
中文字幕
the text is going to be super tiny unless you pinch and zoom.

1863
01:26:35,970 --> 01:26:38,460
中文字幕
By using this line and variations thereof,

1864
01:26:38,460 --> 01:26:40,320
中文字幕
it will increase the default font size a bit

1865
01:26:40,320 --> 01:26:42,540
中文字幕
to make it a little more tolerable on small screen.

1866
01:26:42,540 --> 01:26:44,970
中文字幕
So it's an easy win for users experience.

1867
01:26:44,970 --> 01:26:48,420
中文字幕
OK, I seem to have exhausted all the interesting stuff in these templates.

1868
01:26:48,420 --> 01:26:50,740
中文字幕
Let's look at another and final route.

1869
01:26:50,740 --> 01:26:55,410
中文字幕
Here's my search route, and this is pretty Pythonic.

1870
01:26:55,410 --> 01:26:57,510
中文字幕
This is a mouthful, and will re-implement it

1871
01:26:57,510 --> 01:26:59,260
中文字幕
in a different way in just a moment.

1872
01:26:59,260 --> 01:27:02,880
中文字幕
So I have a search route that listens for get requests on slash search.

1873
01:27:02,880 --> 01:27:07,020
中文字幕
Then this crazy looking line is about as Pythonic as code gets.

1874
01:27:07,020 --> 01:27:08,820
中文字幕
And I'll explain what this is doing and why

1875
01:27:08,820 --> 01:27:14,130
中文字幕
it's conventional as opposed to straightforward at first glance.

1876
01:27:14,130 --> 01:27:17,010
中文字幕
And then I render the template, passing in these words.

1877
01:27:17,010 --> 01:27:20,610
中文字幕
So this one liner on line 17 actually has the effect

1878
01:27:20,610 --> 01:27:23,910
中文字幕
of searching 140,000 words for whatever words

1879
01:27:23,910 --> 01:27:26,110
中文字幕
start with what the user typed in.

1880
01:27:26,110 --> 01:27:28,440
中文字幕
See, this would be a pain in the neck to do.

1881
01:27:28,440 --> 01:27:30,620
中文字幕
In Python you can do it with literally one line.

1882
01:27:30,620 --> 01:27:33,120
中文字幕
A long line, but one line nonetheless.

1883
01:27:33,120 --> 01:27:34,650
中文字幕
Let me make this more clear.

1884
01:27:34,650 --> 01:27:38,570
中文字幕
If I were to search for words in this big file,

1885
01:27:38,570 --> 01:27:39,870
中文字幕
I might do something like this.

1886
01:27:39,870 --> 01:27:41,150
中文字幕
Words is an empty list.

1887
01:27:41,150 --> 01:27:43,670
中文字幕
So this lower case words is all of the words that match,

1888
01:27:43,670 --> 01:27:45,220
中文字幕
that I want to send back to the user.

1889
01:27:45,220 --> 01:27:47,520
中文字幕
So by default I have no idea what to send back.

1890
01:27:47,520 --> 01:27:48,960
中文字幕
But I do know I can do this.

1891
01:27:48,960 --> 01:27:50,640
中文字幕
For word in Words--

1892
01:27:50,640 --> 01:27:53,630
中文字幕
which is the capitalized variable, the constant up at the top

1893
01:27:53,630 --> 01:27:55,380
中文字幕
that has the whole-- or not even constant,

1894
01:27:55,380 --> 01:27:58,760
中文字幕
but the global variable that has all of the words from the file, here

1895
01:27:58,760 --> 01:28:00,420
中文字幕
is a for loop over those.

1896
01:28:00,420 --> 01:28:02,290
中文字幕
I can now say something like this.

1897
01:28:02,290 --> 01:28:07,110
中文字幕
If the current word starts with whatever the user typed in-- well,

1898
01:28:07,110 --> 01:28:08,340
中文字幕
what's the user typing in?

1899
01:28:08,340 --> 01:28:13,080
中文字幕
Well, q equals request.args.get quote-unquote q,

1900
01:28:13,080 --> 01:28:17,790
中文字幕
gives me the user's name, dorm, or in this case Q value for query.

1901
01:28:17,790 --> 01:28:22,410
中文字幕
So if the word that we're currently iterating over starts with q,

1902
01:28:22,410 --> 01:28:33,350
中文字幕
I can go ahead and append to my-- whoops, append to this list that word.

1903
01:28:33,350 --> 01:28:35,880
中文字幕
Would you say you're comfortable with these lines here?

1904
01:28:35,880 --> 01:28:41,070
中文字幕
To recap, give me an empty list in which to store the search results,

1905
01:28:41,070 --> 01:28:44,650
中文字幕
iterate over all possible 140,000 plus words, get--

1906
01:28:44,650 --> 01:28:45,900
中文字幕
and actually, this was stupid.

1907
01:28:45,900 --> 01:28:49,050
中文字幕
I should just put this up here, because I only need to check for that once.

1908
01:28:49,050 --> 01:28:52,290
中文字幕
So store the user's input in a variable called q.

1909
01:28:52,290 --> 01:28:57,420
中文字幕
For each word among the 140,000, check if it starts with the user's input--

1910
01:28:57,420 --> 01:28:59,190
中文字幕
a, b, z, whatever.

1911
01:28:59,190 --> 01:29:02,100
中文字幕
And if so, append it to there.

1912
01:29:02,100 --> 01:29:05,190
中文字幕
So let's temporarily get rid of this and just render the template.

1913
01:29:05,190 --> 01:29:09,210
中文字幕
So notice this gets the job done, but this is very C-like logic.

1914
01:29:09,210 --> 01:29:11,370
中文字幕
It's not wrong, it's perfectly correct.

1915
01:29:11,370 --> 01:29:14,460
中文字幕
But Python is a language that's meant to be

1916
01:29:14,460 --> 01:29:17,340
中文字幕
a little more human readable and a little more elegant,

1917
01:29:17,340 --> 01:29:19,050
中文字幕
if a little more non-obvious.

1918
01:29:19,050 --> 01:29:21,270
中文字幕
So this one line does the exact same thing

1919
01:29:21,270 --> 01:29:24,530
中文字幕
using a feature called a list comprehension, which

1920
01:29:24,530 --> 01:29:27,330
中文字幕
is ironic if you don't quite comprehend how it's working.

1921
01:29:27,330 --> 01:29:30,080
中文字幕
But here's the variable I want to create called Words.

1922
01:29:30,080 --> 01:29:33,160
中文字幕
These square brackets here say give me a list.

1923
01:29:33,160 --> 01:29:34,710
中文字幕
What do you want to put in that list?

1924
01:29:34,710 --> 01:29:36,330
中文字幕
I want to put a word in this list.

1925
01:29:36,330 --> 01:29:38,130
中文字幕
Which word do you want to put in this list?

1926
01:29:38,130 --> 01:29:42,960
中文字幕
The result of inducing this loop and then only putting in this list

1927
01:29:42,960 --> 01:29:46,570
中文字幕
a word if it starts with what the human typed in.

1928
01:29:46,570 --> 01:29:48,660
中文字幕
So it takes some getting used to, but this is just

1929
01:29:48,660 --> 01:29:53,160
中文字幕
a one liner way, a very Pythonic way of expressing those several lines of very

1930
01:29:53,160 --> 01:29:56,130
中文字幕
procedural code into a simple one line.

1931
01:29:56,130 --> 01:29:57,450
中文字幕
Is it better?

1932
01:29:57,450 --> 01:29:58,490
中文字幕
Not if you can't read it.

1933
01:29:58,490 --> 01:30:00,400
中文字幕
But once you get more comfortable with Python,

1934
01:30:00,400 --> 01:30:02,220
中文字幕
yes, it's better because it's less code.

1935
01:30:02,220 --> 01:30:02,920
中文字幕
Yeah?

1936
01:30:02,920 --> 01:30:07,870
中文字幕
You said Python uses notation to tell where conditions are.

1937
01:30:07,870 --> 01:30:09,420
中文字幕
How is ?

1938
01:30:09,420 --> 01:30:10,550
中文字幕
Good question.

1939
01:30:10,550 --> 01:30:13,700
中文字幕
In this case of a list comprehension, you can only

1940
01:30:13,700 --> 01:30:16,610
中文字幕
have one line or one condition.

1941
01:30:16,610 --> 01:30:19,800
中文字幕
You can't have multiple lines therein, so I cannot start hitting Enter

1942
01:30:19,800 --> 01:30:20,600
中文字幕
and indenting here.

1943
01:30:20,600 --> 01:30:21,890
中文字幕
It's just not allowed.

1944
01:30:21,890 --> 01:30:24,950
中文字幕
So you would only use this-- and I'm frankly really pushing the limits.

1945
01:30:24,950 --> 01:30:27,950
中文字幕
You should only really use this syntax when it fits on your screen

1946
01:30:27,950 --> 01:30:30,200
中文字幕
or fits on a reasonable person's screen.

1947
01:30:30,200 --> 01:30:33,530
中文字幕
After that you should probably do something a little more expressive.

1948
01:30:33,530 --> 01:30:35,270
中文字幕
Other questions?

1949
01:30:35,270 --> 01:30:36,860
中文字幕
But this is very common to see online.

1950
01:30:36,860 --> 01:30:39,380
中文字幕
So any tutorials, if you ever see this kind of one liner,

1951
01:30:39,380 --> 01:30:43,460
中文字幕
just try to think about it from that approach what it is actually doing.

1952
01:30:43,460 --> 01:30:46,820
中文字幕
OK, so propose from a user experience perspective

1953
01:30:46,820 --> 01:30:48,320
中文字幕
how could this program be better?

1954
01:30:48,320 --> 01:30:50,070
中文字幕
Because this is just our first version.

1955
01:30:50,070 --> 01:30:53,780
中文字幕
So what could be better for the user than this?

1956
01:30:57,630 --> 01:30:59,180
中文字幕
What could be better?

1957
01:30:59,180 --> 01:31:00,780
中文字幕
Yeah?

1958
01:31:00,780 --> 01:31:06,510
中文字幕
Just going back, can you explain words in caps?

1959
01:31:06,510 --> 01:31:07,430
中文字幕
Oh, sure.

1960
01:31:07,430 --> 01:31:13,670
中文字幕
Words in caps is this global variable I defined up here that stores all 140,000

1961
01:31:13,670 --> 01:31:14,450
中文字幕
plus words.

1962
01:31:14,450 --> 01:31:17,900
中文字幕
That's the really big file called large, the text file.

1963
01:31:17,900 --> 01:31:20,000
中文字幕
Down here I just need a local variable.

1964
01:31:20,000 --> 01:31:23,030
中文字幕
And if it's more clear, I could call it results and then just

1965
01:31:23,030 --> 01:31:24,590
中文字幕
say results equals results.

1966
01:31:24,590 --> 01:31:28,370
中文字幕
That is the subset of words that start with a, or b,

1967
01:31:28,370 --> 01:31:30,780
中文字幕
or whatever the human typed in.

1968
01:31:30,780 --> 01:31:31,870
中文字幕
That's all.

1969
01:31:31,870 --> 01:31:32,480
中文字幕
Good question.

1970
01:31:32,480 --> 01:31:32,690
中文字幕
Yeah?

1971
01:31:32,690 --> 01:31:34,640
中文字幕
Why do we change the last time-- why

1972
01:31:34,640 --> 01:31:37,460
中文字幕
did you have to change args to form?

1973
01:31:37,460 --> 01:31:39,550
中文字幕
Why did I have to change my args to--

1974
01:31:39,550 --> 01:31:41,590
中文字幕
Forms?

1975
01:31:41,590 --> 01:31:45,940
中文字幕
So earlier today when I didn't understand what was going on,

1976
01:31:45,940 --> 01:31:49,090
中文字幕
you should use request.args for get requests.

1977
01:31:49,090 --> 01:31:52,440
中文字幕
You should use request.form for post requests.

1978
01:31:52,440 --> 01:31:55,060
中文字幕
But it's still .get after?

1979
01:31:55,060 --> 01:31:57,040
中文字幕
It's always .get, yes.

1980
01:31:57,040 --> 01:31:59,260
中文字幕
But you change what you're getting things from.

1981
01:31:59,260 --> 01:32:03,730
中文字幕
In an ideal world, it would have been something-- oh, I see what you mean.

1982
01:32:03,730 --> 01:32:05,950
中文字幕
Get in this sense is the verb.

1983
01:32:05,950 --> 01:32:08,960
中文字幕
We humans mean go get something.

1984
01:32:08,960 --> 01:32:11,910
中文字幕
Args in this sense, if they had done get--

1985
01:32:11,910 --> 01:32:14,410
中文字幕
I'm making this up, but this is probably why they did this.

1986
01:32:14,410 --> 01:32:18,460
中文字幕
Because get from get seems weird, whereas get from post is less weird.

1987
01:32:18,460 --> 01:32:21,840
中文字幕
But it's just they called it args and form instead.

1988
01:32:21,840 --> 01:32:24,710
中文字幕
OK, so let's actually improve this, but how?

1989
01:32:24,710 --> 01:32:26,130
中文字幕
What could be better for the user?

1990
01:32:26,130 --> 01:32:26,600
中文字幕
Yeah?

1991
01:32:26,600 --> 01:32:28,390
中文字幕
They could search a word, not just the first letter.

1992
01:32:28,390 --> 01:32:29,980
中文字幕
OK, maybe searching a whole word

1993
01:32:29,980 --> 01:32:31,680
中文字幕
would be good, not just the first letter.

1994
01:32:31,680 --> 01:32:33,260
中文字幕
What else could we do?

1995
01:32:33,260 --> 01:32:38,880
中文字幕
We can create an index list of letters and words?

1996
01:32:38,880 --> 01:32:40,840
中文字幕
OK, we could create an index list.

1997
01:32:40,840 --> 01:32:45,010
中文字幕
So maybe using a hash or some form of inspiration from our problem

1998
01:32:45,010 --> 01:32:47,890
中文字幕
set with Speller and actually use a more sophisticated data structure

1999
01:32:47,890 --> 01:32:49,870
中文字幕
to get these answers more quickly.

2000
01:32:49,870 --> 01:32:53,080
中文字幕
And let me propose, too, the goal here is to actually implement autocomplete,

2001
01:32:53,080 --> 01:32:54,380
中文字幕
and this was not auto complete.

2002
01:32:54,380 --> 01:32:56,020
中文字幕
This was like old school search.

2003
01:32:56,020 --> 01:32:58,720
中文字幕
Type in a query, hit Enter, get a page of results.

2004
01:32:58,720 --> 01:33:00,760
中文字幕
What if we want to do something more immediate?

2005
01:33:00,760 --> 01:33:02,350
中文字幕
So let me actually propose this.

2006
01:33:02,350 --> 01:33:05,140
中文字幕
Before looking at the code, let me go into words 1.

2007
01:33:05,140 --> 01:33:07,660
中文字幕
Let me go ahead and run Flask in that directory.

2008
01:33:07,660 --> 01:33:09,370
中文字幕
Let me go ahead and reload the form here,

2009
01:33:09,370 --> 01:33:12,040
中文字幕
and now notice no Submit button because there's not going

2010
01:33:12,040 --> 01:33:13,960
中文字幕
to be any actual submissions here.

2011
01:33:13,960 --> 01:33:18,220
中文字幕
But I'm going to go ahead and hit the letter A, and ooh, that's kind of cool.

2012
01:33:18,220 --> 01:33:20,140
中文字幕
Let me delete that, goes away.

2013
01:33:20,140 --> 01:33:22,120
中文字幕
B, there's all the B words.

2014
01:33:22,120 --> 01:33:28,420
中文字幕
Let me go B-A words, B-A-B words, B-A-B-A words.

2015
01:33:28,420 --> 01:33:31,450
中文字幕
This is how autocomplete works.

2016
01:33:31,450 --> 01:33:35,800
中文字幕
So it seems to be responding immediately to my input, so something's happening.

2017
01:33:35,800 --> 01:33:37,630
中文字幕
But I'm not actually submitting the form.

2018
01:33:37,630 --> 01:33:40,900
中文字幕
So I'm kind of using it now, it seems client side JavaScript

2019
01:33:40,900 --> 01:33:42,340
中文字幕
to maybe talk to the server?

2020
01:33:42,340 --> 01:33:42,910
中文字幕
Let's infer.

2021
01:33:42,910 --> 01:33:44,710
中文字幕
So here, too, this should be your instinct.

2022
01:33:44,710 --> 01:33:47,410
中文字幕
Whenever you're trying to understand how someone's website works,

2023
01:33:47,410 --> 01:33:50,710
中文字幕
if you want to learn from it or mimic certain fundamental functionality,

2024
01:33:50,710 --> 01:33:52,810
中文字幕
go ahead and inspect the page.

2025
01:33:52,810 --> 01:33:55,690
中文字幕
And you don't probably care too much about the HTML yet.

2026
01:33:55,690 --> 01:33:57,130
中文字幕
Where is this data coming from?

2027
01:33:57,130 --> 01:34:00,640
中文字幕
Let me click on the Network tab, which we looked at a couple of weeks ago.

2028
01:34:00,640 --> 01:34:03,310
中文字幕
Let me go ahead and restart this and let me clear this and start

2029
01:34:03,310 --> 01:34:04,660
中文字幕
from the beginning of the story.

2030
01:34:04,660 --> 01:34:08,590
中文字幕
Let's see what happens when I type the letter A. Interesting.

2031
01:34:08,590 --> 01:34:10,580
中文字幕
There is a web request.

2032
01:34:10,580 --> 01:34:14,830
中文字幕
So if I zoom in down here, notice that my browser actually searched

2033
01:34:14,830 --> 01:34:17,250
中文字幕
for Q equals A, the human's input.

2034
01:34:17,250 --> 01:34:19,420
中文字幕
Let me go ahead and-- it keeps searching because I'm

2035
01:34:19,420 --> 01:34:20,670
中文字幕
using keyboard shortcuts here.

2036
01:34:20,670 --> 01:34:22,900
中文字幕
But let me go ahead and click this row.

2037
01:34:22,900 --> 01:34:24,190
中文字幕
Notice what happened.

2038
01:34:24,190 --> 01:34:29,980
中文字幕
I made a request to slash search question mark q equals a via get.

2039
01:34:29,980 --> 01:34:31,600
中文字幕
Let's see what the response was.

2040
01:34:31,600 --> 01:34:34,000
中文字幕
The response here, if I view the source--

2041
01:34:34,000 --> 01:34:37,360
中文字幕
or rather, if I read the response--

2042
01:34:37,360 --> 01:34:38,800
中文字幕
notice what came back.

2043
01:34:38,800 --> 01:34:44,050
中文字幕
It looks like my server returned to me a fragment of HTML containing hundreds,

2044
01:34:44,050 --> 01:34:47,980
中文字幕
maybe thousands of words starting with A. But notice there's no UL tag,

2045
01:34:47,980 --> 01:34:51,430
中文字幕
there's no head tag, no title, no body, it's just a partial HTML fragment.

2046
01:34:51,430 --> 01:34:54,710
中文字幕
But that's interesting, because I know with Python I can do exactly that.

2047
01:34:54,710 --> 01:34:57,430
中文字幕
I can generate anything I want on the server,

2048
01:34:57,430 --> 01:35:01,400
中文字幕
and then maybe the browser can just plug in those changed the results.

2049
01:35:01,400 --> 01:35:03,710
中文字幕
So let me go ahead and look at the code for this page.

2050
01:35:03,710 --> 01:35:08,290
中文字幕
If I go now to the browser's source code, the view page source,

2051
01:35:08,290 --> 01:35:10,570
中文字幕
you'll see a few new lines.

2052
01:35:10,570 --> 01:35:14,420
中文字幕
So to do this easily, I'm actually using another library.

2053
01:35:14,420 --> 01:35:15,970
中文字幕
This one is called jQuery.

2054
01:35:15,970 --> 01:35:18,010
中文字幕
This was for many years super, super popular.

2055
01:35:18,010 --> 01:35:19,810
中文字幕
It's kind of starting to fall out of vogue,

2056
01:35:19,810 --> 01:35:21,970
中文字幕
but it's still so powerful and so useful.

2057
01:35:21,970 --> 01:35:25,160
中文字幕
And it's used by Bootstrap, the other CSS library we've talked about,

2058
01:35:25,160 --> 01:35:28,190
中文字幕
so it's perfectly reasonable to use it here.

2059
01:35:28,190 --> 01:35:30,340
中文字幕
Notice how I'm including it with the script tag,

2060
01:35:30,340 --> 01:35:32,380
中文字幕
and it's hosted on a third party website so

2061
01:35:32,380 --> 01:35:35,980
中文字幕
that I don't have to save a copy of it myself on my own IDE.

2062
01:35:35,980 --> 01:35:38,110
中文字幕
Then let's look at the code I actually wrote.

2063
01:35:38,110 --> 01:35:41,800
中文字幕
So notice that atop this file is not even a full fledged form,

2064
01:35:41,800 --> 01:35:43,300
中文字幕
it is just the HTML input.

2065
01:35:43,300 --> 01:35:44,680
中文字幕
Because I don't need a full form.

2066
01:35:44,680 --> 01:35:46,590
中文字幕
I don't need an action, I don't need a method,

2067
01:35:46,590 --> 01:35:50,080
中文字幕
because I'm not submitting it anywhere with the human's cooperation.

2068
01:35:50,080 --> 01:35:51,700
中文字幕
I'm going to use my own code.

2069
01:35:51,700 --> 01:35:55,870
中文字幕
So in my script tag here, my JavaScript code, notice what I'm doing.

2070
01:35:55,870 --> 01:35:57,880
中文字幕
This is some code from like two weeks ago.

2071
01:35:57,880 --> 01:36:01,060
中文字幕
I'm going to search the tree that represents this web page.

2072
01:36:01,060 --> 01:36:02,650
中文字幕
And indeed, it is meant to be a tree.

2073
01:36:02,650 --> 01:36:05,890
中文字幕
Recall from that time when we looked at an HTML page,

2074
01:36:05,890 --> 01:36:09,550
中文字幕
there is in memory, thanks to the browser, something treelike--

2075
01:36:09,550 --> 01:36:12,460
中文字幕
a DOM, document object model-- that represents your page.

2076
01:36:12,460 --> 01:36:16,940
中文字幕
Using JavaScript, can we change that page after the fact?

2077
01:36:16,940 --> 01:36:18,590
中文字幕
So what am I going to do?

2078
01:36:18,590 --> 01:36:23,620
中文字幕
I'm going to tell the browser whenever this input hears an event called on key

2079
01:36:23,620 --> 01:36:27,490
中文字幕
up-- so whenever the field has focus-- it's blue in Mac OS--

2080
01:36:27,490 --> 01:36:30,190
中文字幕
and the human hits the key and then let's go,

2081
01:36:30,190 --> 01:36:34,550
中文字幕
and the key goes up, go ahead and call the following anonymous function.

2082
01:36:34,550 --> 01:36:35,740
中文字幕
What do you want that to do?

2083
01:36:35,740 --> 01:36:37,540
中文字幕
Now, this code is a little cryptic, but let

2084
01:36:37,540 --> 01:36:40,660
中文字幕
me walk us through it because it's only three lines.

2085
01:36:40,660 --> 01:36:44,410
中文字幕
This code here is using a special feature--

2086
01:36:44,410 --> 01:36:47,350
中文字幕
dollar sign-- that comes from this library called jQuery.

2087
01:36:47,350 --> 01:36:48,670
中文字幕
More on that in a moment.

2088
01:36:48,670 --> 01:36:54,520
中文字幕
That library, somewhat confusingly named, has a function called get,

2089
01:36:54,520 --> 01:36:57,530
中文字幕
which has nothing to do with Python or the one we just talked about.

2090
01:36:57,530 --> 01:36:59,980
中文字幕
But this has to do with an HTTP get.

2091
01:36:59,980 --> 01:37:02,200
中文字幕
With this line of code, you can tell a browser,

2092
01:37:02,200 --> 01:37:06,940
中文字幕
even after a web page has been loaded, go get me this other URL, please.

2093
01:37:06,940 --> 01:37:08,620
中文字幕
So what URL do you want to get?

2094
01:37:08,620 --> 01:37:13,900
中文字幕
Go ahead and get me from the same server slash search q equals,

2095
01:37:13,900 --> 01:37:17,400
中文字幕
and then what does plus mean in JavaScript if you recall?

2096
01:37:17,400 --> 01:37:18,260
中文字幕
Concatenation.

2097
01:37:18,260 --> 01:37:20,620
中文字幕
So it means just append one string to the other.

2098
01:37:20,620 --> 01:37:22,420
中文字幕
So this is like saying, go ahead and get me

2099
01:37:22,420 --> 01:37:27,870
中文字幕
the URL that ends with slash search, question mark, Q equals A, or Q equals

2100
01:37:27,870 --> 01:37:31,140
中文字幕
B, or Q equals Z. Whatever the human typed and just gets

2101
01:37:31,140 --> 01:37:32,600
中文字幕
slapped onto the end.

2102
01:37:32,600 --> 01:37:34,440
中文字幕
And then that's where we're getting it from.

2103
01:37:34,440 --> 01:37:37,770
中文字幕
Input.value is the user's input, the value thereof.

2104
01:37:37,770 --> 01:37:40,790
中文字幕
And then the last line-- and this is perhaps the fanciest--

2105
01:37:40,790 --> 01:37:43,680
中文字幕
notice that I have an anonymous function.

2106
01:37:43,680 --> 01:37:47,010
中文字幕
In this library called jQuery, there is this function

2107
01:37:47,010 --> 01:37:49,590
中文字幕
called get that gets a URL.

2108
01:37:49,590 --> 01:37:54,570
中文字幕
When the server responds to your request with a virtual envelope of its own,

2109
01:37:54,570 --> 01:37:57,420
中文字幕
this anonymous function gets called and the response envelope

2110
01:37:57,420 --> 01:38:03,480
中文字幕
gets handed to you, so to speak, as a data argument, as a data variable.

2111
01:38:03,480 --> 01:38:05,070
中文字幕
Then what you can you do?

2112
01:38:05,070 --> 01:38:07,530
中文字幕
Document.queryselector UL.

2113
01:38:07,530 --> 01:38:08,220
中文字幕
What is UL?

2114
01:38:08,220 --> 01:38:11,790
中文字幕
It's an unordered list that by default on this page has nothing in it.

2115
01:38:11,790 --> 01:38:15,150
中文字幕
But recall that what the server is sending back is a bunch of LI tags.

2116
01:38:15,150 --> 01:38:18,160
中文字幕
That's great, because I want to put those LI tags right in between here.

2117
01:38:18,160 --> 01:38:19,300
中文字幕
So how do I do that?

2118
01:38:19,300 --> 01:38:21,610
中文字幕
I go into the so-called inner HTML of the UL tag,

2119
01:38:21,610 --> 01:38:23,280
中文字幕
and you might not have seen this before.

2120
01:38:23,280 --> 01:38:28,110
中文字幕
But you can change the contents of an existing tag inside of it

2121
01:38:28,110 --> 01:38:31,980
中文字幕
by using inner HTML and just plop the data in there.

2122
01:38:31,980 --> 01:38:34,090
中文字幕
And so what's happening is this.

2123
01:38:34,090 --> 01:38:36,360
中文字幕
Let me go ahead and open up Chrome's inspector.

2124
01:38:36,360 --> 01:38:37,920
中文字幕
Reload the page so it's empty.

2125
01:38:37,920 --> 01:38:40,080
中文字幕
Let me open up Chrome's inspector.

2126
01:38:40,080 --> 01:38:43,980
中文字幕
Go to elements, as is the default. And notice on this page,

2127
01:38:43,980 --> 01:38:48,300
中文字幕
notice that UL tag is opened and closed with nothing inside of it.

2128
01:38:48,300 --> 01:38:51,660
中文字幕
The moment, though, I search for something, watch what happens.

2129
01:38:51,660 --> 01:38:54,420
中文字幕
If I search for a, all of a sudden--

2130
01:38:54,420 --> 01:38:56,550
中文字幕
ooh, it blinked, it's a little small.

2131
01:38:56,550 --> 01:38:58,050
中文字幕
Now there's a little triangle there.

2132
01:38:58,050 --> 01:38:59,550
中文字幕
What's inside of it?

2133
01:38:59,550 --> 01:39:03,130
中文字幕
All of those LI tags that came from the server.

2134
01:39:03,130 --> 01:39:05,940
中文字幕
So with JavaScript, we have this amazing power now

2135
01:39:05,940 --> 01:39:10,100
中文字幕
to change what's inside of a web page by just asking the server for more data.

2136
01:39:10,100 --> 01:39:11,850
中文字幕
So if you've ever used Facebook, or you've

2137
01:39:11,850 --> 01:39:15,150
中文字幕
used Google Chat, or any websites that's dynamically changing every second,

2138
01:39:15,150 --> 01:39:17,820
中文字幕
every minute and each time you get a message, you can literally,

2139
01:39:17,820 --> 01:39:21,430
中文字幕
if you get a little nosy, open up Chrome's inspector and watch the DOM,

2140
01:39:21,430 --> 01:39:23,070
中文字幕
watch this elements tab.

2141
01:39:23,070 --> 01:39:25,440
中文字幕
And you'll see new stuff popping up every time

2142
01:39:25,440 --> 01:39:29,460
中文字幕
you get a message, or a chat, or any other such notification on the screen.

2143
01:39:29,460 --> 01:39:32,880
中文字幕
Now as an aside, this is a little sloppy to be returning HTML,

2144
01:39:32,880 --> 01:39:34,050
中文字幕
but let's see how it's done.

2145
01:39:34,050 --> 01:39:39,450
中文字幕
Let me go into application.py for words one, which is this example here.

2146
01:39:39,450 --> 01:39:43,110
中文字幕
And in application.py, notice what I'm doing is this.

2147
01:39:43,110 --> 01:39:46,800
中文字幕
Rather than return a whole page of results,

2148
01:39:46,800 --> 01:39:49,590
中文字幕
I'm returning a template called search.html.

2149
01:39:49,590 --> 01:39:52,600
中文字幕
All of the rest of this code is identical to before.

2150
01:39:52,600 --> 01:39:57,600
中文字幕
If I go into my templates and go into search.html, look how terribly simple

2151
01:39:57,600 --> 01:39:59,040
中文字幕
the code is on the server.

2152
01:39:59,040 --> 01:40:02,010
中文字幕
If all you want to do is spit out a bunch of list items,

2153
01:40:02,010 --> 01:40:02,890
中文字幕
this is all you need.

2154
01:40:02,890 --> 01:40:03,570
中文字幕
There's no template.

2155
01:40:03,570 --> 01:40:06,770
中文字幕
Like there's no extends layout because you're not returning a whole web page,

2156
01:40:06,770 --> 01:40:11,430
中文字幕
you're returning a tiny, tiny, tiny fragment of HTML.

2157
01:40:11,430 --> 01:40:14,490
中文字幕
But this is arguably a little sloppy, because there's

2158
01:40:14,490 --> 01:40:16,530
中文字幕
a lot of redundancy in what's coming back.

2159
01:40:16,530 --> 01:40:19,200
中文字幕
If I look at this tag that's coming back from the server,

2160
01:40:19,200 --> 01:40:22,410
中文字幕
what is obviously redundant about all of this information that's coming back?

2161
01:40:22,410 --> 01:40:25,540
中文字幕
And if I look at the Network tab, you really see it under response.

2162
01:40:25,540 --> 01:40:26,570
中文字幕
What's redundant?

2163
01:40:26,570 --> 01:40:29,800
中文字幕
You're doing a bunch of calls to the same address and to the same--

2164
01:40:29,800 --> 01:40:32,890
中文字幕
This was just because I hit some, like, zoom in and zoom out,

2165
01:40:32,890 --> 01:40:34,640
中文字幕
so it pretended to make multiple requests.

2166
01:40:34,640 --> 01:40:35,830
中文字幕
So red herring there.

2167
01:40:35,830 --> 01:40:37,720
中文字幕
Focus only on this part here.

2168
01:40:37,720 --> 01:40:41,240
中文字幕
What's redundant about all of the data coming back?

2169
01:40:41,240 --> 01:40:43,840
中文字幕
It's just keeps saying list item, word, close list item.

2170
01:40:43,840 --> 01:40:45,640
中文字幕
List item, word, clothes list item.

2171
01:40:45,640 --> 01:40:48,400
中文字幕
I mean come on, just use a more efficient syntax.

2172
01:40:48,400 --> 01:40:51,620
中文字幕
Just separate things with commas or something lighter weight.

2173
01:40:51,620 --> 01:40:53,140
中文字幕
This is sending way many bytes.

2174
01:40:53,140 --> 01:40:53,740
中文字幕
I mean, look.

2175
01:40:53,740 --> 01:40:55,480
中文字幕
There's thousands of bytes.

2176
01:40:55,480 --> 01:40:58,630
中文字幕
This is kilobytes by definition of information

2177
01:40:58,630 --> 01:41:00,630
中文字幕
that we're sending just to send open bracket,

2178
01:41:00,630 --> 01:41:02,200
中文字幕
LI close bracket again and again.

2179
01:41:02,200 --> 01:41:03,410
中文字幕
This is not very efficient.

2180
01:41:03,410 --> 01:41:06,430
中文字幕
And so the world actually has adopted a different approach,

2181
01:41:06,430 --> 01:41:10,600
中文字幕
and I'm going to show this in words 2 that actually returns something called

2182
01:41:10,600 --> 01:41:15,040
中文字幕
JavaScript Object Notation, which is a more succinct representation of this

2183
01:41:15,040 --> 01:41:15,710
中文字幕
as follows.

2184
01:41:15,710 --> 01:41:20,470
中文字幕
Let me go into words 2, run Flask in there.

2185
01:41:20,470 --> 01:41:22,750
中文字幕
Search for the same kind of thing and then watch

2186
01:41:22,750 --> 01:41:24,670
中文字幕
what happens over the network panel this time.

2187
01:41:24,670 --> 01:41:28,520
中文字幕
When I search for A, immediately get back the same visual result.

2188
01:41:28,520 --> 01:41:31,780
中文字幕
But if I look at this search query, now look what comes back.

2189
01:41:31,780 --> 01:41:35,240
中文字幕
I claim that this is a much more compact representation of the same information.

2190
01:41:35,240 --> 01:41:37,330
中文字幕
It's a little annoying that there's double quotes,

2191
01:41:37,330 --> 01:41:38,410
中文字幕
because those are a little redundant.

2192
01:41:38,410 --> 01:41:40,530
中文字幕
But at least double quotes are a lot more efficient

2193
01:41:40,530 --> 01:41:43,670
中文字幕
than open bracket, LI, closed bracket, and then the opposite at the end.

2194
01:41:43,670 --> 01:41:46,300
中文字幕
So this is what's called JavaScript Object Notation.

2195
01:41:46,300 --> 01:41:49,420
中文字幕
And as this square bracket here and thousands

2196
01:41:49,420 --> 01:41:52,420
中文字幕
of words later the square bracket on the end implies,

2197
01:41:52,420 --> 01:41:57,110
中文字幕
this is a JavaScript array that's being sent back from the server.

2198
01:41:57,110 --> 01:41:59,720
中文字幕
So the only thing that's changed here is as follows.

2199
01:41:59,720 --> 01:42:04,150
中文字幕
In words 2, this example, notice that I don't even

2200
01:42:04,150 --> 01:42:06,610
中文字幕
need to return a template anymore.

2201
01:42:06,610 --> 01:42:08,570
中文字幕
This code is the same as the past two examples.

2202
01:42:08,570 --> 01:42:11,410
中文字幕
This is how I'm searching 140,000 words quickly.

2203
01:42:11,410 --> 01:42:16,590
中文字幕
But if I include now a fancier function from Flask called jsonify--

2204
01:42:16,590 --> 01:42:17,920
中文字幕
which is not really a word.

2205
01:42:17,920 --> 01:42:20,920
中文字幕
But jsonify, that takes any data structure

2206
01:42:20,920 --> 01:42:24,520
中文字幕
you have data in like this list of words, the matches,

2207
01:42:24,520 --> 01:42:28,160
中文字幕
and it turns it into that text based representation with quotes and commas.

2208
01:42:28,160 --> 01:42:30,370
中文字幕
And you don't even have to write a template yourself.

2209
01:42:30,370 --> 01:42:33,070
中文字幕
And indeed, I got rid of search.html.

2210
01:42:33,070 --> 01:42:35,950
中文字幕
The only thing you have to do to give yourself access to this feature

2211
01:42:35,950 --> 01:42:39,430
中文字幕
is import not just render template, and request,

2212
01:42:39,430 --> 01:42:44,790
中文字幕
and Flask, but jsonify, as well, from the Flask library.

2213
01:42:44,790 --> 01:42:47,400
中文字幕
Which is just one more feature.

2214
01:42:47,400 --> 01:42:53,030
中文字幕
Any questions on that before we bring it all together with one final example?

2215
01:42:53,030 --> 01:42:53,680
中文字幕
Yeah?

2216
01:42:53,680 --> 01:42:57,140
中文字幕
Can double quotes break that into ??

2217
01:42:57,140 --> 01:42:59,330
中文字幕
Can double quotes break that?

2218
01:42:59,330 --> 01:43:00,980
中文字幕
Good question, great instincts.

2219
01:43:00,980 --> 01:43:04,700
中文字幕
No because the author of jsonify was smart about this.

2220
01:43:04,700 --> 01:43:09,710
中文字幕
And if that author notices a quote like an apostrophe, or like something

2221
01:43:09,710 --> 01:43:14,270
中文字幕
in your own name that has a quote, it will escape it in some way,

2222
01:43:14,270 --> 01:43:15,500
中文字幕
usually with a backslash.

2223
01:43:15,500 --> 01:43:16,280
中文字幕
Good instincts.

2224
01:43:16,280 --> 01:43:19,160
中文字幕
But that's why you probably wouldn't want to write this code yourself

2225
01:43:19,160 --> 01:43:22,070
中文字幕
because then you have to think of all of those corner cases as opposed

2226
01:43:22,070 --> 01:43:25,040
中文字幕
to focusing on the parts you care about.

2227
01:43:25,040 --> 01:43:27,270
中文字幕
All right, so there's one final example.

2228
01:43:27,270 --> 01:43:32,700
中文字幕
And it's perhaps to come full circle here, do we even need the server?

2229
01:43:32,700 --> 01:43:36,420
中文字幕
These 140,000 words right now are in a file called large.

2230
01:43:36,420 --> 01:43:39,720
中文字幕
My web application loads that file into memory and then searches it.

2231
01:43:39,720 --> 01:43:42,840
中文字幕
But who else could search over a big list of files?

2232
01:43:45,690 --> 01:43:48,670
中文字幕
Where else could we put this logic?

2233
01:43:48,670 --> 01:43:49,630
中文字幕
The browser, right?

2234
01:43:49,630 --> 01:43:52,150
中文字幕
Browser gives you JavaScript, JavaScript's a language,

2235
01:43:52,150 --> 01:43:54,070
中文字幕
languages can search things.

2236
01:43:54,070 --> 01:43:55,960
中文字幕
So let me try this instead.

2237
01:43:55,960 --> 01:44:00,670
中文字幕
In our words 3 example here, notice that I've got one new file.

2238
01:44:00,670 --> 01:44:04,450
中文字幕
In advance, you know, I took my big text file that just had one word per line

2239
01:44:04,450 --> 01:44:06,670
中文字幕
and I put it into a standard format just because it

2240
01:44:06,670 --> 01:44:08,350
中文字幕
makes my life a little easier.

2241
01:44:08,350 --> 01:44:10,450
中文字幕
And I called it large.json.

2242
01:44:10,450 --> 01:44:16,180
中文字幕
And in there, actually, where if I open up this folder, you'll see large.js,

2243
01:44:16,180 --> 01:44:20,080
中文字幕
which is a second file, this time a JavaScript file,

2244
01:44:20,080 --> 01:44:26,080
中文字幕
in which I've just declared a JavaScript array of all 140,000 words

2245
01:44:26,080 --> 01:44:27,170
中文字幕
for better or for worse.

2246
01:44:27,170 --> 01:44:29,170
中文字幕
I just put them into a slightly different format

2247
01:44:29,170 --> 01:44:31,390
中文字幕
with commas, and quotes, and square brackets,

2248
01:44:31,390 --> 01:44:35,630
中文字幕
and I gave this whole thing a variable name at the very top of the file.

2249
01:44:35,630 --> 01:44:36,830
中文字幕
Now, why is this useful?

2250
01:44:36,830 --> 01:44:39,670
中文字幕
Well, if I go into index.html, notice that there

2251
01:44:39,670 --> 01:44:43,240
中文字幕
is no more application.py or templates for this example whatsoever.

2252
01:44:43,240 --> 01:44:45,460
中文字幕
We've gotten rid of Python entirely, I don't

2253
01:44:45,460 --> 01:44:48,130
中文字幕
know if it's for the better or worse, but we'll now see.

2254
01:44:48,130 --> 01:44:51,940
中文字幕
So in this file, notice we have an input tag as before,

2255
01:44:51,940 --> 01:44:55,540
中文字幕
a placeholder for all of the ULs, but we're also

2256
01:44:55,540 --> 01:44:57,910
中文字幕
now including this large.js file.

2257
01:44:57,910 --> 01:45:02,290
中文字幕
Thereby telling the browser please download all 140,000 words

2258
01:45:02,290 --> 01:45:04,540
中文字幕
and then search them locally.

2259
01:45:04,540 --> 01:45:06,190
中文字幕
How am I going to search it locally?

2260
01:45:06,190 --> 01:45:09,130
中文字幕
I've essentially converted the language I wrote in Python a bit

2261
01:45:09,130 --> 01:45:11,990
中文字幕
ago into JavaScript as follows.

2262
01:45:11,990 --> 01:45:16,630
中文字幕
Here says the browser go get me the input that the user can type into.

2263
01:45:16,630 --> 01:45:19,300
中文字幕
This tells the browser, go ahead and listen for key up.

2264
01:45:19,300 --> 01:45:21,300
中文字幕
Whenever that happens, please call this function

2265
01:45:21,300 --> 01:45:24,040
中文字幕
which has no name, because I want you to just call it immediately,

2266
01:45:24,040 --> 01:45:25,240
中文字幕
I don't need its name.

2267
01:45:25,240 --> 01:45:27,860
中文字幕
This function is defined by these several lines.

2268
01:45:27,860 --> 01:45:30,370
中文字幕
These several lines have to do a bit more work than before.

2269
01:45:30,370 --> 01:45:32,590
中文字幕
Because before the server was doing all the hard work

2270
01:45:32,590 --> 01:45:36,410
中文字幕
sending back all of the data, and we just jammed it into the web page.

2271
01:45:36,410 --> 01:45:40,420
中文字幕
But here I'm going to build up a list a little more manually.

2272
01:45:40,420 --> 01:45:42,310
中文字幕
So I'm going to let a variable called html

2273
01:45:42,310 --> 01:45:46,000
中文字幕
equals quote unquote, because I want to build up the unordered list myself.

2274
01:45:46,000 --> 01:45:48,010
中文字幕
Then if the human, indeed, types something in--

2275
01:45:48,010 --> 01:45:52,000
中文字幕
so if their input is non null, so if they type at least one character,

2276
01:45:52,000 --> 01:45:53,170
中文字幕
do the following.

2277
01:45:53,170 --> 01:45:54,880
中文字幕
This is weird in JavaScript, but when you

2278
01:45:54,880 --> 01:45:59,440
中文字幕
iterate over an array in JavaScript, you use the preposition of not in.

2279
01:45:59,440 --> 01:46:03,610
中文字幕
So for word of words, go ahead and do the following.

2280
01:46:03,610 --> 01:46:07,690
中文字幕
If the current word starts with-- notice the capitalized w-- also

2281
01:46:07,690 --> 01:46:10,600
中文字幕
different from Python, but same idea, just different spelling--

2282
01:46:10,600 --> 01:46:14,620
中文字幕
if the word I'm iterating over starts with whatever the human inputted,

2283
01:46:14,620 --> 01:46:15,910
中文字幕
we found a match.

2284
01:46:15,910 --> 01:46:18,760
中文字幕
Go ahead and append to this HTML variable,

2285
01:46:18,760 --> 01:46:22,270
中文字幕
open bracket LI closed bracket, concatenate the word to it,

2286
01:46:22,270 --> 01:46:25,060
中文字幕
and then close bracket, as well.

2287
01:46:25,060 --> 01:46:28,450
中文字幕
So I'm constructing a variable in the browser's memory

2288
01:46:28,450 --> 01:46:32,360
中文字幕
containing HTML that I want to jam into the DOM ultimately.

2289
01:46:32,360 --> 01:46:33,260
中文字幕
How do I do that.

2290
01:46:33,260 --> 01:46:37,240
中文字幕
Well, at the very last line I say to the document, select the UL tag,

2291
01:46:37,240 --> 01:46:39,900
中文字幕
go inside of its HTML, and change whatever

2292
01:46:39,900 --> 01:46:46,070
中文字幕
is there to this string of HTML, which is presumably 0 or more LI tags

2293
01:46:46,070 --> 01:46:47,960
中文字幕
now based on those search results.

2294
01:46:47,960 --> 01:46:50,850
中文字幕
So now let me go back to words 1--

2295
01:46:50,850 --> 01:46:53,510
中文字幕
rather, let me go back to this example here.

2296
01:46:53,510 --> 01:46:55,110
中文字幕
Let me go ahead and serve this up.

2297
01:46:55,110 --> 01:46:58,550
中文字幕
It's not Flask anymore, so I have to use our server from two weeks ago,

2298
01:46:58,550 --> 01:47:01,210
中文字幕
HTTP server, to serve up HTML.

2299
01:47:01,210 --> 01:47:06,130
中文字幕
Let me go ahead and reload the screen here, open up index.html, and now

2300
01:47:06,130 --> 01:47:08,560
中文字幕
notice we're good to go.

2301
01:47:08,560 --> 01:47:09,860
中文字幕
What do you want to search for?

2302
01:47:09,860 --> 01:47:15,730
中文字幕
A, B, C. And let's open up the Network tab.

2303
01:47:15,730 --> 01:47:17,360
中文字幕
Inspect, Network.

2304
01:47:17,360 --> 01:47:19,160
中文字幕
Let's see what happens every time I search.

2305
01:47:19,160 --> 01:47:26,920
中文字幕
Z, Y, Q, A. Why is there no network traffic now?

2306
01:47:26,920 --> 01:47:28,610
中文字幕
There's no network traffic.

2307
01:47:28,610 --> 01:47:30,270
中文字幕
OK, but that's what I said.

2308
01:47:30,270 --> 01:47:32,620
中文字幕
But why is there no network traffic?

2309
01:47:32,620 --> 01:47:35,530
中文字幕
It's not sending any routes, it's not talking to a backend server.

2310
01:47:35,530 --> 01:47:36,030
中文字幕
Why?

2311
01:47:36,030 --> 01:47:38,980
中文字幕
Because all the data I might need is already local.

2312
01:47:38,980 --> 01:47:41,170
中文字幕
So mixed messages here, too.

2313
01:47:41,170 --> 01:47:42,880
中文字幕
Which is better, which is right?

2314
01:47:42,880 --> 01:47:43,720
中文字幕
What's the takeaway?

2315
01:47:43,720 --> 01:47:44,770
中文字幕
How do you think about this?

2316
01:47:44,770 --> 01:47:47,410
中文字幕
Because now, whereas a lot of our programs early on in the semester

2317
01:47:47,410 --> 01:47:50,410
中文字幕
were relatively small even though they didn't feel that way at the time,

2318
01:47:50,410 --> 01:47:52,930
中文字幕
now we have even more design possibilities.

2319
01:47:52,930 --> 01:47:55,060
中文字幕
And the answers are increasingly non-obvious,

2320
01:47:55,060 --> 01:47:57,010
中文字幕
and this is why you as programmers will just

2321
01:47:57,010 --> 01:47:59,230
中文字幕
get more comfortable with conventions, you'll maybe

2322
01:47:59,230 --> 01:48:00,940
中文字幕
practice what you've seen preached first,

2323
01:48:00,940 --> 01:48:02,890
中文字幕
then you'll decide as you might be already saying,

2324
01:48:02,890 --> 01:48:05,180
中文字幕
I don't like that, I'm going to do this some other way.

2325
01:48:05,180 --> 01:48:08,530
中文字幕
So how do you think about which of these several words examples is best?

2326
01:48:08,530 --> 01:48:11,080
中文字幕
Version 0 was let the server do all the work

2327
01:48:11,080 --> 01:48:15,250
中文字幕
and just send back a full new page of results like Google in 1999 did.

2328
01:48:15,250 --> 01:48:18,310
中文字幕
Then version 1, we added a bit of JavaScript

2329
01:48:18,310 --> 01:48:21,880
中文字幕
that used jQuery the library to talk to the server using

2330
01:48:21,880 --> 01:48:23,170
中文字幕
a technique called Ajax--

2331
01:48:23,170 --> 01:48:24,640
中文字幕
asynchronous JavaScript and XML--

2332
01:48:24,640 --> 01:48:28,090
中文字幕
but that just means go get me more data and we returned LI elements.

2333
01:48:28,090 --> 01:48:29,980
中文字幕
Then we decided that's a little sloppy, don't

2334
01:48:29,980 --> 01:48:31,930
中文字幕
seem to send me all these useless tags, just

2335
01:48:31,930 --> 01:48:34,180
中文字幕
send a comma separated list of words.

2336
01:48:34,180 --> 01:48:35,330
中文字幕
That was version 2.

2337
01:48:35,330 --> 01:48:37,420
中文字幕
And then this last version gets rid of all of that

2338
01:48:37,420 --> 01:48:39,210
中文字幕
and just sends all the words to the browser

2339
01:48:39,210 --> 01:48:43,350
中文字幕
and lets it deal with it entirely.

2340
01:48:43,350 --> 01:48:48,320
中文字幕
Who likes which best, 0, 1, 2, or 3?

2341
01:48:48,320 --> 01:48:49,230
中文字幕
What do you think?

2342
01:48:49,230 --> 01:48:52,670
中文字幕
So if you aren't supposed to trust the user in case

2343
01:48:52,670 --> 01:48:55,940
中文字幕
they turn off the JavaScript, then their decision of the functionality

2344
01:48:55,940 --> 01:48:57,590
中文字幕
of the website works.

2345
01:48:57,590 --> 01:48:59,130
中文字幕
That's a good trade-off.

2346
01:48:59,130 --> 01:49:02,370
中文字幕
So if the user turns off JavaScript, 3--

2347
01:49:02,370 --> 01:49:03,540
中文字幕
OK, it won't offend anyone--

2348
01:49:03,540 --> 01:49:07,530
中文字幕
3 2, and 1 won't work anymore because JavaScript's disabled.

2349
01:49:07,530 --> 01:49:09,080
中文字幕
Now, do you care about that?

2350
01:49:09,080 --> 01:49:09,740
中文字幕
Maybe not.

2351
01:49:09,740 --> 01:49:11,910
中文字幕
It's a small number of users on the internet who

2352
01:49:11,910 --> 01:49:14,750
中文字幕
are so concerned with this they just turn off JavaScript altogether,

2353
01:49:14,750 --> 01:49:17,950
中文字幕
and the reality is so many websites just break these days without JavaScript.

2354
01:49:17,950 --> 01:49:20,150
中文字幕
That might be a reasonable cost of doing business.

2355
01:49:20,150 --> 01:49:20,780
中文字幕
Other thoughts?

2356
01:49:20,780 --> 01:49:21,420
中文字幕
Yeah?

2357
01:49:21,420 --> 01:49:25,200
中文字幕
Is the last version the fastest?

2358
01:49:25,200 --> 01:49:29,370
中文字幕
I don't know, how could we assess that?

2359
01:49:29,370 --> 01:49:31,120
中文字幕
Yeah, I mean, we can literally measure it.

2360
01:49:31,120 --> 01:49:34,490
中文字幕
And honestly, built into Chrome in other tabs that I've not even clicked on

2361
01:49:34,490 --> 01:49:36,700
中文字幕
are a lot of performance tools where you can actually

2362
01:49:36,700 --> 01:49:38,560
中文字幕
monitor how long everything's taking.

2363
01:49:38,560 --> 01:49:40,360
中文字幕
This is called benchmarking more generally,

2364
01:49:40,360 --> 01:49:42,610
中文字幕
and this is what you did essentially in the speller problems

2365
01:49:42,610 --> 01:49:44,650
中文字幕
that even though we wrote the code that timed everything

2366
01:49:44,650 --> 01:49:46,690
中文字幕
and measured everything, to answer that question,

2367
01:49:46,690 --> 01:49:49,800
中文字幕
you could just try timing every one of the examples

2368
01:49:49,800 --> 01:49:51,850
中文字幕
and then decide for yourself which is best, sure.

2369
01:49:51,850 --> 01:49:52,690
中文字幕
Yeah?

2370
01:49:52,690 --> 01:49:54,940
中文字幕
The last thing I have with problematic issue

2371
01:49:54,940 --> 01:49:57,990
中文字幕
is like my phone's old, and it doesn't have a lot of memory,

2372
01:49:57,990 --> 01:50:00,550
中文字幕
and I may not have the fastest plan on Earth.

2373
01:50:00,550 --> 01:50:06,050
中文字幕
So you might be charging me more data, you might be slowing my phone down.

2374
01:50:06,050 --> 01:50:07,600
中文字幕
Very reasonable concern.

2375
01:50:07,600 --> 01:50:13,070
中文字幕
Let me go into our dictionary file here and list the size of this.

2376
01:50:13,070 --> 01:50:17,750
中文字幕
That large.js file is 2.2 megabytes, which on mobile devices,

2377
01:50:17,750 --> 01:50:21,320
中文字幕
especially in places where your signal is slow, or your bytes are expensive,

2378
01:50:21,320 --> 01:50:23,200
中文字幕
or you only have intermittent access, I mean,

2379
01:50:23,200 --> 01:50:26,230
中文字幕
that's kind of obnoxious to send two megabytes to the user

2380
01:50:26,230 --> 01:50:30,430
中文字幕
if you can avoid it, especially when you can send only the subset of results,

2381
01:50:30,430 --> 01:50:33,390
中文字幕
a few kilobytes maybe, of matches instead.

2382
01:50:33,390 --> 01:50:34,600
中文字幕
So a very reasonable concern.

2383
01:50:34,600 --> 01:50:36,360
中文字幕
Cost, user experience, performance.

2384
01:50:36,360 --> 01:50:36,990
中文字幕
Other thoughts?

2385
01:50:39,650 --> 01:50:42,890
中文字幕
Which is better for people on university and corporate campuses who tend

2386
01:50:42,890 --> 01:50:46,380
中文字幕
to have really good internet access?

2387
01:50:46,380 --> 01:50:47,140
中文字幕
Say again?

2388
01:50:47,140 --> 01:50:47,970
中文字幕
3, OK.

2389
01:50:47,970 --> 01:50:50,010
中文字幕
But what if it's not 140,000 words, but it's

2390
01:50:50,010 --> 01:50:54,600
中文字幕
like a billion pictures of cats that Google indexes?

2391
01:50:54,600 --> 01:50:58,030
中文字幕
Or hundreds or thousands of friends and all of their profile data?

2392
01:50:58,030 --> 01:51:00,030
中文字幕
Like at some point there's this inflection point

2393
01:51:00,030 --> 01:51:01,820
中文字幕
where too much data, right?

2394
01:51:01,820 --> 01:51:03,270
中文字幕
It's not reasonable, it's too much.

2395
01:51:03,270 --> 01:51:05,770
中文字幕
You don't want to just get a copy of your corporate database

2396
01:51:05,770 --> 01:51:08,460
中文字幕
to every one of your users just for them to search more locally.

2397
01:51:08,460 --> 01:51:10,080
中文字幕
So again, these are the non-obvious questions.

2398
01:51:10,080 --> 01:51:12,370
中文字幕
And one of the goals of, frankly, the final project

2399
01:51:12,370 --> 01:51:15,480
中文字幕
if you do something web based, or mobile based, or C based, or anything,

2400
01:51:15,480 --> 01:51:17,580
中文字幕
is all of these questions now boil down to you.

2401
01:51:17,580 --> 01:51:20,130
中文字幕
Like we have no well-defined answers in mind

2402
01:51:20,130 --> 01:51:23,310
中文字幕
as to what your final project should do and how it should do it best.

2403
01:51:23,310 --> 01:51:26,160
中文字幕
But in the weeks ahead, you'll be pre-proposing some project ideas,

2404
01:51:26,160 --> 01:51:29,410
中文字幕
proposing an actual project idea, and then designing and implementing this.

2405
01:51:29,410 --> 01:51:31,290
中文字幕
And you, too, will probably feel this tension

2406
01:51:31,290 --> 01:51:34,410
中文字幕
where the answer is not always obvious, your teaching fellow might not even

2407
01:51:34,410 --> 01:51:36,090
中文字幕
know how to answer your question, because he or she will

2408
01:51:36,090 --> 01:51:37,210
中文字幕
have thoughts of their own.

2409
01:51:37,210 --> 01:51:38,520
中文字幕
But it's ultimately up to you.

2410
01:51:38,520 --> 01:51:42,330
中文字幕
And we're now at the point of a level of coding maturity

2411
01:51:42,330 --> 01:51:45,240
中文字幕
where we're taking the training wheels off and more of the decisions

2412
01:51:45,240 --> 01:51:47,100
中文字幕
are now left to you.

2413
01:51:47,100 --> 01:51:48,120
中文字幕
Let's end here.

2414
01:51:48,120 --> 01:51:50,110
中文字幕
Stick around for one on one questions, and we'll

2415
01:51:50,110 --> 01:51:52,220
中文字幕
see you next week for databases.

