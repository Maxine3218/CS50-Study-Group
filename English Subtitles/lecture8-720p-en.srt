1
00:00:49,530 --> 00:00:52,580
中文字幕
[MUSIC - FERGIE & Q TIP & GOONROCK, "A LITTLE PARTY NEVER KILLED NOBODY"]

2
00:00:52,580 --> 00:00:54,740
中文字幕
FERGIE & Q-TIP & GOONROCK: (SINGING) Just one night,

3
00:00:54,740 --> 00:00:57,830
中文字幕
all we got, just one nigh, all we got, just one night, all we

4
00:00:57,830 --> 00:00:59,530
中文字幕
got, just one night, all we got.

5
00:00:59,530 --> 00:01:03,340
中文字幕
A little party never killed nobody.

6
00:01:03,340 --> 00:01:05,970
中文字幕
So we going to dance until we drop, drop, drop.

7
00:01:05,970 --> 00:01:10,340
中文字幕
Mm, a little party never killed nobody.

8
00:01:10,340 --> 00:01:13,530
中文字幕
Right here, right now, is all we got. skeeten-bod-op-bop.

9
00:01:13,530 --> 00:01:16,020
中文字幕
[MUSIC - FERGIE & Q TIP &

10
00:01:16,020 --> 00:01:28,770
中文字幕
GOONROCK, "A LITTLE PARTY NEVER KILLED NOBODY"]

11
00:01:28,770 --> 00:01:32,140
中文字幕
(SINGING) A little party never killed nobody.

12
00:01:32,140 --> 00:01:34,000
中文字幕
So we're going to dance until we drop.

13
00:01:34,000 --> 00:01:35,500
中文字幕
Let's go.

14
00:01:35,500 --> 00:01:39,680
中文字幕
A little party never killed nobody.

15
00:01:39,680 --> 00:01:42,310
中文字幕
Right here, right now is all we got.

16
00:01:42,310 --> 00:01:46,780
中文字幕
Oh, a little party never killed nobody.

17
00:01:46,780 --> 00:01:50,590
中文字幕
So we're going to dance until we drop.

18
00:01:50,590 --> 00:01:53,570
中文字幕
A little party never killed nobody.

19
00:01:57,540 --> 00:02:00,030
中文字幕
[MUSIC - FERGIE & Q TIP &

20
00:02:00,030 --> 00:02:17,920
中文字幕
GOONROCK, "A LITTLE PARTY NEVER KILLED NOBODY"]

21
00:02:17,920 --> 00:02:20,410
中文字幕
MUPPET: [SNORING]

22
00:02:23,390 --> 00:02:24,850
中文字幕
All right.

23
00:02:24,850 --> 00:02:27,940
中文字幕
This is CS50, and this is lecture 8.

24
00:02:27,940 --> 00:02:31,150
中文字幕
And that was a look at the so-called CS50 hackathon, this annual tradition

25
00:02:31,150 --> 00:02:35,440
中文字幕
with which we nearly end the semester that will start around 7:00 PM here

26
00:02:35,440 --> 00:02:39,820
中文字幕
in Cambridge, will then end around 7:00 AM the next day in Cambridge.

27
00:02:39,820 --> 00:02:42,460
中文字幕
And punctuating the evening will be quite a bit of work

28
00:02:42,460 --> 00:02:44,680
中文字幕
on final projects, which is the overarching goal of the evening

29
00:02:44,680 --> 00:02:46,510
中文字幕
to give students, both an academic and a very

30
00:02:46,510 --> 00:02:48,730
中文字幕
social and collaborative environment in which to tackle

31
00:02:48,730 --> 00:02:50,410
中文字幕
their final achievements in the course.

32
00:02:50,410 --> 00:02:53,830
中文字幕
But also, as you gleaned there will be a bit of distraction, a bit of food

33
00:02:53,830 --> 00:02:58,210
中文字幕
from Felipe's, typically, around 9:00 PM, a little bit of Domino's Pizza

34
00:02:58,210 --> 00:02:59,200
中文字幕
around 1:00 AM.

35
00:02:59,200 --> 00:03:01,910
中文字幕
And for those still standing as in the muppet there,

36
00:03:01,910 --> 00:03:05,650
中文字幕
we'll treat you to breakfast at IHOP if you still have the energy.

37
00:03:05,650 --> 00:03:08,950
中文字幕
Thereafter, we'll be the so-called CS50 Fair, the climax of everything

38
00:03:08,950 --> 00:03:10,000
中文字幕
that you've done in CS50.

39
00:03:10,000 --> 00:03:11,890
中文字幕
And more on that in the weeks to come.

40
00:03:11,890 --> 00:03:15,190
中文字幕
So without further ado, where have we been these past several weeks?

41
00:03:15,190 --> 00:03:17,240
中文字幕
Well, recall that, over the past couple of weeks,

42
00:03:17,240 --> 00:03:19,000
中文字幕
we've been introducing web programming.

43
00:03:19,000 --> 00:03:22,220
中文字幕
And most recently, did we try to tie together a lot of the topics

44
00:03:22,220 --> 00:03:23,220
中文字幕
from the past few weeks.

45
00:03:23,220 --> 00:03:27,430
中文字幕
HTML and CSS and JavaScript, and then Python, and then another framework,

46
00:03:27,430 --> 00:03:29,230
中文字幕
another piece of software called Flask that

47
00:03:29,230 --> 00:03:32,860
中文字幕
just made it easier and more possible to build web-based applications.

48
00:03:32,860 --> 00:03:35,290
中文字幕
And the simplest example of that last week, recall,

49
00:03:35,290 --> 00:03:36,850
中文字幕
looked a little something like this.

50
00:03:36,850 --> 00:03:40,200
中文字幕
And this past week with the problems on similarities and survey,

51
00:03:40,200 --> 00:03:42,940
中文字幕
have you been building your own web-based applications.

52
00:03:42,940 --> 00:03:45,100
中文字幕
But they haven't quite had all of the pieces

53
00:03:45,100 --> 00:03:47,860
中文字幕
that you might want to assemble into a web-based app.

54
00:03:47,860 --> 00:03:50,060
中文字幕
And so today, we'll fill in those final blanks.

55
00:03:50,060 --> 00:03:52,810
中文字幕
But recall that we've been trying to frame these applications, not

56
00:03:52,810 --> 00:03:55,540
中文字幕
as one-offs or just tools that you built, but as part

57
00:03:55,540 --> 00:03:57,330
中文字幕
of a common paradigm or a methodology.

58
00:03:57,330 --> 00:03:59,920
中文字幕
And indeed, when you're learning computer science and software

59
00:03:59,920 --> 00:04:03,040
中文字幕
engineering, you start to notice patterns in the software,

60
00:04:03,040 --> 00:04:04,570
中文字幕
in the code that you're writing.

61
00:04:04,570 --> 00:04:07,360
中文字幕
And humans tend to adopt these patterns because they save you time.

62
00:04:07,360 --> 00:04:09,890
中文字幕
And then everyone can speak the same language, so to speak.

63
00:04:09,890 --> 00:04:14,300
中文字幕
So MVC was the acronym we introduced last week, Model View Controller.

64
00:04:14,300 --> 00:04:16,180
中文字幕
And that just speaks to this paradigm whereby

65
00:04:16,180 --> 00:04:19,720
中文字幕
you organized certain type of code in one file, certain types of other code

66
00:04:19,720 --> 00:04:20,600
中文字幕
and another file.

67
00:04:20,600 --> 00:04:22,840
中文字幕
So your Python code goes in application.py.

68
00:04:22,840 --> 00:04:27,290
中文字幕
Your HTML goes in your HTML files, your CSS in your CSS files, and so forth.

69
00:04:27,290 --> 00:04:30,550
中文字幕
But what we didn't have last week was this thing here, really.

70
00:04:30,550 --> 00:04:32,860
中文字幕
Model generally refers to your data.

71
00:04:32,860 --> 00:04:35,650
中文字幕
And while survey, your most recent problem,

72
00:04:35,650 --> 00:04:38,800
中文字幕
did have data, a CSV file that's arguably a model,

73
00:04:38,800 --> 00:04:40,420
中文字幕
CSV is not terribly expressive.

74
00:04:40,420 --> 00:04:45,320
中文字幕
You can pretty much just write rows to a text file, not unlike a spreadsheet.

75
00:04:45,320 --> 00:04:46,570
中文字幕
But you can't really query it.

76
00:04:46,570 --> 00:04:48,630
中文字幕
You can't easily insert or delete.

77
00:04:48,630 --> 00:04:51,010
中文字幕
You pretty much would have to reconstruct the whole file.

78
00:04:51,010 --> 00:04:53,440
中文字幕
And indeed, that's exactly what I did back in the day.

79
00:04:53,440 --> 00:04:57,700
中文字幕
The very first web-based application I wrote back in sophomore or junior year

80
00:04:57,700 --> 00:04:59,530
中文字幕
was the freshman intramural website.

81
00:04:59,530 --> 00:05:04,120
中文字幕
And all I had available to me, both technologically and conceptually,

82
00:05:04,120 --> 00:05:05,040
中文字幕
we're CSV files.

83
00:05:05,040 --> 00:05:07,960
中文字幕
I had no idea what databases were, didn't realize how much easier they

84
00:05:07,960 --> 00:05:08,920
中文字幕
could make my life.

85
00:05:08,920 --> 00:05:12,010
中文字幕
So I stored all of the data behind these links here just

86
00:05:12,010 --> 00:05:13,690
中文字幕
in very simple text files.

87
00:05:13,690 --> 00:05:16,270
中文字幕
But today, will give you so much more power.

88
00:05:16,270 --> 00:05:19,060
中文字幕
And especially, if you're coming into the class with an interest

89
00:05:19,060 --> 00:05:22,810
中文字幕
in applying CS to other fields in medicine or the arts

90
00:05:22,810 --> 00:05:25,270
中文字幕
or any world in which there's data, particularly,

91
00:05:25,270 --> 00:05:27,640
中文字幕
in STEM and data science and the like, realize

92
00:05:27,640 --> 00:05:32,590
中文字幕
that SQL has really become this incredibly powerful language

93
00:05:32,590 --> 00:05:35,680
中文字幕
with which to solve problems in those and so many domains.

94
00:05:35,680 --> 00:05:38,050
中文字幕
And ultimately, what your build, this coming week--

95
00:05:38,050 --> 00:05:41,380
中文字幕
your very last CS50 problem set--

96
00:05:41,380 --> 00:05:44,080
中文字幕
you have now peaked just about-- will be CD50

97
00:05:44,080 --> 00:05:46,990
中文字幕
Finance, a web-based application by which you can buy,

98
00:05:46,990 --> 00:05:49,270
中文字幕
or "buy" and sell stocks.

99
00:05:49,270 --> 00:05:51,820
中文字幕
And so what you're going to do this coming week is write code

100
00:05:51,820 --> 00:05:54,970
中文字幕
that implements a web application that resembles this whereby

101
00:05:54,970 --> 00:05:58,270
中文字幕
your users and yourself will be able to register for an account,

102
00:05:58,270 --> 00:05:59,620
中文字幕
log into that account.

103
00:05:59,620 --> 00:06:03,370
中文字幕
You'll be given for free, thanks to us, 10,000 virtual dollars.

104
00:06:03,370 --> 00:06:06,790
中文字幕
And then you can go ahead and buy and sell stocks via their symbol

105
00:06:06,790 --> 00:06:08,030
中文字幕
using this application.

106
00:06:08,030 --> 00:06:10,620
中文字幕
So for instance, if I go ahead and register myself here.

107
00:06:10,620 --> 00:06:14,420
中文字幕
Let's say, username Malan, password 12345--

108
00:06:14,420 --> 00:06:15,850
中文字幕
shouldn't have said that.

109
00:06:15,850 --> 00:06:17,530
中文字幕
Go ahead and register here.

110
00:06:17,530 --> 00:06:20,800
中文字幕
You'll see that, by default, I get this free $10,000 in virtual cash.

111
00:06:20,800 --> 00:06:22,930
中文字幕
You know what, I'm going to go ahead and buy myself

112
00:06:22,930 --> 00:06:26,500
中文字幕
a share of maybe Netflix, whose symbol is NFLX.

113
00:06:26,500 --> 00:06:28,570
中文字幕
I'm going to go ahead and try to buy one share.

114
00:06:28,570 --> 00:06:29,230
中文字幕
Voila.

115
00:06:29,230 --> 00:06:34,240
中文字幕
And now you'll see that, not only do I have less cash left, about $9,600,

116
00:06:34,240 --> 00:06:35,710
中文字幕
I now own a share of stock.

117
00:06:35,710 --> 00:06:38,470
中文字幕
And if we reload this throughout the lecture, frankly,

118
00:06:38,470 --> 00:06:40,630
中文字幕
the price might go a little up or a little down

119
00:06:40,630 --> 00:06:42,740
中文字幕
because this web application you'll build

120
00:06:42,740 --> 00:06:46,750
中文字幕
will also talk to an API, an Application Programming Interface--

121
00:06:46,750 --> 00:06:50,020
中文字幕
so some third-party website that provides you with stock data.

122
00:06:50,020 --> 00:06:52,060
中文字幕
So you ask it for the current price of a stock.

123
00:06:52,060 --> 00:06:54,640
中文字幕
It gives you an answer in JSON format, if you

124
00:06:54,640 --> 00:06:56,260
中文字幕
recall our short discussion of that.

125
00:06:56,260 --> 00:06:58,790
中文字幕
And you'll integrate it, ultimately, into this interface.

126
00:06:58,790 --> 00:07:01,090
中文字幕
So this will be the culmination of so many of the ideas

127
00:07:01,090 --> 00:07:03,380
中文字幕
and the building blocks with which you've experimented.

128
00:07:03,380 --> 00:07:06,020
中文字幕
But we need a few final pieces today.

129
00:07:06,020 --> 00:07:10,120
中文字幕
So first and foremost, when I registered for this site, I created an account.

130
00:07:10,120 --> 00:07:12,200
中文字幕
And indeed, I can go ahead and log out now.

131
00:07:12,200 --> 00:07:14,320
中文字幕
And if I go ahead and log back in--

132
00:07:14,320 --> 00:07:19,870
中文字幕
if no one's stolen my password yet, I can see my account and only my account.

133
00:07:19,870 --> 00:07:22,390
中文字幕
But we haven't yet seen any mechanism in code

134
00:07:22,390 --> 00:07:25,390
中文字幕
whereby you can implement this notion of logging in, right?

135
00:07:25,390 --> 00:07:30,370
中文字幕
What is the underlying logic via which a website knows that you are logged in

136
00:07:30,370 --> 00:07:32,400
中文字幕
or you're not logged in, right?

137
00:07:32,400 --> 00:07:34,700
中文字幕
Clearly, when I went to this website just a moment ago,

138
00:07:34,700 --> 00:07:38,320
中文字幕
it prompted me to log in because I was not because I had logged out.

139
00:07:38,320 --> 00:07:39,620
中文字幕
But how did it know that?

140
00:07:39,620 --> 00:07:43,750
中文字幕
And now that I am logged in, how does it know that I can click on "quote"

141
00:07:43,750 --> 00:07:47,710
中文字幕
to get just the stock quote or "buy" just to buy a stock or "sell."

142
00:07:47,710 --> 00:07:51,880
中文字幕
Why does it not prompt me every time I click a link to log back

143
00:07:51,880 --> 00:07:54,580
中文字幕
in with my username or password?

144
00:07:54,580 --> 00:07:55,360
中文字幕
What do you think?

145
00:07:55,360 --> 00:07:57,730
中文字幕
Isn't cookies little files that

146
00:07:57,730 --> 00:08:01,570
中文字幕
saves the data inside your browser's cache that let it know what's going on.

147
00:08:01,570 --> 00:08:02,110
中文字幕
Yeah, cookies--

148
00:08:02,110 --> 00:08:04,520
中文字幕
little files that get saved by websites on your computer.

149
00:08:04,520 --> 00:08:07,220
中文字幕
Now odds are, most everyone here has probably heard in some form,

150
00:08:07,220 --> 00:08:08,680
中文字幕
cookies-- bad.

151
00:08:08,680 --> 00:08:11,030
中文字幕
Maybe bad, privacy-invading, yes?

152
00:08:11,030 --> 00:08:11,530
中文字幕
OK.

153
00:08:11,530 --> 00:08:12,940
中文字幕
So true.

154
00:08:12,940 --> 00:08:15,820
中文字幕
But most of the web would not work without them.

155
00:08:15,820 --> 00:08:20,170
中文字幕
So someone else, what do you understand a cookie to be?

156
00:08:20,170 --> 00:08:21,040
中文字幕
What is a cookie?

157
00:08:21,040 --> 00:08:22,940
中文字幕
Basically saves your information

158
00:08:22,940 --> 00:08:24,780
中文字幕
so you don't have to put it in every time.

159
00:08:24,780 --> 00:08:25,650
中文字幕
Yeah.

160
00:08:25,650 --> 00:08:28,550
中文字幕
It saves your information so you don't have to put it in every time.

161
00:08:28,550 --> 00:08:31,270
中文字幕
So in simplest form, it's exactly a combination of those answers.

162
00:08:31,270 --> 00:08:33,280
中文字幕
Whereby, when I log into a website, you could

163
00:08:33,280 --> 00:08:37,000
中文字幕
imagine that website just remembering my username and my password

164
00:08:37,000 --> 00:08:40,270
中文字幕
by just saving them in a little file on my Mac or PC

165
00:08:40,270 --> 00:08:41,980
中文字幕
so that the next time I visit a web page,

166
00:08:41,980 --> 00:08:44,970
中文字幕
it just automatically sends them for me, so that the human doesn't

167
00:08:44,970 --> 00:08:46,390
中文字幕
have to type them again and again.

168
00:08:46,390 --> 00:08:47,890
中文字幕
Now let's find fault with that.

169
00:08:47,890 --> 00:08:53,960
中文字幕
Feels like that would work, but what's a downside of that naive implementation?

170
00:08:53,960 --> 00:08:55,300
中文字幕
What do you think instinctively?

171
00:08:55,300 --> 00:08:56,810
中文字幕
The data is just out there?

172
00:08:56,810 --> 00:08:58,890
中文字幕
The data is just out there, right?

173
00:08:58,890 --> 00:09:03,540
中文字幕
I have people in the office or at home or in a library

174
00:09:03,540 --> 00:09:06,250
中文字幕
that I might not want to just be able to walk up to that computer

175
00:09:06,250 --> 00:09:08,930
中文字幕
and just see this little text file planted on my computer.

176
00:09:08,930 --> 00:09:11,770
中文字幕
Because then they could log in to my account by just digging around.

177
00:09:11,770 --> 00:09:13,130
中文字幕
So it feels a little invasive.

178
00:09:13,130 --> 00:09:15,010
中文字幕
Indeed, that's one of the threats of cookies.

179
00:09:15,010 --> 00:09:17,950
中文字幕
So it turns out cookies or websites tend not to do that, at least,

180
00:09:17,950 --> 00:09:19,480
中文字幕
if they're implemented well.

181
00:09:19,480 --> 00:09:24,070
中文字幕
They instead just plant a really big random number on your hard drive

182
00:09:24,070 --> 00:09:26,170
中文字幕
or in your computer's ram or memory.

183
00:09:26,170 --> 00:09:30,100
中文字幕
So 1234567-- like, some really big number maybe with letters and numbers

184
00:09:30,100 --> 00:09:33,550
中文字幕
maybe even some punctuation that uniquely identifies me.

185
00:09:33,550 --> 00:09:37,330
中文字幕
And thereafter, any time I click a link on that same website,

186
00:09:37,330 --> 00:09:39,700
中文字幕
after logging in, my browser, thanks to HTTP--

187
00:09:39,700 --> 00:09:42,790
中文字幕
the language that browsers and servers speak that we discussed a few weeks

188
00:09:42,790 --> 00:09:43,280
中文字幕
back--

189
00:09:43,280 --> 00:09:46,420
中文字幕
just magically sends that same big random number

190
00:09:46,420 --> 00:09:48,490
中文字幕
to the server again and again.

191
00:09:48,490 --> 00:09:52,300
中文字幕
And so long as the server remembers that that big random number corresponds

192
00:09:52,300 --> 00:09:56,590
中文字幕
to user name Malan, it can figure out whose account to show.

193
00:09:56,590 --> 00:09:58,130
中文字幕
And why is it a big random number?

194
00:09:58,130 --> 00:10:03,160
中文字幕
Why is it not just my password or my username?

195
00:10:03,160 --> 00:10:05,440
中文字幕
Why am I proposing that it be a big random number?

196
00:10:05,440 --> 00:10:09,660
中文字幕
Sometimes people can guess it by just using a random generator.

197
00:10:09,660 --> 00:10:10,660
中文字幕
Exactly.

198
00:10:10,660 --> 00:10:14,050
中文字幕
In computer science, randomness is this incredibly powerful ingredient.

199
00:10:14,050 --> 00:10:16,780
中文字幕
If you pick a big enough word or a big enough string

200
00:10:16,780 --> 00:10:20,910
中文字幕
or sentence, the probability that some random adversary, or bad person

201
00:10:20,910 --> 00:10:23,080
中文字幕
on the internet, is going to be able to guess or try

202
00:10:23,080 --> 00:10:26,940
中文字幕
to guess that value is just so low, it's just not realistically

203
00:10:26,940 --> 00:10:29,110
中文字幕
ever going to happen in your lifetime statistically.

204
00:10:29,110 --> 00:10:31,000
中文字幕
And so random this gives us that capability.

205
00:10:31,000 --> 00:10:33,310
中文字幕
And so you can think about this metaphorically in the real world

206
00:10:33,310 --> 00:10:34,450
中文字幕
as being like a hand stamp.

207
00:10:34,450 --> 00:10:38,020
中文字幕
If you've ever gone to an amusement park or a bar

208
00:10:38,020 --> 00:10:40,270
中文字幕
or a club where you have to show your ID or you

209
00:10:40,270 --> 00:10:42,820
中文字幕
have to pay for a ticket on the way in, sometimes they'll

210
00:10:42,820 --> 00:10:45,880
中文字幕
stamp you with either visible or invisible ink.

211
00:10:45,880 --> 00:10:48,130
中文字幕
And that's largely for efficiency so that, thereafter,

212
00:10:48,130 --> 00:10:50,420
中文字幕
when you're in the amusement park, you can come and go.

213
00:10:50,420 --> 00:10:52,160
中文字幕
And you don't have to repay or reprocess.

214
00:10:52,160 --> 00:10:55,210
中文字幕
If you're in the bar or the club, you don't have to keep showing your ID.

215
00:10:55,210 --> 00:10:57,820
中文字幕
They can check once, and then more efficiently let you come and go

216
00:10:57,820 --> 00:10:58,480
中文字幕
as you please.

217
00:10:58,480 --> 00:11:01,020
中文字幕
Because you're just presenting your hand or this virtual hand

218
00:11:01,020 --> 00:11:04,900
中文字幕
stamp to the bouncer or to the gatekeeper at those places.

219
00:11:04,900 --> 00:11:06,600
中文字幕
So cookies are exactly like that.

220
00:11:06,600 --> 00:11:09,850
中文字幕
Unbeknownst to us all this time, anytime you visit a website into which you've

221
00:11:09,850 --> 00:11:13,030
中文字幕
logged in, your browser is secretly but usefully

222
00:11:13,030 --> 00:11:17,350
中文字幕
presenting a hand stamp to that server to remind it who you are.

223
00:11:17,350 --> 00:11:21,560
中文字幕
Or rather, not really who you are, but of that big random number

224
00:11:21,560 --> 00:11:25,690
中文字幕
so that, if the server remembers who that number belongs to,

225
00:11:25,690 --> 00:11:28,750
中文字幕
it can figure out whose account to then show.

226
00:11:28,750 --> 00:11:32,770
中文字幕
So put more concretely, if I actually pull up some of the HTTP examples

227
00:11:32,770 --> 00:11:35,390
中文字幕
that we looked at in the past, let's consider this in context.

228
00:11:35,390 --> 00:11:37,970
中文字幕
So almost everyone here has probably used Gmail at some point.

229
00:11:37,970 --> 00:11:40,160
中文字幕
And you log in generally via page like this.

230
00:11:40,160 --> 00:11:42,670
中文字幕
So it might be infrequent because you're not often

231
00:11:42,670 --> 00:11:46,210
中文字幕
prompted to log into email because of-- surprise, surprise-- cookies

232
00:11:46,210 --> 00:11:47,690
中文字幕
from Google being on your computer.

233
00:11:47,690 --> 00:11:49,190
中文字幕
But let's see where those come from.

234
00:11:49,190 --> 00:11:54,290
中文字幕
So when you request Google or gmail.com, you might send, in a virtual envelope,

235
00:11:54,290 --> 00:11:57,150
中文字幕
so to speak, from your Mac or PC to the server, a message like this.

236
00:11:57,150 --> 00:11:58,900
中文字幕
Families who've not seen this before, this

237
00:11:58,900 --> 00:12:01,900
中文字幕
is what your browser is actually sending to a server in order

238
00:12:01,900 --> 00:12:03,810
中文字幕
to request a home page of gmail.com.

239
00:12:03,810 --> 00:12:05,650
中文字幕
Now, I'm going to simplify this a little bit

240
00:12:05,650 --> 00:12:07,230
中文字幕
because there's a bunch of redirects--

241
00:12:07,230 --> 00:12:11,380
中文字幕
HTTP 302s and 301's involved that aren't that interesting today.

242
00:12:11,380 --> 00:12:14,170
中文字幕
So let's just assume that Gmail responds immediately.

243
00:12:14,170 --> 00:12:17,620
中文字幕
Typically, Gmail would respond with this, saying 200 OK.

244
00:12:17,620 --> 00:12:18,760
中文字幕
Here's the login page.

245
00:12:18,760 --> 00:12:22,120
中文字幕
And here's a web page in text/html format.

246
00:12:22,120 --> 00:12:24,940
中文字幕
But once you've logged in, what your Gmail actually does

247
00:12:24,940 --> 00:12:26,530
中文字幕
is it also sends this.

248
00:12:26,530 --> 00:12:31,030
中文字幕
Recall that we call these things HTTP headers--

249
00:12:31,030 --> 00:12:35,590
中文字幕
key value pairs separated by colons that are semi-secretly sent from browser

250
00:12:35,590 --> 00:12:37,630
中文字幕
to server and from server to browser.

251
00:12:37,630 --> 00:12:41,390
中文字幕
Now we, more sophisticated developer types can see this stuff, right?

252
00:12:41,390 --> 00:12:44,050
中文字幕
You can open up Chrome's network tab and start poking around.

253
00:12:44,050 --> 00:12:45,790
中文字幕
And it's not secret per se.

254
00:12:45,790 --> 00:12:47,800
中文字幕
It's just most people don't know it's there.

255
00:12:47,800 --> 00:12:50,050
中文字幕
And what Google and other companies are doing is

256
00:12:50,050 --> 00:12:54,820
中文字幕
they literally send a header called set-cookie, the value of which

257
00:12:54,820 --> 00:12:59,170
中文字幕
is that big random value that the server has decided for you.

258
00:12:59,170 --> 00:13:03,070
中文字幕
Your browser, assuming that it speaks HTTP properly,

259
00:13:03,070 --> 00:13:06,340
中文字幕
should then save that value in RAM, your computer's memory,

260
00:13:06,340 --> 00:13:07,510
中文字幕
or on your hard drive.

261
00:13:07,510 --> 00:13:12,070
中文字幕
And then, every other click you make on gmail.com should send,

262
00:13:12,070 --> 00:13:16,510
中文字幕
not just headers like this, but it should send the opposite header--

263
00:13:16,510 --> 00:13:18,940
中文字幕
just cookie, not set-cookie, but cookie, which

264
00:13:18,940 --> 00:13:20,920
中文字幕
is the presentation of that hand stamp.

265
00:13:20,920 --> 00:13:24,460
中文字幕
And so every time you click a page on Gmail, or Facebook,

266
00:13:24,460 --> 00:13:26,800
中文字幕
or almost any website into which you've logged in.

267
00:13:26,800 --> 00:13:29,090
中文字幕
Those cookies have been planted on your computer.

268
00:13:29,090 --> 00:13:31,510
中文字幕
Now recently, in both Europe and in the US,

269
00:13:31,510 --> 00:13:34,360
中文字幕
have laws been passed that are increasingly putting pressure

270
00:13:34,360 --> 00:13:37,870
中文字幕
on companies that operate internationally to present you

271
00:13:37,870 --> 00:13:40,080
中文字幕
with cookie-based information, right?

272
00:13:40,080 --> 00:13:41,830
中文字幕
You get these little pop-ups increasingly.

273
00:13:41,830 --> 00:13:44,830
中文字幕
And you've been getting them for years in Europe saying,

274
00:13:44,830 --> 00:13:47,110
中文字幕
can we plant cookies on your computer?

275
00:13:47,110 --> 00:13:49,510
中文字幕
So given all of this, what might happen if you say

276
00:13:49,510 --> 00:13:51,370
中文字幕
no, no cookies on my computer?

277
00:13:51,370 --> 00:13:53,000
中文字幕
You have to keep logging in.

278
00:13:53,000 --> 00:13:55,630
中文字幕
You're going to have to keep logging in, right?

279
00:13:55,630 --> 00:13:59,560
中文字幕
If you take away this fundamental HTTP feature, much of the web

280
00:13:59,560 --> 00:14:03,160
中文字幕
breaks, or the user experience deteriorates significantly.

281
00:14:03,160 --> 00:14:06,710
中文字幕
Now the flip side is cookies can be used, not only for good, so to speak,

282
00:14:06,710 --> 00:14:07,460
中文字幕
but also for evil.

283
00:14:07,460 --> 00:14:10,290
中文字幕
It turns out that there are a lot of ads on the internet, of course.

284
00:14:10,290 --> 00:14:13,300
中文字幕
And that's what drives a lot of the revenue that makes it all possible.

285
00:14:13,300 --> 00:14:17,800
中文字幕
Those ads typically come from image tags in your HTML or script tags

286
00:14:17,800 --> 00:14:20,200
中文字幕
or some of the HTML tags we have seen in the class.

287
00:14:20,200 --> 00:14:23,560
中文字幕
But they go to third-party servers, somewhereelse.com.

288
00:14:23,560 --> 00:14:27,250
中文字幕
And the problem arises with cookies when those third parties are allowed

289
00:14:27,250 --> 00:14:29,770
中文字幕
to plant cookies on your computer.

290
00:14:29,770 --> 00:14:32,340
中文字幕
Because if you go to Google, and you go to Facebook,

291
00:14:32,340 --> 00:14:34,180
中文字幕
and you go to Twitter-- bunches of websites.

292
00:14:34,180 --> 00:14:37,540
中文字幕
Suppose they all have some middlemen advertising service advertising

293
00:14:37,540 --> 00:14:38,860
中文字幕
on each of these websites.

294
00:14:38,860 --> 00:14:41,560
中文字幕
That middlemen, so to speak, because they

295
00:14:41,560 --> 00:14:46,990
中文字幕
have their ads and, therefore, their HTTP headers on this site,

296
00:14:46,990 --> 00:14:49,990
中文字幕
and this site, and this site, there are big third parties

297
00:14:49,990 --> 00:14:52,900
中文字幕
out there-- lots of them advertising networks-- that know everywhere

298
00:14:52,900 --> 00:14:57,100
中文字幕
little old you is going because they see your cookie appearing

299
00:14:57,100 --> 00:14:58,960
中文字幕
from multiple different other sites.

300
00:14:58,960 --> 00:15:03,000
中文字幕
And so here's where cookies become, not a computer science, engineering feat,

301
00:15:03,000 --> 00:15:05,050
中文字幕
but really a threat to one's privacy because they

302
00:15:05,050 --> 00:15:08,080
中文字幕
can be used so easily for tracking.

303
00:15:08,080 --> 00:15:11,830
中文字幕
And frankly, AT&T and Verizon, as an aside, got into trouble--

304
00:15:11,830 --> 00:15:13,420
中文字幕
not enough people know this--

305
00:15:13,420 --> 00:15:18,550
中文字幕
some years back when they started injecting, forcibly, additional HTTP

306
00:15:18,550 --> 00:15:22,000
中文字幕
headers similar in spirit to this to all of people's cell phone traffic--

307
00:15:22,000 --> 00:15:25,180
中文字幕
so not things you could even opt out of initially.

308
00:15:25,180 --> 00:15:28,060
中文字幕
Because this was a way for advertisers and for themselves

309
00:15:28,060 --> 00:15:29,360
中文字幕
to be able to track users.

310
00:15:29,360 --> 00:15:33,220
中文字幕
So these HTTP headers on which cookies are based

311
00:15:33,220 --> 00:15:35,960
中文字幕
are very powerful, but also very invasive.

312
00:15:35,960 --> 00:15:38,590
中文字幕
And we're only now starting to see, societally and politically,

313
00:15:38,590 --> 00:15:42,340
中文字幕
pushback on this very simple mechanism that, hopefully, we as CS types

314
00:15:42,340 --> 00:15:46,640
中文字幕
just understand the mechanics of and, therefore, now the implications.

315
00:15:46,640 --> 00:15:48,820
中文字幕
So let's see this in context, for instance.

316
00:15:48,820 --> 00:15:53,740
中文字幕
Let me go ahead and open up a relatively small example in CS50 IDE.

317
00:15:53,740 --> 00:15:56,800
中文字幕
For those unfamiliar, CS50 IDE is a web-based application

318
00:15:56,800 --> 00:15:59,110
中文字幕
via which you can write programs in the cloud,

319
00:15:59,110 --> 00:16:01,210
中文字幕
just using any browser on a Mac or PC.

320
00:16:01,210 --> 00:16:03,460
中文字幕
I'm going to go ahead into my account here.

321
00:16:03,460 --> 00:16:05,920
中文字幕
And I'm going to go into Store.

322
00:16:05,920 --> 00:16:08,980
中文字幕
And I'm going to go into the Templates directory

323
00:16:08,980 --> 00:16:11,050
中文字幕
and show that this example here has a few files.

324
00:16:11,050 --> 00:16:13,050
中文字幕
This will look familiar to students in the room.

325
00:16:13,050 --> 00:16:15,320
中文字幕
Application.py is the web-based application.

326
00:16:15,320 --> 00:16:17,900
中文字幕
And then we have some template files, so to speak.

327
00:16:17,900 --> 00:16:21,130
中文字幕
In my Terminal window here, I'm going to go ahead and, with just my keyboard,

328
00:16:21,130 --> 00:16:25,400
中文字幕
go into this directory called Store in source 8, which is available online.

329
00:16:25,400 --> 00:16:28,960
中文字幕
And I'm going to go ahead and do a flask run, which, for those unfamiliar,

330
00:16:28,960 --> 00:16:31,420
中文字幕
is the command via which you can start a web server

331
00:16:31,420 --> 00:16:34,190
中文字幕
and start running a web-based application.

332
00:16:34,190 --> 00:16:39,100
中文字幕
So now that I have that, I'm going to go ahead and visit exactly this URL here.

333
00:16:39,100 --> 00:16:43,800
中文字幕
And we'll see a relatively simple and super ugly web store.

334
00:16:43,800 --> 00:16:45,220
中文字幕
Let me go ahead and zoom in a bit.

335
00:16:45,220 --> 00:16:48,460
中文字幕
And this web store allows me to buy three things-- foos, bars,

336
00:16:48,460 --> 00:16:50,170
中文字幕
and bazes, whatever those are.

337
00:16:50,170 --> 00:16:53,230
中文字幕
And this is a very simple e-commerce-like site

338
00:16:53,230 --> 00:16:56,810
中文字幕
where I just have to type the quantity of foos, bars, and bazes that I want.

339
00:16:56,810 --> 00:16:58,610
中文字幕
And then I can go ahead and buy them.

340
00:16:58,610 --> 00:17:02,800
中文字幕
So I'm going to go ahead and say, give me one foo, how about zero bars,

341
00:17:02,800 --> 00:17:04,590
中文字幕
and these two bazes.

342
00:17:04,590 --> 00:17:06,700
中文字幕
And I'm going to go ahead and click Purchase.

343
00:17:06,700 --> 00:17:08,610
中文字幕
And now you'll see my shopping cart.

344
00:17:08,610 --> 00:17:10,540
中文字幕
But if I continue shopping, you'll see that it

345
00:17:10,540 --> 00:17:13,640
中文字幕
resets, just like if you keep browsing Amazon or whatever other website.

346
00:17:13,640 --> 00:17:15,710
中文字幕
But if you want to check shopping cart again,

347
00:17:15,710 --> 00:17:17,760
中文字幕
notice it's remembered what I'm looking for.

348
00:17:17,760 --> 00:17:18,890
中文字幕
And in fact, you know what?

349
00:17:18,890 --> 00:17:20,250
中文字幕
I'm going to go ahead and close the window.

350
00:17:20,250 --> 00:17:20,860
中文字幕
Oops.

351
00:17:20,860 --> 00:17:22,520
中文字幕
I actually lost the website.

352
00:17:22,520 --> 00:17:23,590
中文字幕
But you know what?

353
00:17:23,590 --> 00:17:27,340
中文字幕
If I go back to that URL and reopen, I see the storefront.

354
00:17:27,340 --> 00:17:30,500
中文字幕
But if I view my shopping cart, it has remembered my state.

355
00:17:30,500 --> 00:17:32,550
中文字幕
So notice the power now of cookies.

356
00:17:32,550 --> 00:17:35,390
中文字幕
It's not just to remember with a hand stamp who you are.

357
00:17:35,390 --> 00:17:39,080
中文字幕
But now you can remember anything about that user that you want, right?

358
00:17:39,080 --> 00:17:43,100
中文字幕
A shopping cart on Amazon or any website is the best example of this

359
00:17:43,100 --> 00:17:46,640
中文字幕
because it would be horrible, horrible, horrible for a User Experience or UX

360
00:17:46,640 --> 00:17:48,530
中文字幕
if every time you click the darn link, you

361
00:17:48,530 --> 00:17:52,010
中文字幕
lost the contents of your shopping cart because the website forgot who you are.

362
00:17:52,010 --> 00:17:54,410
中文字幕
So this is a compelling feature to remember.

363
00:17:54,410 --> 00:17:57,020
中文字幕
And it's cookies that implement this feature too.

364
00:17:57,020 --> 00:18:00,440
中文字幕
Because more generally, what's going on with cookies is this.

365
00:18:00,440 --> 00:18:03,920
中文字幕
When you set a cookie using the set-cookie header that

366
00:18:03,920 --> 00:18:07,550
中文字幕
looked like this, there is a key value pair

367
00:18:07,550 --> 00:18:11,240
中文字幕
to the right that we might call session, and that has the value.

368
00:18:11,240 --> 00:18:12,710
中文字幕
Value is the hand stamp.

369
00:18:12,710 --> 00:18:16,410
中文字幕
Session is just a term of art that refers to this abstraction

370
00:18:16,410 --> 00:18:18,410
中文字幕
that you can think of really as a shopping cart.

371
00:18:18,410 --> 00:18:21,660
中文字幕
But it doesn't have to have anything to do with actual shopping or e-commerce.

372
00:18:21,660 --> 00:18:24,830
中文字幕
It's just a container in which you can store stuff.

373
00:18:24,830 --> 00:18:29,450
中文字幕
So this is telling the website that my session value, my hand stamp

374
00:18:29,450 --> 00:18:32,840
中文字幕
is 12345-- and big really random number.

375
00:18:32,840 --> 00:18:35,060
中文字幕
The website can then say, you know what?

376
00:18:35,060 --> 00:18:37,730
中文字幕
I'm going to store a container for you.

377
00:18:37,730 --> 00:18:40,490
中文字幕
Let's call it a Python dictionary, or dict for you,

378
00:18:40,490 --> 00:18:42,810
中文字幕
inside of which I can put anything I want.

379
00:18:42,810 --> 00:18:46,040
中文字幕
And so in fact, when you go to a shopping cart like this,

380
00:18:46,040 --> 00:18:48,290
中文字幕
what is the server actually doing?

381
00:18:48,290 --> 00:18:52,650
中文字幕
Well, upon seeing your hand stamp, and realizing, oh, you are user 1234567.

382
00:18:52,650 --> 00:18:55,010
中文字幕
Oh, that's username Malan.

383
00:18:55,010 --> 00:18:57,830
中文字幕
Let me go ahead and grab the dictionary, the Python dict

384
00:18:57,830 --> 00:19:00,830
中文字幕
from memory, or even from a CSV file if you want,

385
00:19:00,830 --> 00:19:03,470
中文字幕
and show you the contents of your shopping cart.

386
00:19:03,470 --> 00:19:06,710
中文字幕
Meanwhile, someone else, Brian visits the same exact website

387
00:19:06,710 --> 00:19:08,030
中文字幕
and logs in with his account.

388
00:19:08,030 --> 00:19:10,550
中文字幕
He's going to present a different hand stamp, presumably.

389
00:19:10,550 --> 00:19:13,460
中文字幕
And so the website can look for a different dictionary

390
00:19:13,460 --> 00:19:16,430
中文字幕
and show Brian the different contents of his shopping cart.

391
00:19:16,430 --> 00:19:18,390
中文字幕
And the same for everyone in this room.

392
00:19:18,390 --> 00:19:19,850
中文字幕
So this simple mechanism--

393
00:19:19,850 --> 00:19:21,180
中文字幕
I mean, consider the power.

394
00:19:21,180 --> 00:19:24,770
中文字幕
This is just a stupid text value key:value.

395
00:19:24,770 --> 00:19:28,730
中文字幕
And from all of that does all of the web's capabilities now come.

396
00:19:28,730 --> 00:19:31,070
中文字幕
And we won't look in too much detail into the code here,

397
00:19:31,070 --> 00:19:32,990
中文字幕
but let me show one snippet of it.

398
00:19:32,990 --> 00:19:37,850
中文字幕
If I go into application.py, the magic that makes this possible in flask

399
00:19:37,850 --> 00:19:40,360
中文字幕
is just to import this additional feature.

400
00:19:40,360 --> 00:19:42,320
中文字幕
You'll recall, from the past couple of problems

401
00:19:42,320 --> 00:19:45,110
中文字幕
you've worked on, you import from flask a few things--

402
00:19:45,110 --> 00:19:47,740
中文字幕
render template, redirect, request.

403
00:19:47,740 --> 00:19:49,760
中文字幕
Well, if you Add session to that list, which

404
00:19:49,760 --> 00:19:53,750
中文字幕
is the code abstraction of this hand-stamp idea, what you can now do

405
00:19:53,750 --> 00:19:54,450
中文字幕
is this.

406
00:19:54,450 --> 00:19:56,600
中文字幕
Let me scroll down to the juicy part here.

407
00:19:56,600 --> 00:19:59,390
中文字幕
And notice that you can do lines of code now,

408
00:19:59,390 --> 00:20:03,830
中文字幕
and for the next CS50 finance problem, lines of code like this.

409
00:20:03,830 --> 00:20:07,220
中文字幕
Session is just a Python dictionary, or dict.

410
00:20:07,220 --> 00:20:09,530
中文字幕
You can index into it using any word--

411
00:20:09,530 --> 00:20:13,670
中文字幕
foo, or bar, or baz, just like you could with dictionaries more generally.

412
00:20:13,670 --> 00:20:15,920
中文字幕
And you can store in it anything you want.

413
00:20:15,920 --> 00:20:17,510
中文字幕
In my case, I want to store a number--

414
00:20:17,510 --> 00:20:20,540
中文字幕
0 foos, or 1 foo, or 2 foos or whatever.

415
00:20:20,540 --> 00:20:24,650
中文字幕
So I can simply convert to an int, the user's request forms

416
00:20:24,650 --> 00:20:25,600
中文字幕
item, whatever that is.

417
00:20:25,600 --> 00:20:28,310
中文字幕
And let me wave my hand at some of the code above because it just

418
00:20:28,310 --> 00:20:29,510
中文字幕
sets the whole thing up.

419
00:20:29,510 --> 00:20:31,670
中文字幕
But the new line of code, the new feature

420
00:20:31,670 --> 00:20:35,180
中文字幕
that now will empower us to build something like a stock trading website

421
00:20:35,180 --> 00:20:37,670
中文字幕
is quite simply this line here.

422
00:20:37,670 --> 00:20:40,640
中文字幕
Because what you can also do to remember that a user is logged in,

423
00:20:40,640 --> 00:20:43,370
中文字幕
just go ahead and store in this so-called session,

424
00:20:43,370 --> 00:20:45,020
中文字幕
a value of, like, true.

425
00:20:45,020 --> 00:20:48,110
中文字幕
And if the value true is there, you can infer that the human is logged in.

426
00:20:48,110 --> 00:20:52,670
中文字幕
And if there's no such value in the dictionary, they are not logged in.

427
00:20:52,670 --> 00:20:55,880
中文字幕
And so we'll hold your hand a bit more in the next problem set

428
00:20:55,880 --> 00:20:57,710
中文字幕
with this introduction of CS50 Finance.

429
00:20:57,710 --> 00:20:59,540
中文字幕
And we'll write some of the code that handles the login,

430
00:20:59,540 --> 00:21:01,490
中文字幕
so you can see by example how to do this.

431
00:21:01,490 --> 00:21:03,530
中文字幕
But it'll be up to you thereafter to start

432
00:21:03,530 --> 00:21:07,100
中文字幕
remembering what stocks a user actually has

433
00:21:07,100 --> 00:21:11,120
中文字幕
using sessions to retain the fact that they've logged in already.

434
00:21:11,120 --> 00:21:11,620
中文字幕
All right.

435
00:21:11,620 --> 00:21:13,550
中文字幕
So that was a lot all at once.

436
00:21:13,550 --> 00:21:17,360
中文字幕
But any questions on cookies and the feature they provide,

437
00:21:17,360 --> 00:21:19,910
中文字幕
these things called sessions?

438
00:21:19,910 --> 00:21:20,730
中文字幕
Anything at a all?

439
00:21:20,730 --> 00:21:22,360
中文字幕
Yeah?

440
00:21:22,360 --> 00:21:28,300
中文字幕
Is the session saved on the user side or the server?

441
00:21:28,300 --> 00:21:29,390
中文字幕
Really good question.

442
00:21:29,390 --> 00:21:31,720
中文字幕
And the answer can be it depends.

443
00:21:31,720 --> 00:21:35,600
中文字幕
You could store on the user's client, on their browser.

444
00:21:35,600 --> 00:21:41,100
中文字幕
And as the gentleman over here proposed, you could theoretically store literally

445
00:21:41,100 --> 00:21:43,690
中文字幕
their user name and password-- maybe I proposed that earlier--

446
00:21:43,690 --> 00:21:44,430
中文字幕
on their computer.

447
00:21:44,430 --> 00:21:47,200
中文字幕
And that's bad for the reasons that we surmised earlier.

448
00:21:47,200 --> 00:21:50,320
中文字幕
But you could also store the contents of their shopping cart, foos, bars,

449
00:21:50,320 --> 00:21:50,950
中文字幕
and bazes.

450
00:21:50,950 --> 00:21:53,320
中文字幕
That's not quite as invasive as storing their password.

451
00:21:53,320 --> 00:21:56,020
中文字幕
But if you're buying things you don't really want people knowing,

452
00:21:56,020 --> 00:21:56,980
中文字幕
that is then invasive.

453
00:21:56,980 --> 00:21:58,060
中文字幕
So maybe we can do better.

454
00:21:58,060 --> 00:22:00,430
中文字幕
And better is often, store it on the server.

455
00:22:00,430 --> 00:22:02,230
中文字幕
So a well-designed website will typically

456
00:22:02,230 --> 00:22:07,270
中文字幕
store only this big random value, the hand stamp, on the Mac or PC.

457
00:22:07,270 --> 00:22:10,030
中文字幕
And then all of the interesting and maybe sensitive stuff

458
00:22:10,030 --> 00:22:14,230
中文字幕
is stored in a database or CSV file or just the server's RAM or memory

459
00:22:14,230 --> 00:22:15,760
中文字幕
like in a global variable.

460
00:22:15,760 --> 00:22:16,910
中文字幕
Good question.

461
00:22:16,910 --> 00:22:21,140
中文字幕
Other questions?

462
00:22:21,140 --> 00:22:22,390
中文字幕
No.

463
00:22:22,390 --> 00:22:23,150
中文字幕
All right.

464
00:22:23,150 --> 00:22:25,670
中文字幕
So that's one problem solved.

465
00:22:25,670 --> 00:22:28,280
中文字幕
We know now we can implement login forms.

466
00:22:28,280 --> 00:22:30,930
中文字幕
And we know that we can remember that people are logged in.

467
00:22:30,930 --> 00:22:33,210
中文字幕
So let's just stipulate that is now possible.

468
00:22:33,210 --> 00:22:36,350
中文字幕
But over the past couple of weeks, it's not been incredibly powerful

469
00:22:36,350 --> 00:22:41,120
中文字幕
to only have access to things like CSV files, comma separated values, which

470
00:22:41,120 --> 00:22:43,910
中文字幕
create the illusion of Excel and Google Spreadsheets

471
00:22:43,910 --> 00:22:46,220
中文字幕
and Apple Numbers like columns and rows.

472
00:22:46,220 --> 00:22:46,790
中文字幕
Why?

473
00:22:46,790 --> 00:22:49,330
中文字幕
Well, it's pretty much a linear search for everything, right?

474
00:22:49,330 --> 00:22:52,370
中文字幕
A CSV file is just rows and rows and rows and rows of data.

475
00:22:52,370 --> 00:22:54,500
中文字幕
And if you want to search for anything in that

476
00:22:54,500 --> 00:22:57,540
中文字幕
file, like you might have wanted to for your survey implementation,

477
00:22:57,540 --> 00:22:58,460
中文字幕
how do you find it?

478
00:22:58,460 --> 00:23:00,470
中文字幕
Well, you open the file with Open.

479
00:23:00,470 --> 00:23:04,040
中文字幕
You maybe use a for loop and iterate over every single line

480
00:23:04,040 --> 00:23:06,440
中文字幕
looking for some value, and then you close the file.

481
00:23:06,440 --> 00:23:07,480
中文字幕
That is big O of n.

482
00:23:07,480 --> 00:23:10,280
中文字幕
And in the worst case, the thing you care about is at the very end.

483
00:23:10,280 --> 00:23:11,810
中文字幕
And it's not terribly efficient.

484
00:23:11,810 --> 00:23:14,180
中文字幕
Now, you can append to files pretty efficiently.

485
00:23:14,180 --> 00:23:17,390
中文字幕
Recall that when we opened files with quote unquote, "A" for Append mode.

486
00:23:17,390 --> 00:23:20,180
中文字幕
We did this with a brief example, instead of "W" for Write.

487
00:23:20,180 --> 00:23:23,630
中文字幕
You get the operating system's help and add rose to the file

488
00:23:23,630 --> 00:23:25,610
中文字幕
at the very bottom, which is more efficient.

489
00:23:25,610 --> 00:23:28,460
中文字幕
But you can't insert things in the middle very efficiently.

490
00:23:28,460 --> 00:23:30,200
中文字幕
You can't delete things very easily.

491
00:23:30,200 --> 00:23:33,650
中文字幕
You would have to literally, for those kinds of scenarios, open the file,

492
00:23:33,650 --> 00:23:36,590
中文字幕
read the whole darn thing, then write out parts of it

493
00:23:36,590 --> 00:23:38,870
中文字幕
or add to it as you're writing out.

494
00:23:38,870 --> 00:23:41,420
中文字幕
And so humans years ago realized, well, this is stupid.

495
00:23:41,420 --> 00:23:43,460
中文字幕
All of us humans in the world are constantly

496
00:23:43,460 --> 00:23:46,610
中文字幕
writing code to open files, change files, save files.

497
00:23:46,610 --> 00:23:50,500
中文字幕
Why don't a few of us do an even better job of implementing that feature,

498
00:23:50,500 --> 00:23:51,710
中文字幕
then share it with the world?

499
00:23:51,710 --> 00:23:53,930
中文字幕
And thus were born, effectively, databases.

500
00:23:53,930 --> 00:23:56,900
中文字幕
And these days, there are so many different types of databases--

501
00:23:56,900 --> 00:23:59,900
中文字幕
you might be familiar with tools, commercial software like Oracle,

502
00:23:59,900 --> 00:24:02,240
中文字幕
or SQL Server, or Microsoft Access.

503
00:24:02,240 --> 00:24:05,420
中文字幕
And in the open source world, there's Postgres and MySQL,

504
00:24:05,420 --> 00:24:07,040
中文字幕
and SQLite and others.

505
00:24:07,040 --> 00:24:09,710
中文字幕
And many of them, as even those names imply,

506
00:24:09,710 --> 00:24:13,310
中文字幕
use a special language called SQL, Structured Query Language, which

507
00:24:13,310 --> 00:24:15,020
中文字幕
is the very last language we'll introduce

508
00:24:15,020 --> 00:24:17,960
中文字幕
you to in CS50 unless you go off on your own with final projects

509
00:24:17,960 --> 00:24:19,160
中文字幕
to pick up something more.

510
00:24:19,160 --> 00:24:22,820
中文字幕
But with SQL, you have the ability to select data from a database,

511
00:24:22,820 --> 00:24:25,070
中文字幕
to insert it, to delete it, to updated it.

512
00:24:25,070 --> 00:24:28,220
中文字幕
All of the things that you could absolutely do with Python and CSVs,

513
00:24:28,220 --> 00:24:32,790
中文字幕
it would just be so darn tedious to write those lines of code yourself.

514
00:24:32,790 --> 00:24:34,490
中文字幕
So what's the right mental model?

515
00:24:34,490 --> 00:24:37,570
中文字幕
Here is, I claim, essentially a database.

516
00:24:37,570 --> 00:24:39,410
中文字幕
Like most everyone in this room has probably

517
00:24:39,410 --> 00:24:41,610
中文字幕
used Google Spreadsheets, and if you've not, probably

518
00:24:41,610 --> 00:24:43,890
中文字幕
Excel or maybe Apple Numbers.

519
00:24:43,890 --> 00:24:45,650
中文字幕
So these are spreadsheets.

520
00:24:45,650 --> 00:24:49,320
中文字幕
And they're essentially what you could call a relational database.

521
00:24:49,320 --> 00:24:51,320
中文字幕
Relational-- implying that there's relationships

522
00:24:51,320 --> 00:24:54,290
中文字幕
among the various data in the rows and the columns decided by you

523
00:24:54,290 --> 00:24:55,310
中文字幕
or whoever made it.

524
00:24:55,310 --> 00:24:57,050
中文字幕
And this is a spreadsheet of course.

525
00:24:57,050 --> 00:25:00,980
中文字幕
And it has rows where your actual data goes.

526
00:25:00,980 --> 00:25:04,760
中文字幕
And columns-- and what's noteworthy about the columns?

527
00:25:04,760 --> 00:25:06,950
中文字幕
It's just conventional to do what with the columns,

528
00:25:06,950 --> 00:25:08,210
中文字幕
especially in that first row?

529
00:25:08,210 --> 00:25:09,180
中文字幕
Headers.

530
00:25:09,180 --> 00:25:10,960
中文字幕
Yeah, put some header values, right?

531
00:25:10,960 --> 00:25:12,820
中文字幕
You could certainly put them in the left.

532
00:25:12,820 --> 00:25:14,890
中文字幕
It's just humans prefer, it seems, to read top

533
00:25:14,890 --> 00:25:17,200
中文字幕
to bottom instead of left to all the way to the right.

534
00:25:17,200 --> 00:25:20,170
中文字幕
So we just adopted a conventioneers ago that your columns represent

535
00:25:20,170 --> 00:25:24,580
中文字幕
different types of data, and the rows represent different values

536
00:25:24,580 --> 00:25:27,710
中文字幕
for those fields or for those columns, so to speak.

537
00:25:27,710 --> 00:25:30,100
中文字幕
So if you wanted to store a spreadsheet of values

538
00:25:30,100 --> 00:25:33,400
中文字幕
for a bunch of students in a class or in a university,

539
00:25:33,400 --> 00:25:37,120
中文字幕
one column might be ID number, like their Harvard ID or the Yale ID.

540
00:25:37,120 --> 00:25:40,900
中文字幕
Another column might be their name, their email address, phone number, age,

541
00:25:40,900 --> 00:25:41,470
中文字幕
and so forth.

542
00:25:41,470 --> 00:25:42,970
中文字幕
And you could just lay that all out.

543
00:25:42,970 --> 00:25:46,420
中文字幕
You can make it pretty and boldface the top and organize things and sort it.

544
00:25:46,420 --> 00:25:49,170
中文字幕
But at some point, this isn't quite the right tool.

545
00:25:49,170 --> 00:25:51,220
中文字幕
And in fact, I ran into this in grad school years

546
00:25:51,220 --> 00:25:53,260
中文字幕
ago where I was analyzing large sets of data.

547
00:25:53,260 --> 00:25:55,720
中文字幕
And it was just convenient to double-click on the CSV file,

548
00:25:55,720 --> 00:25:58,570
中文字幕
open it in Excel, and just manipulate it and answer the data

549
00:25:58,570 --> 00:25:59,820
中文字幕
questions that I had.

550
00:25:59,820 --> 00:26:06,370
中文字幕
But back in the day, Excel actually had a limit of 65,536 rows.

551
00:26:06,370 --> 00:26:08,020
中文字幕
Sounds like a lot--

552
00:26:08,020 --> 00:26:12,130
中文字幕
and that's 2 to the 16th power, if you call the reference there.

553
00:26:12,130 --> 00:26:15,450
中文字幕
And so humans at Microsoft decided years ago, that's enough.

554
00:26:15,450 --> 00:26:16,720
中文字幕
And frankly, it kind of was.

555
00:26:16,720 --> 00:26:18,820
中文字幕
Because even in the thousands of rows, like,

556
00:26:18,820 --> 00:26:22,960
中文字幕
my Mac just became unusable because it was just too much memory being used.

557
00:26:22,960 --> 00:26:25,590
中文字幕
So it was just an impractical limit anyway.

558
00:26:25,590 --> 00:26:27,340
中文字幕
But at some point, you might want to store

559
00:26:27,340 --> 00:26:33,670
中文字幕
65,537 rows of data or hundreds of thousands of rows or millions of rows

560
00:26:33,670 --> 00:26:34,420
中文字幕
or even more.

561
00:26:34,420 --> 00:26:36,710
中文字幕
I mean, there are so many websites, Google and Facebook

562
00:26:36,710 --> 00:26:38,350
中文字幕
and others that surely do this already.

563
00:26:38,350 --> 00:26:41,060
中文字幕
You can't just use a program on your Mac or PC anymore.

564
00:26:41,060 --> 00:26:42,700
中文字幕
You need to use fancier software.

565
00:26:42,700 --> 00:26:46,150
中文字幕
But that fancier software often still works the same way.

566
00:26:46,150 --> 00:26:49,780
中文字幕
You have one main file called a spreadsheet in our human world.

567
00:26:49,780 --> 00:26:52,930
中文字幕
But in the server world, you might call it a database instead.

568
00:26:52,930 --> 00:26:54,640
中文字幕
And whereas, in our human world, we might

569
00:26:54,640 --> 00:26:58,150
中文字幕
have things called Sheets or individual spreadsheets within the bigger file,

570
00:26:58,150 --> 00:27:00,740
中文字幕
in a database, you're going to have things called tables.

571
00:27:00,740 --> 00:27:03,580
中文字幕
But they're the exact same thing with rows and columns.

572
00:27:03,580 --> 00:27:05,620
中文字幕
And so when we want to actually store data,

573
00:27:05,620 --> 00:27:08,280
中文字幕
we can actually store it in exactly those ways.

574
00:27:08,280 --> 00:27:09,580
中文字幕
So let me go ahead and do this.

575
00:27:09,580 --> 00:27:13,060
中文字幕
Let me go ahead and open up Google Spreadsheets just

576
00:27:13,060 --> 00:27:15,450
中文字幕
as representative of a database.

577
00:27:15,450 --> 00:27:18,520
中文字幕
And let me go ahead and create a new file here.

578
00:27:18,520 --> 00:27:23,740
中文字幕
So New Spreadsheet-- and just so that we can represent things like students.

579
00:27:23,740 --> 00:27:25,630
中文字幕
I'm going to call this spreadsheet Students.

580
00:27:25,630 --> 00:27:29,380
中文字幕
And over here I'm going to put their ID number and their name, and what

581
00:27:29,380 --> 00:27:31,630
中文字幕
are some other fields I rattled off that come to mind?

582
00:27:31,630 --> 00:27:33,340
中文字幕
Email.

583
00:27:33,340 --> 00:27:34,240
中文字幕
Dorm.

584
00:27:34,240 --> 00:27:34,880
中文字幕
Say again.

585
00:27:34,880 --> 00:27:35,990
中文字幕
Dorm.

586
00:27:35,990 --> 00:27:36,840
中文字幕
Good.

587
00:27:36,840 --> 00:27:38,810
中文字幕
Sports and stuff they want to do.

588
00:27:38,810 --> 00:27:39,600
中文字幕
OK.

589
00:27:39,600 --> 00:27:41,250
中文字幕
So sports they want to do, sure.

590
00:27:41,250 --> 00:27:44,040
中文字幕
That's fine-- a little longer.

591
00:27:44,040 --> 00:27:45,200
中文字幕
What else?

592
00:27:45,200 --> 00:27:46,620
中文字幕
Graduation year.

593
00:27:46,620 --> 00:27:48,600
中文字幕
Graduation year, age, OK, good.

594
00:27:48,600 --> 00:27:52,800
中文字幕
So graduation year, age, concentration--

595
00:27:52,800 --> 00:27:55,680
中文字幕
OK, and we can probably keep going, and it just gets wider and wider.

596
00:27:55,680 --> 00:27:59,400
中文字幕
And these are my columns, if you will, or the fields in the database.

597
00:27:59,400 --> 00:28:03,030
中文字幕
And frankly, I could name this if I really want to be tidy here,

598
00:28:03,030 --> 00:28:04,440
中文字幕
and I could call this Students.

599
00:28:04,440 --> 00:28:04,800
中文字幕
And you know what?

600
00:28:04,800 --> 00:28:07,260
中文字幕
Maybe I should call this not students but university.

601
00:28:07,260 --> 00:28:10,740
中文字幕
Because I might want to have another tab here that we'll preemptively

602
00:28:10,740 --> 00:28:12,540
中文字幕
name to, say, faculty.

603
00:28:12,540 --> 00:28:15,410
中文字幕
And faculty probably have ID numbers, and they have names,

604
00:28:15,410 --> 00:28:17,460
中文字幕
and they probably have departments, for instance.

605
00:28:17,460 --> 00:28:20,590
中文字幕
And they also probably have emails and so forth.

606
00:28:20,590 --> 00:28:22,510
中文字幕
So phone number is another one.

607
00:28:22,510 --> 00:28:25,200
中文字幕
But I might want to kind of cluster these different types

608
00:28:25,200 --> 00:28:27,280
中文字幕
of data in different spreadsheets because they're

609
00:28:27,280 --> 00:28:28,410
中文字幕
kind of apples and oranges.

610
00:28:28,410 --> 00:28:31,680
中文字幕
There might be some overlap, but they're distinct inside different sheets.

611
00:28:31,680 --> 00:28:34,080
中文字幕
In the database world, you do the exact same thing,

612
00:28:34,080 --> 00:28:35,880
中文字幕
except you call the whole thing a database,

613
00:28:35,880 --> 00:28:38,670
中文字幕
and you call these things tables to be clear.

614
00:28:38,670 --> 00:28:41,850
中文字幕
But more importantly, with a real database, so to speak,

615
00:28:41,850 --> 00:28:45,120
中文字幕
you have to be a little more proactive about telling the database what

616
00:28:45,120 --> 00:28:46,680
中文字幕
types of data you want to store.

617
00:28:46,680 --> 00:28:49,130
中文字幕
Now, those of you who've used Google Spreadsheets and Apple

618
00:28:49,130 --> 00:28:52,620
中文字幕
numbers and Excel know that you can go to the format menu or the data menu

619
00:28:52,620 --> 00:28:55,380
中文字幕
or whatever, and you can show things to different decimal places.

620
00:28:55,380 --> 00:28:56,970
中文字幕
You can turn things to percents.

621
00:28:56,970 --> 00:28:58,410
中文字幕
And you can format the data.

622
00:28:58,410 --> 00:29:01,170
中文字幕
But that doesn't tend to have any functional impact on your data.

623
00:29:01,170 --> 00:29:03,940
中文字幕
It's just an aesthetic detail, like, how long or short do

624
00:29:03,940 --> 00:29:07,690
中文字幕
you want to show the numbers to be in your columns and cells.

625
00:29:07,690 --> 00:29:10,830
中文字幕
But with databases, you can actually provide juicy hints

626
00:29:10,830 --> 00:29:15,960
中文字幕
to the database that will help that database store and find data for you

627
00:29:15,960 --> 00:29:17,670
中文字幕
more efficiently.

628
00:29:17,670 --> 00:29:20,580
中文字幕
For instance, there's this laundry list of data types

629
00:29:20,580 --> 00:29:22,440
中文字幕
to which we have access in SQL.

630
00:29:22,440 --> 00:29:26,220
中文字幕
So SQL is the language with which we're going to be able to query a database.

631
00:29:26,220 --> 00:29:30,150
中文字幕
Frankly, in something like Google Spreadsheets and Microsoft Excel,

632
00:29:30,150 --> 00:29:31,080
中文字幕
how do you find data?

633
00:29:31,080 --> 00:29:34,680
中文字幕
We'll usually hit Command-F or Control-F, and you search for it.

634
00:29:34,680 --> 00:29:35,910
中文字幕
That's not very programmatic.

635
00:29:35,910 --> 00:29:37,230
中文字幕
You can do it with macros and such.

636
00:29:37,230 --> 00:29:38,390
中文字幕
And we'll do this with code.

637
00:29:38,390 --> 00:29:41,160
中文字幕
But with SQL, you're going to have to make a few decisions first.

638
00:29:41,160 --> 00:29:45,220
中文字幕
SQL supports a few different data types, at least, in one of its forms.

639
00:29:45,220 --> 00:29:47,520
中文字幕
So it turns out there's a lot of competition out there.

640
00:29:47,520 --> 00:29:49,890
中文字幕
SQL is a general language.

641
00:29:49,890 --> 00:29:52,260
中文字幕
But different companies and different nonprofit groups

642
00:29:52,260 --> 00:29:54,090
中文字幕
have come up with their own dialects.

643
00:29:54,090 --> 00:29:56,340
中文字幕
So much like we humans might speak--

644
00:29:56,340 --> 00:29:57,750
中文字幕
bunches of us might speak Spanish.

645
00:29:57,750 --> 00:30:00,380
中文字幕
Well, there are different variations of Spanish, not to mention

646
00:30:00,380 --> 00:30:01,830
中文字幕
many, many, many other languages.

647
00:30:01,830 --> 00:30:03,620
中文字幕
And so similarly, in the programming world,

648
00:30:03,620 --> 00:30:06,030
中文字幕
as there's sort of a common subset of words in a language.

649
00:30:06,030 --> 00:30:08,070
中文字幕
But then different companies and different people

650
00:30:08,070 --> 00:30:11,220
中文字幕
might have added and subtracted their own features just because they think

651
00:30:11,220 --> 00:30:13,170
中文字幕
that's better for their use cases.

652
00:30:13,170 --> 00:30:19,080
中文字幕
So in SQLite, which is the database technology we will use in CS50 IDE,

653
00:30:19,080 --> 00:30:21,930
中文字幕
and Android uses this, and it's very popular in other contexts

654
00:30:21,930 --> 00:30:23,520
中文字幕
too, IOS as well--

655
00:30:23,520 --> 00:30:25,200
中文字幕
they only have a few data types.

656
00:30:25,200 --> 00:30:29,100
中文字幕
Blob, of all things, integer, numeric, real, and text.

657
00:30:29,100 --> 00:30:30,100
中文字幕
Now what does that mean?

658
00:30:30,100 --> 00:30:33,050
中文字幕
Well, it turns out, it means different things with different databases.

659
00:30:33,050 --> 00:30:36,080
中文字幕
In another popular database, it's called Postgres or PostgreSQL.

660
00:30:36,080 --> 00:30:38,780
中文字幕
This is a very popular one for high-performing websites.

661
00:30:38,780 --> 00:30:40,740
中文字幕
So if you're trying to build a business, you're

662
00:30:40,740 --> 00:30:43,570
中文字幕
trying to make an application used by everyone on campus, generally,

663
00:30:43,570 --> 00:30:46,800
中文字幕
you would use a fancier technology than SQLite, which is, by definition,

664
00:30:46,800 --> 00:30:47,580
中文字幕
lightweight.

665
00:30:47,580 --> 00:30:49,230
中文字幕
And you'd do something like Postgres.

666
00:30:49,230 --> 00:30:52,650
中文字幕
And so we'll introduce you to both of these dialects along the way

667
00:30:52,650 --> 00:30:55,440
中文字幕
because each of them allows us to do different things

668
00:30:55,440 --> 00:30:57,340
中文字幕
with a different degree of precision.

669
00:30:57,340 --> 00:31:01,290
中文字幕
So in SQL, let's claim, even though it's a simplification,

670
00:31:01,290 --> 00:31:02,910
中文字幕
there are at least these data types.

671
00:31:02,910 --> 00:31:06,090
中文字幕
When deciding what type of data to store in your database table,

672
00:31:06,090 --> 00:31:09,650
中文字幕
you have to decide, not just what it's called, like ID, and name, and email,

673
00:31:09,650 --> 00:31:10,150
中文字幕
and dorm.

674
00:31:10,150 --> 00:31:12,470
中文字幕
You have to decide what data type it is.

675
00:31:12,470 --> 00:31:13,890
中文字幕
So we've kind of come full circle.

676
00:31:13,890 --> 00:31:17,120
中文字幕
Because the last time we did this was in what language?

677
00:31:17,120 --> 00:31:17,930
中文字幕
C.

678
00:31:17,930 --> 00:31:20,710
中文字幕
So in SQL too you do this, but it's not to be nitpicky.

679
00:31:20,710 --> 00:31:22,490
中文字幕
It's to actually improve performance.

680
00:31:22,490 --> 00:31:25,180
中文字幕
So this is to help you get at that data more efficiently.

681
00:31:25,180 --> 00:31:28,280
中文字幕
Because the more the server, the database, knows about your data,

682
00:31:28,280 --> 00:31:30,460
中文字幕
the faster it can find it essentially.

683
00:31:30,460 --> 00:31:32,680
中文字幕
So in the world of databases, you generally

684
00:31:32,680 --> 00:31:35,500
中文字幕
have to decide, not just to store an integer, but either

685
00:31:35,500 --> 00:31:38,290
中文字幕
a small int of integer, or a big int.

686
00:31:38,290 --> 00:31:42,700
中文字幕
And generally speaking, at least in most databases, this might be 2 bytes.

687
00:31:42,700 --> 00:31:43,870
中文字幕
This might be 4 bytes.

688
00:31:43,870 --> 00:31:45,220
中文字幕
This might be 8 bytes.

689
00:31:45,220 --> 00:31:47,020
中文字幕
So let's maybe impress the families here.

690
00:31:47,020 --> 00:31:50,110
中文字幕
If you have a 32-bit integer, or 4 bytes,

691
00:31:50,110 --> 00:31:54,600
中文字幕
what's the biggest integer you can store in your database?

692
00:31:54,600 --> 00:31:56,960
中文字幕
(WHISPERS) 4 billion.

693
00:31:56,960 --> 00:31:58,130
中文字幕
Someone please, impress.

694
00:31:58,130 --> 00:31:59,200
中文字幕
4 billion.

695
00:31:59,200 --> 00:32:01,200
中文字幕
4 billion is exactly correct.

696
00:32:01,200 --> 00:32:04,430
中文字幕
And it might be 4 billion positive values, or maybe it's only 2 billion

697
00:32:04,430 --> 00:32:08,220
中文字幕
if you also want to have 2 billion or so negative numbers as well.

698
00:32:08,220 --> 00:32:13,520
中文字幕
Big int uses 64-bit, which is just massively, massively bigger.

699
00:32:13,520 --> 00:32:15,420
中文字幕
And tiny int or small int rather--

700
00:32:15,420 --> 00:32:18,610
中文字幕
there's also tiny int in some dialects-- small int is just 2 bytes,

701
00:32:18,610 --> 00:32:24,700
中文字幕
and it actually counts up as high as 65,535, as I alluded to earlier.

702
00:32:24,700 --> 00:32:25,980
中文字幕
So you just need to decide.

703
00:32:25,980 --> 00:32:29,340
中文字幕
Now, why would you choose one or the other, when you could just use big int

704
00:32:29,340 --> 00:32:31,570
中文字幕
and store small numbers and big numbers alike?

705
00:32:31,570 --> 00:32:35,190
中文字幕
Well, why might you just intuitively not want to make all of your integer values

706
00:32:35,190 --> 00:32:37,050
中文字幕
in a database big ints.

707
00:32:37,050 --> 00:32:39,660
中文字幕
It's just simple-- give me as much headroom as I want.

708
00:32:39,660 --> 00:32:41,420
中文字幕
You would be using memory.

709
00:32:41,420 --> 00:32:41,550
中文字幕
Yeah.

710
00:32:41,550 --> 00:32:43,590
中文字幕
You're just using memory unnecessarily, right?

711
00:32:43,590 --> 00:32:45,650
中文字幕
Why use more memory than you need to?

712
00:32:45,650 --> 00:32:48,220
中文字幕
Now, arguably-- god, memory is so cheap these days.

713
00:32:48,220 --> 00:32:49,930
中文字幕
Computers are getting bigger and faster.

714
00:32:49,930 --> 00:32:52,000
中文字幕
So in some contexts, it's not a big deal.

715
00:32:52,000 --> 00:32:56,130
中文字幕
But if you have lots of data, and every one of your rows in a database

716
00:32:56,130 --> 00:32:59,950
中文字幕
is 2 bytes bigger than needs to be, and you have 1 million rows,

717
00:32:59,950 --> 00:33:03,910
中文字幕
that's already huge numbers of bytes that you're just wasting and throwing

718
00:33:03,910 --> 00:33:04,410
中文字幕
away.

719
00:33:04,410 --> 00:33:07,280
中文字幕
So it behooves you to actually give some thought to these data types.

720
00:33:07,280 --> 00:33:09,000
中文字幕
Of course, you don't want to go too small

721
00:33:09,000 --> 00:33:11,940
中文字幕
because, if you use a small int or maybe even an integer,

722
00:33:11,940 --> 00:33:17,160
中文字幕
but business is so darn good that you have over 4 billion users or 4

723
00:33:17,160 --> 00:33:21,330
中文字幕
billion rows or 4 billion foos and bars and bazes that have been sold,

724
00:33:21,330 --> 00:33:24,520
中文字幕
which absolutely happens to the Googles and Facebooks of the world,

725
00:33:24,520 --> 00:33:30,450
中文字幕
you better start using 64 bits to represent unique values instead of just

726
00:33:30,450 --> 00:33:30,990
中文字幕
32.

727
00:33:30,990 --> 00:33:32,280
中文字幕
Because eventually, you'll run out.

728
00:33:32,280 --> 00:33:32,940
中文字幕
Well, what else?

729
00:33:32,940 --> 00:33:36,750
中文字幕
Besides integer values in SQL, you might want to use floating point values.

730
00:33:36,750 --> 00:33:39,090
中文字幕
Those are real numbers that have decimal points in them.

731
00:33:39,090 --> 00:33:41,280
中文字幕
This is quite like C. They're called a little something different.

732
00:33:41,280 --> 00:33:43,750
中文字幕
And annoyingly, it uses two words in this case.

733
00:33:43,750 --> 00:33:46,920
中文字幕
But a real number is a 32-bit value that is a floating point

734
00:33:46,920 --> 00:33:49,430
中文字幕
value, like a float in C, and double precision

735
00:33:49,430 --> 00:33:51,540
中文字幕
is like a double in C, which is 64-bits.

736
00:33:51,540 --> 00:33:54,480
中文字幕
And that just lets you get even finer-grained control

737
00:33:54,480 --> 00:33:56,220
中文字幕
over the decimal point as we've seen.

738
00:33:56,220 --> 00:33:59,130
中文字幕
Because of course, you can't represent numbers precisely

739
00:33:59,130 --> 00:34:02,640
中文字幕
because of imprecision, as we've seen in both Python and C.

740
00:34:02,640 --> 00:34:05,970
中文字幕
Numeric is kind of a catch-all for a bunch of number-related things

741
00:34:05,970 --> 00:34:08,460
中文字幕
that aren't quite integers or reals necessarily.

742
00:34:08,460 --> 00:34:11,420
中文字幕
Boolean, a true or false value, dates if you

743
00:34:11,420 --> 00:34:14,610
中文字幕
want to literally store, like, year, year, year, year, dash, month, month,

744
00:34:14,610 --> 00:34:17,630
中文字幕
dash, day, day in a standard computer format,

745
00:34:17,630 --> 00:34:19,800
中文字幕
even though human cultures vary how they write that.

746
00:34:19,800 --> 00:34:23,190
中文字幕
Datetime if you want have a date and a time right after it--

747
00:34:23,190 --> 00:34:26,070
中文字幕
numeric is actually a solution to a problem.

748
00:34:26,070 --> 00:34:29,010
中文字幕
Turns out that, finally, after all this time,

749
00:34:29,010 --> 00:34:33,210
中文字幕
we have a built-in mechanism for storing numbers precisely.

750
00:34:33,210 --> 00:34:35,960
中文字幕
And this is perfectly timed because, in CS50 Finance, when

751
00:34:35,960 --> 00:34:39,230
中文字幕
you're dealing with money, it would kind of be nice if you don't accidentally

752
00:34:39,230 --> 00:34:43,170
中文字幕
round off how much money someone has either slightly lower or slightly

753
00:34:43,170 --> 00:34:43,940
中文字幕
higher.

754
00:34:43,940 --> 00:34:47,630
中文字幕
Those of you may be families especially because, from a few movies back

755
00:34:47,630 --> 00:34:50,460
中文字幕
in the day, if you ever saw Superman III,

756
00:34:50,460 --> 00:34:53,730
中文字幕
this is how some money was made by shaving fractions of pennies

757
00:34:53,730 --> 00:34:56,760
中文字幕
off of computer systems and, more moderately, Office Space.

758
00:34:56,760 --> 00:35:00,960
中文字幕
Office Space did this as well-- big scam trying to round off these pennies.

759
00:35:00,960 --> 00:35:04,650
中文字幕
Well, if you use the right technology and language, with SQL,

760
00:35:04,650 --> 00:35:08,460
中文字幕
you can actually specify a numeric data type, which is like a floating point

761
00:35:08,460 --> 00:35:11,940
中文字幕
value, but you specify, essentially, the total number of digits you

762
00:35:11,940 --> 00:35:15,790
中文字幕
want it to handle and how many of them should be after the decimal point.

763
00:35:15,790 --> 00:35:17,850
中文字幕
So it's common in stock markets to actually use

764
00:35:17,850 --> 00:35:19,480
中文字幕
four decimal points of precision.

765
00:35:19,480 --> 00:35:22,260
中文字幕
So not just cents to the tenths and the hundredths place,

766
00:35:22,260 --> 00:35:24,570
中文字幕
but to the thousandths and ten-thousandths place,

767
00:35:24,570 --> 00:35:28,120
中文字幕
you can now specify that with a value of four for precision.

768
00:35:28,120 --> 00:35:30,000
中文字幕
And you don't have to worry about those round

769
00:35:30,000 --> 00:35:32,370
中文字幕
off errors we talked about before.

770
00:35:32,370 --> 00:35:34,230
中文字幕
Time and time stamps-- just how much time

771
00:35:34,230 --> 00:35:38,130
中文字幕
has passed since the date and date and time are also available to you in SQL.

772
00:35:38,130 --> 00:35:40,920
中文字幕
And then lastly here, text values--

773
00:35:40,920 --> 00:35:43,260
中文字幕
turns out you have a choice of values for when

774
00:35:43,260 --> 00:35:46,690
中文字幕
it comes to deciding how many characters do you use to store your data.

775
00:35:46,690 --> 00:35:49,780
中文字幕
You can use char, which just like in C with an array,

776
00:35:49,780 --> 00:35:53,170
中文字幕
you have to decide in advance for a string how many bytes to use.

777
00:35:53,170 --> 00:35:55,380
中文字幕
And if you say char 8, you are getting 8 bytes.

778
00:35:55,380 --> 00:35:59,160
中文字幕
And if the name is Malan, M-A-L-A-N, you are wasting 3,

779
00:35:59,160 --> 00:36:01,940
中文字幕
or if we null terminate it, 2 of those bytes.

780
00:36:01,940 --> 00:36:05,490
中文字幕
But SQL introduces a solution that Python kind of gave us too.

781
00:36:05,490 --> 00:36:09,300
中文字幕
Varchar as the name implies-- variable number of chars

782
00:36:09,300 --> 00:36:11,410
中文字幕
allows you to specify just an upper bound.

783
00:36:11,410 --> 00:36:14,550
中文字幕
So if you know that one of your columns is going to be called Name.

784
00:36:14,550 --> 00:36:17,490
中文字幕
And a person's name might be M-A-L-A-N-- like five letters,

785
00:36:17,490 --> 00:36:21,060
中文字幕
or maybe certainly more for people with longer last names are first names,

786
00:36:21,060 --> 00:36:23,940
中文字幕
you can say varchar 100.

787
00:36:23,940 --> 00:36:26,170
中文字幕
And that's the upper bound on how long it is.

788
00:36:26,170 --> 00:36:27,570
中文字幕
But the database will be smart.

789
00:36:27,570 --> 00:36:30,240
中文字幕
If you only need five characters or 5 bytes,

790
00:36:30,240 --> 00:36:32,790
中文字幕
it won't waste 95 others for you.

791
00:36:32,790 --> 00:36:35,080
中文字幕
It will optimize that for you.

792
00:36:35,080 --> 00:36:38,220
中文字幕
And then lastly text, if you want to store tens of thousands,

793
00:36:38,220 --> 00:36:41,610
中文字幕
like paragraphs or pages of text, that's even bigger than varchar

794
00:36:41,610 --> 00:36:44,310
中文字幕
where you don't necessarily want a well-defined upper bound.

795
00:36:44,310 --> 00:36:46,350
中文字幕
You just want a good chunk of memory.

796
00:36:46,350 --> 00:36:47,860
中文字幕
But there are implications here.

797
00:36:47,860 --> 00:36:52,380
中文字幕
And just quickly, char and varchar seem not even complimentary.

798
00:36:52,380 --> 00:36:54,180
中文字幕
Just char seems unnecessary.

799
00:36:54,180 --> 00:36:56,210
中文字幕
Why paint yourself into a corner and say give me

800
00:36:56,210 --> 00:36:58,850
中文字幕
only 8 bytes when you could just say, eh, give me

801
00:36:58,850 --> 00:37:02,550
中文字幕
up to 100 bites, and you, the database server,

802
00:37:02,550 --> 00:37:05,330
中文字幕
figure out how many to actually use?

803
00:37:05,330 --> 00:37:07,040
中文字幕
Why do these two data types exist?

804
00:37:07,040 --> 00:37:07,190
中文字幕
Yeah?

805
00:37:07,190 --> 00:37:08,640
中文字幕
Time.

806
00:37:08,640 --> 00:37:10,790
中文字幕
It would be longer to run.

807
00:37:10,790 --> 00:37:11,670
中文字幕
Yeah.

808
00:37:11,670 --> 00:37:12,860
中文字幕
So time is spot on.

809
00:37:12,860 --> 00:37:16,370
中文字幕
It might actually take longer to use one data type or the other.

810
00:37:16,370 --> 00:37:17,900
中文字幕
How could that possibly be?

811
00:37:17,900 --> 00:37:21,020
中文字幕
Well, if you've got a value like char where you specify

812
00:37:21,020 --> 00:37:23,660
中文字幕
a precise number of characters like 8.

813
00:37:23,660 --> 00:37:26,840
中文字幕
If you think about the columns in Google Spreadsheets and Excel,

814
00:37:26,840 --> 00:37:30,930
中文字幕
every one of those columns, those cells is exactly the same width, right?

815
00:37:30,930 --> 00:37:33,590
中文字幕
It's 8 bytes, 8 bytes, 8 bytes, 8 bytes.

816
00:37:33,590 --> 00:37:37,520
中文字幕
And as soon as you have perfectly constant offsets--

817
00:37:37,520 --> 00:37:42,770
中文字幕
this is byte 0, this is 8, this is 16, this is 24, this is 32,

818
00:37:42,770 --> 00:37:45,050
中文字幕
and so forth, you reintroduce the capability

819
00:37:45,050 --> 00:37:46,800
中文字幕
that in C we had with arrays.

820
00:37:46,800 --> 00:37:50,400
中文字幕
You have random access doing simple, simple arithmetic-- multiplication,

821
00:37:50,400 --> 00:37:54,680
中文字幕
addition, and subtraction, you can just jump to any element in a column

822
00:37:54,680 --> 00:37:58,190
中文字幕
if it's using the same number of bytes for every cell.

823
00:37:58,190 --> 00:38:04,320
中文字幕
But with varchar, if you need to have small narrow cells and wide cells,

824
00:38:04,320 --> 00:38:06,620
中文字幕
you're going to have what's called a ragged array where

825
00:38:06,620 --> 00:38:08,670
中文字幕
one side of it, the left-hand side, so to speak,

826
00:38:08,670 --> 00:38:10,290
中文字幕
is going to be very straight and rigid.

827
00:38:10,290 --> 00:38:14,480
中文字幕
But the other side my kind of vary based on how long the word is in that column.

828
00:38:14,480 --> 00:38:17,870
中文字幕
And to your point about time, it's going to take the computer more time

829
00:38:17,870 --> 00:38:19,730
中文字幕
to search a varchar field.

830
00:38:19,730 --> 00:38:22,070
中文字幕
Because it can't just jump to the third element.

831
00:38:22,070 --> 00:38:24,000
中文字幕
It has to search all of them, potentially.

832
00:38:24,000 --> 00:38:26,630
中文字幕
But thankfully, at the end of the day, databases don't do that.

833
00:38:26,630 --> 00:38:28,420
中文字幕
They don't just devolve into linear search.

834
00:38:28,420 --> 00:38:31,520
中文字幕
CSVs devolve, for our purposes, into linear search.

835
00:38:31,520 --> 00:38:35,420
中文字幕
The magic and the intellectual property and the secret sauce, so to speak,

836
00:38:35,420 --> 00:38:36,620
中文字幕
that goes into databases--

837
00:38:36,620 --> 00:38:40,520
中文字幕
Oracle SQL Server, Microsoft Access, Postgres, MySQL, and SQLite

838
00:38:40,520 --> 00:38:45,020
中文字幕
is that really smart computer scientists have decided to implement algorithms

839
00:38:45,020 --> 00:38:47,660
中文字幕
and fancy data structures, often tree-based--

840
00:38:47,660 --> 00:38:50,060
中文字幕
if you recall our discussion of binary trees

841
00:38:50,060 --> 00:38:54,590
中文字幕
or tries on a hash tables and those fancier data structures-- they

842
00:38:54,590 --> 00:38:57,170
中文字幕
had baked those kinds of data structures and designs

843
00:38:57,170 --> 00:38:58,850
中文字幕
into their database software.

844
00:38:58,850 --> 00:39:01,680
中文字幕
They've made it freely available or commercially available.

845
00:39:01,680 --> 00:39:04,610
中文字幕
And so we now just have an abstraction called a database

846
00:39:04,610 --> 00:39:07,670
中文字幕
into which we can store data and just read it, update it, write it,

847
00:39:07,670 --> 00:39:10,430
中文字幕
and change it quickly without having to implement all

848
00:39:10,430 --> 00:39:12,890
中文字幕
of that low-level plumbing ourselves.

849
00:39:12,890 --> 00:39:15,440
中文字幕
And so that's ultimately what a database is going to give us.

850
00:39:15,440 --> 00:39:18,690
中文字幕
But we have to actually have access to a database to do that.

851
00:39:18,690 --> 00:39:21,260
中文字幕
And we need to actually decide first to help

852
00:39:21,260 --> 00:39:27,350
中文字幕
the database by telling it what to store where and how to store it as a type.

853
00:39:27,350 --> 00:39:28,850
中文字幕
So why don't we do this?

854
00:39:28,850 --> 00:39:33,060
中文字幕
Let me go ahead and do exactly that with a couple of examples.

855
00:39:33,060 --> 00:39:36,220
中文字幕
Let me go ahead and open up CS50 IDE again,

856
00:39:36,220 --> 00:39:38,210
中文字幕
our web-based programming environment.

857
00:39:38,210 --> 00:39:42,150
中文字幕
And let me go into our Terminal window.

858
00:39:42,150 --> 00:39:45,110
中文字幕
So for those unfamiliar, a terminal window is just this black and white

859
00:39:45,110 --> 00:39:47,720
中文字幕
or this blue and white window in which you can type commands.

860
00:39:47,720 --> 00:39:50,180
中文字幕
And rather than point and click and double click on things,

861
00:39:50,180 --> 00:39:52,170
中文字幕
you can only do things textually in this window.

862
00:39:52,170 --> 00:39:54,710
中文字幕
And it turns out that, in the world of SQLite,

863
00:39:54,710 --> 00:39:58,850
中文字幕
we can actually use a command called SQLite3,

864
00:39:58,850 --> 00:40:01,050
中文字幕
which allows us to create a database.

865
00:40:01,050 --> 00:40:03,710
中文字幕
So in our human world, for CSVs, you've seen how, in code, you

866
00:40:03,710 --> 00:40:05,080
中文字幕
can just create rows and columns.

867
00:40:05,080 --> 00:40:07,280
中文字幕
You can literally type it in a text box.

868
00:40:07,280 --> 00:40:12,330
中文字幕
SQLite is a database technology that uses binary format, 0s and 1s.

869
00:40:12,330 --> 00:40:15,140
中文字幕
And so you're going to have to actually store your data differently

870
00:40:15,140 --> 00:40:16,140
中文字幕
using a program.

871
00:40:16,140 --> 00:40:22,070
中文字幕
So if I want to make a file called, for instance, froshims.db,

872
00:40:22,070 --> 00:40:25,070
中文字幕
I can literally say SQLite three froshims.db,

873
00:40:25,070 --> 00:40:26,450
中文字幕
and then I'm in this program.

874
00:40:26,450 --> 00:40:29,870
中文字幕
This is a text-based program via which I can create my rows and columns.

875
00:40:29,870 --> 00:40:32,580
中文字幕
And it, by designer, is going to be a little arcane for a moment.

876
00:40:32,580 --> 00:40:34,080
中文字幕
It's going to look a little cryptic.

877
00:40:34,080 --> 00:40:37,140
中文字幕
But if I want to go ahead and create a table, like a spreadsheet in here,

878
00:40:37,140 --> 00:40:39,350
中文字幕
I'm going to literally type CREATE TABLE.

879
00:40:39,350 --> 00:40:41,720
中文字幕
I'm going to call this registrants just like last week

880
00:40:41,720 --> 00:40:43,490
中文字幕
when we were looking at froshims examples.

881
00:40:43,490 --> 00:40:45,230
中文字幕
And the freshman intramural sports program

882
00:40:45,230 --> 00:40:47,210
中文字幕
has students registering for sports.

883
00:40:47,210 --> 00:40:49,190
中文字幕
So I'm going to have a registrants table here.

884
00:40:49,190 --> 00:40:51,770
中文字幕
I'm going to go ahead now and specify that I

885
00:40:51,770 --> 00:40:56,930
中文字幕
want a few columns for this database table, one of which I want to call ID,

886
00:40:56,930 --> 00:40:59,990
中文字幕
one of which I want to call name, and one of which I want to call dorm.

887
00:40:59,990 --> 00:41:01,380
中文字幕
So I'm going to keep-- whoops.

888
00:41:01,380 --> 00:41:02,510
中文字幕
I didn't mean to hit Enter.

889
00:41:02,510 --> 00:41:03,770
中文字幕
Let me just clean this up.

890
00:41:03,770 --> 00:41:07,130
中文字幕
So now I have three columns, ID, name, and dorm.

891
00:41:07,130 --> 00:41:09,170
中文字幕
And if I were to hit Enter, theoretically, it

892
00:41:09,170 --> 00:41:10,350
中文字幕
should create a database.

893
00:41:10,350 --> 00:41:13,050
中文字幕
It's not going to be graphical like Excel or Google Spreadsheets,

894
00:41:13,050 --> 00:41:16,850
中文字幕
but it will exist in my IDE in a file called froshims.db.

895
00:41:16,850 --> 00:41:18,170
中文字幕
But I can't just hit Enter yet.

896
00:41:18,170 --> 00:41:20,240
中文字幕
Because I have to tell the database a bit more.

897
00:41:20,240 --> 00:41:21,830
中文字幕
I need to tell it that, you know what?

898
00:41:21,830 --> 00:41:24,560
中文字幕
My ID value should probably be an integer.

899
00:41:24,560 --> 00:41:25,310
中文字幕
And you know what?

900
00:41:25,310 --> 00:41:31,280
中文字幕
My name should probably be char, or varchar?

901
00:41:31,280 --> 00:41:33,920
中文字幕
What should the name of a student be stored as?

902
00:41:33,920 --> 00:41:34,670
中文字幕
varchar.

903
00:41:34,670 --> 00:41:36,050
中文字幕
Varchar, OK?

904
00:41:36,050 --> 00:41:38,050
中文字幕
So varchar because they're going to vary, right?

905
00:41:38,050 --> 00:41:39,400
中文字幕
If you can think of bunches of your friends,

906
00:41:39,400 --> 00:41:41,180
中文字幕
they might have short names or long names.

907
00:41:41,180 --> 00:41:42,310
中文字幕
OK, what's the upper bound?

908
00:41:42,310 --> 00:41:46,810
中文字幕
What's the length of your friends' longest name?

909
00:41:46,810 --> 00:41:47,630
中文字幕
50.

910
00:41:47,630 --> 00:41:48,510
中文字幕
16?

911
00:41:48,510 --> 00:41:49,390
中文字幕
All right.

912
00:41:49,390 --> 00:41:54,210
中文字幕
Is anyone in here having a name, first name and last, that's longer than 16?

913
00:41:54,210 --> 00:41:55,540
中文字幕
That's 50, sorry.

914
00:41:55,540 --> 00:41:56,500
中文字幕
Oh, 50.

915
00:41:56,500 --> 00:41:56,990
中文字幕
Sorry.

916
00:41:56,990 --> 00:41:58,350
中文字幕
I heard 16, I thought.

917
00:41:58,350 --> 00:42:00,730
中文字幕
Because you're not going be able to register for froshims

918
00:42:00,730 --> 00:42:02,470
中文字幕
because the database is going to truncate.

919
00:42:02,470 --> 00:42:05,830
中文字幕
And as an aside, if you've ever gone to a website and tried typing into a form

920
00:42:05,830 --> 00:42:08,740
中文字幕
field and either your keyboard stops working

921
00:42:08,740 --> 00:42:12,100
中文字幕
or you do type a long word or paragraph in, and then you hit Enter,

922
00:42:12,100 --> 00:42:15,550
中文字幕
and it's some of it's gone, well, that's because the database likely

923
00:42:15,550 --> 00:42:17,110
中文字幕
can only store so many bytes.

924
00:42:17,110 --> 00:42:20,010
中文字幕
And frankly, this often happens on customer service forums, right?

925
00:42:20,010 --> 00:42:22,930
中文字幕
They don't really want you being too verbose with the customer support

926
00:42:22,930 --> 00:42:23,430
中文字幕
staff.

927
00:42:23,430 --> 00:42:26,020
中文字幕
They'll cap the length of the field into which you're typing.

928
00:42:26,020 --> 00:42:27,860
中文字幕
And they're also doing that on the database,

929
00:42:27,860 --> 00:42:29,710
中文字幕
but also probably for practical human reasons,

930
00:42:29,710 --> 00:42:32,410
中文字幕
they don't want to read a big complaint that's this long as well.

931
00:42:32,410 --> 00:42:36,200
中文字幕
So 50-- anyone have a name longer than 50 characters?

932
00:42:36,200 --> 00:42:37,930
中文字幕


933
00:42:37,930 --> 00:42:39,480
中文字幕
Yeah, not many names.

934
00:42:39,480 --> 00:42:40,340
中文字幕
But you know what?

935
00:42:40,340 --> 00:42:42,230
中文字幕
We have technology to answer this.

936
00:42:42,230 --> 00:42:46,110
中文字幕
Longest name in world--

937
00:42:46,110 --> 00:42:46,940
中文字幕
and it's this guy.

938
00:42:46,940 --> 00:42:49,400
中文字幕
Guinness Book of World Records is probably right.

939
00:42:49,400 --> 00:42:56,210
中文字幕
So his name is Barnaby Marmaduke Aloysius Benjy Cobweb Dartagnan Egbert

940
00:42:56,210 --> 00:43:02,420
中文字幕
Felix Gaspar Humbert Ignatius Jayden Kasper Leroy Maximilian Neddy Obiajulu

941
00:43:02,420 --> 00:43:08,420
中文字幕
Pepin Quilliam Rosenkranz Sexton Teddy Upwood Vivatma Wayland Xylon Yardley

942
00:43:08,420 --> 00:43:10,400
中文字幕
Zachary Usansky.

943
00:43:10,400 --> 00:43:13,720
中文字幕
But he also goes by Nick, apparently.

944
00:43:13,720 --> 00:43:14,930
中文字幕
But OK.

945
00:43:14,930 --> 00:43:16,550
中文字幕
Let me go ahead and highlight this.

946
00:43:16,550 --> 00:43:18,530
中文字幕
And I could count this manually.

947
00:43:18,530 --> 00:43:22,110
中文字幕
But I'm sure someone has made a website to count characters in a string.

948
00:43:22,110 --> 00:43:23,320
中文字幕
There we go, lettercount.com.

949
00:43:23,320 --> 00:43:25,340
中文字幕
OK.

950
00:43:25,340 --> 00:43:28,760
中文字幕
Let's go ahead and paste that in, count the characters, 225--

951
00:43:28,760 --> 00:43:32,780
中文字幕
so nick will not be registering unless we don't support just 16 or 50.

952
00:43:32,780 --> 00:43:34,960
中文字幕
Looks like we need at least 225.

953
00:43:34,960 --> 00:43:37,010
中文字幕
So at some point, you do have to make a decision.

954
00:43:37,010 --> 00:43:38,930
中文字幕
And honestly, it's not always obvious.

955
00:43:38,930 --> 00:43:42,370
中文字幕
You do have to specify that varchar is going to be-- eh, it could be 16,

956
00:43:42,370 --> 00:43:44,510
中文字幕
could be 50, could be 225.

957
00:43:44,510 --> 00:43:46,010
中文字幕
But you know what? if he has kids--

958
00:43:46,010 --> 00:43:50,240
中文字幕
so let's just round up a bit and call it varchar 255, honestly,

959
00:43:50,240 --> 00:43:52,050
中文字幕
only because it was a convention.

960
00:43:52,050 --> 00:43:54,860
中文字幕
So back in the day, 255 tended to be the max length

961
00:43:54,860 --> 00:43:56,510
中文字幕
for this field in older databases.

962
00:43:56,510 --> 00:43:59,780
中文字幕
And that at least feels like it's probably enough wiggle room for names.

963
00:43:59,780 --> 00:44:01,910
中文字幕
But you have to make a judgment call at some point.

964
00:44:01,910 --> 00:44:05,180
中文字幕
We could ignore the problem say 1,000 characters.

965
00:44:05,180 --> 00:44:06,980
中文字幕
But if that's never really going to happen,

966
00:44:06,980 --> 00:44:09,430
中文字幕
and your potentially wasting space, you probably shouldn't.

967
00:44:09,430 --> 00:44:12,920
中文字幕
Because even though it's an upper bound, you're sacrificing something like time,

968
00:44:12,920 --> 00:44:15,440
中文字幕
potentially, to search that field if you're just

969
00:44:15,440 --> 00:44:19,130
中文字幕
telling the database that it's going to be bigger than it ever actually

970
00:44:19,130 --> 00:44:19,670
中文字幕
will be.

971
00:44:19,670 --> 00:44:22,430
中文字幕
It needs to be more finely hinted.

972
00:44:22,430 --> 00:44:23,360
中文字幕
So what about dorm?

973
00:44:23,360 --> 00:44:25,050
中文字幕
Oh, god, now we have to do this again.

974
00:44:25,050 --> 00:44:27,260
中文字幕
How do we do it with dorm?

975
00:44:27,260 --> 00:44:30,260
中文字幕
What's the longest length of a dorm or a house on campus?

976
00:44:30,260 --> 00:44:32,590
中文字幕


977
00:44:32,590 --> 00:44:36,720
中文字幕
I'm, like, OK ,, house maybe.

978
00:44:36,720 --> 00:44:40,450
中文字幕
But honestly, at some point, it doesn't matter too much.

979
00:44:40,450 --> 00:44:42,000
中文字幕
But being consistent is what matters.

980
00:44:42,000 --> 00:44:42,960
中文字幕
It's a matter of style.

981
00:44:42,960 --> 00:44:44,100
中文字幕
It's a matter of design.

982
00:44:44,100 --> 00:44:46,950
中文字幕
At some point, you don't have to nitpick every little value.

983
00:44:46,950 --> 00:44:49,030
中文字幕
But you should probably pick some reasonable value

984
00:44:49,030 --> 00:44:52,330
中文字幕
that you could justify to a roommate or to a colleague or to a teaching fellow.

985
00:44:52,330 --> 00:44:55,410
中文字幕
And then say this feels like enough without it being actually excessive.

986
00:44:55,410 --> 00:44:58,470
中文字幕
And there's one last thing I'm going to do here is just

987
00:44:58,470 --> 00:45:00,120
中文字幕
end my thought with a semicolon.

988
00:45:00,120 --> 00:45:01,640
中文字幕
I apologize, they're back.

989
00:45:01,640 --> 00:45:05,240
中文字幕
But at the end of my start here, if I haven't made any typographical errors,

990
00:45:05,240 --> 00:45:06,660
中文字幕
and I'm going to go and hit Enter.

991
00:45:06,660 --> 00:45:08,100
中文字幕
Nothing seems to happen.

992
00:45:08,100 --> 00:45:11,550
中文字幕
And ironically, in CS50, in programming, nothing happening

993
00:45:11,550 --> 00:45:14,640
中文字幕
is usually a good thing because it means no errors have happened.

994
00:45:14,640 --> 00:45:17,130
中文字幕
If, in SQLite, I type schema, I can actually

995
00:45:17,130 --> 00:45:20,880
中文字幕
just see a regurgitation of the table I just created.

996
00:45:20,880 --> 00:45:23,940
中文字幕
But more importantly, I can start to insert data into this.

997
00:45:23,940 --> 00:45:25,950
中文字幕
Now unfortunately, it's not yet graphical.

998
00:45:25,950 --> 00:45:29,370
中文字幕
But if I want to insert data into this, I can do this.

999
00:45:29,370 --> 00:45:33,090
中文字幕
INSERT INTO registrants-- well, what do you want to insert?

1000
00:45:33,090 --> 00:45:36,390
中文字幕
I want to go ahead and insert an ID, a name, and a dorm.

1001
00:45:36,390 --> 00:45:37,530
中文字幕
Well, with what values?

1002
00:45:37,530 --> 00:45:38,940
中文字幕
Well, with these values--

1003
00:45:38,940 --> 00:45:41,250
中文字幕
the ID will be-- the first registrant will be 1.

1004
00:45:41,250 --> 00:45:43,260
中文字幕
The first one to register will be Brian.

1005
00:45:43,260 --> 00:45:44,950
中文字幕
And his dorm, Brian where did you live?

1006
00:45:44,950 --> 00:45:46,560
中文字幕
BRIAN: Out on Pennypacker.

1007
00:45:46,560 --> 00:45:48,290
中文字幕
Pennypacker.

1008
00:45:48,290 --> 00:45:48,840
中文字幕
So it's good.

1009
00:45:48,840 --> 00:45:51,240
中文字幕
That might be close to four timer too lengthwise.

1010
00:45:51,240 --> 00:45:53,160
中文字幕
So I'm going to go ahead and do this.

1011
00:45:53,160 --> 00:45:55,680
中文字幕
Here is an example of a SQL statement.

1012
00:45:55,680 --> 00:45:58,380
中文字幕
CREATE TABLE is one verb or expression you can use.

1013
00:45:58,380 --> 00:45:59,910
中文字幕
INSERT INTO is another.

1014
00:45:59,910 --> 00:46:03,930
中文字幕
You specify the name of the table, the fields of the table, and then values.

1015
00:46:03,930 --> 00:46:07,680
中文字幕
And now I'm capitalizing just to make clear what are SQL commands

1016
00:46:07,680 --> 00:46:11,170
中文字幕
and what are actually just words I, the human developer, chose.

1017
00:46:11,170 --> 00:46:12,300
中文字幕
But it's just a convention.

1018
00:46:12,300 --> 00:46:15,510
中文字幕
These uppercase words could probably be lower case in most contexts too.

1019
00:46:15,510 --> 00:46:18,000
中文字幕
But it helps things, I think visually, to distinguish.

1020
00:46:18,000 --> 00:46:19,100
中文字幕
Now I go ahead and enter.

1021
00:46:19,100 --> 00:46:20,150
中文字幕
Nothing seemed to happen.

1022
00:46:20,150 --> 00:46:21,400
中文字幕
That's probably a good thing.

1023
00:46:21,400 --> 00:46:23,070
中文字幕
Let's go ahead and register one other person.

1024
00:46:23,070 --> 00:46:24,480
中文字幕
I'll be the second registrant.

1025
00:46:24,480 --> 00:46:27,450
中文字幕
So maybe David from Matthews.

1026
00:46:27,450 --> 00:46:29,670
中文字幕
And so Matthews here, Enter.

1027
00:46:29,670 --> 00:46:32,940
中文字幕
And now, if I want to select all of the students in the database,

1028
00:46:32,940 --> 00:46:35,460
中文字幕
I can go ahead and say SELECT FROM--

1029
00:46:35,460 --> 00:46:36,390
中文字幕
or you know what?

1030
00:46:36,390 --> 00:46:39,900
中文字幕
Let's select everything as denoted in many languages by star,

1031
00:46:39,900 --> 00:46:44,010
中文字幕
from registrants semicolon enter, and there we have it.

1032
00:46:44,010 --> 00:46:46,780
中文字幕
It's kind of a tiny super simple, lightweight database.

1033
00:46:46,780 --> 00:46:49,380
中文字幕
But there are my rows and columns much like Excel

1034
00:46:49,380 --> 00:46:51,690
中文字幕
and Google Spreadsheets would lay them out for me.

1035
00:46:51,690 --> 00:46:53,350
中文字幕
But it gets better than this.

1036
00:46:53,350 --> 00:46:57,390
中文字幕
Suppose I want to search this database for all of the students who

1037
00:46:57,390 --> 00:46:58,740
中文字幕
registered for Matthews.

1038
00:46:58,740 --> 00:47:00,660
中文字幕
And suppose that time passes and more students

1039
00:47:00,660 --> 00:47:02,370
中文字幕
actually register for forshims.

1040
00:47:02,370 --> 00:47:03,930
中文字幕
I can actually filter this data.

1041
00:47:03,930 --> 00:47:09,510
中文字幕
I can do something like SELECT star FROM registrants WHERE

1042
00:47:09,510 --> 00:47:12,810
中文字幕
dorm equals quote unquote, "Matthews."

1043
00:47:12,810 --> 00:47:16,610
中文字幕
And so I can filter it, hit Enter, and now I get back just one row.

1044
00:47:16,610 --> 00:47:18,360
中文字幕
And if your should mind starts to wander--

1045
00:47:18,360 --> 00:47:21,120
中文字幕
wow, if I could introduce Python or JavaScript into this,

1046
00:47:21,120 --> 00:47:22,170
中文字幕
you know what I could do?

1047
00:47:22,170 --> 00:47:25,650
中文字幕
I could probably get back, not this and this ASCII-based table, this text

1048
00:47:25,650 --> 00:47:26,250
中文字幕
table.

1049
00:47:26,250 --> 00:47:28,960
中文字幕
Maybe I could get back an actual list of rows

1050
00:47:28,960 --> 00:47:31,090
中文字幕
so that I can actually do something with that data.

1051
00:47:31,090 --> 00:47:32,470
中文字幕
And that's, indeed, where we're going with this.

1052
00:47:32,470 --> 00:47:34,950
中文字幕
So if I want to select someone else, I could do hmm--

1053
00:47:34,950 --> 00:47:39,600
中文字幕
maybe SELECT just the NAME from registrants

1054
00:47:39,600 --> 00:47:41,850
中文字幕
where dorm equals "Mathews."

1055
00:47:41,850 --> 00:47:43,980
中文字幕
If I only care about knowing who registered,

1056
00:47:43,980 --> 00:47:46,420
中文字幕
I could do that and whittle it down to even less data.

1057
00:47:46,420 --> 00:47:49,230
中文字幕
So already, in just these few commands, I

1058
00:47:49,230 --> 00:47:52,140
中文字幕
can express so much more functionality than you could with a CSV.

1059
00:47:52,140 --> 00:47:54,510
中文字幕
To do this and CSV, you would have had to write all

1060
00:47:54,510 --> 00:47:56,700
中文字幕
of these lines of Python code yourself.

1061
00:47:56,700 --> 00:47:57,690
中文字幕
What if Brian moved?

1062
00:47:57,690 --> 00:47:59,610
中文字幕
So Brian really didn't like the Union dorm,

1063
00:47:59,610 --> 00:48:02,280
中文字幕
so we're going to go ahead and UPDATE registrants

1064
00:48:02,280 --> 00:48:05,220
中文字幕
and SET dorm equal to-- where do want to move to?

1065
00:48:05,220 --> 00:48:05,850
中文字幕
BRIAN: Canaday.

1066
00:48:05,850 --> 00:48:09,210
中文字幕
"Canaday" WHERE--

1067
00:48:09,210 --> 00:48:10,830
中文字幕
I could do this a few ways.

1068
00:48:10,830 --> 00:48:11,710
中文字幕
What's your instinct?

1069
00:48:11,710 --> 00:48:14,160
中文字幕
How could I identify Brian and only Brian so--

1070
00:48:14,160 --> 00:48:16,890
中文字幕
I don't want to move to Canaday.

1071
00:48:16,890 --> 00:48:18,120
中文字幕
How do we move just Brian?

1072
00:48:19,490 --> 00:48:20,370
中文字幕
Yeah.

1073
00:48:20,370 --> 00:48:24,930
中文字幕
Maybe we could WHERE name equals quote unquote "Brian" and Enter.

1074
00:48:24,930 --> 00:48:27,540
中文字幕
I like this, but someone find fault with this if you could.

1075
00:48:27,540 --> 00:48:28,690
中文字幕
Two Brians.

1076
00:48:28,690 --> 00:48:31,440
中文字幕
If there are two Brians, we're moving both of them

1077
00:48:31,440 --> 00:48:32,350
中文字幕
are all three of them.

1078
00:48:32,350 --> 00:48:35,120
中文字幕
So maybe better, honestly, would be to say, mm,

1079
00:48:35,120 --> 00:48:37,680
中文字幕
let's just say where the ID equals 1.

1080
00:48:37,680 --> 00:48:40,810
中文字幕
Now, of course, I need to know Brian's Harvard ID number or whatnot.

1081
00:48:40,810 --> 00:48:42,360
中文字幕
But this is going to be more precise.

1082
00:48:42,360 --> 00:48:45,690
中文字幕
Because the supposition here is that the leftmost column or ID

1083
00:48:45,690 --> 00:48:50,520
中文字幕
field, by human convention, should be unique so that it uniquely identifies

1084
00:48:50,520 --> 00:48:52,710
中文字幕
the room so we can have as many Brians as we want,

1085
00:48:52,710 --> 00:48:54,210
中文字幕
but we're not going to confuse them.

1086
00:48:54,210 --> 00:48:56,950
中文字幕
If I go ahead and hit Enter now, nothing seems to happen.

1087
00:48:56,950 --> 00:49:02,280
中文字幕
But if I select star from registrants again, and hit Enter, notice now,

1088
00:49:02,280 --> 00:49:04,580
中文字幕
Brian has indeed been moved to Canaday.

1089
00:49:04,580 --> 00:49:06,000
中文字幕
So there are so many other things.

1090
00:49:06,000 --> 00:49:06,870
中文字幕
Brian, you know what?

1091
00:49:06,870 --> 00:49:09,060
中文字幕
You're not very good at sports the team concluded.

1092
00:49:09,060 --> 00:49:13,890
中文字幕
So delete from registrants WHERE ID equals 1.

1093
00:49:13,890 --> 00:49:18,810
中文字幕
And now if we select star from registrants, we have just me left.

1094
00:49:18,810 --> 00:49:20,130
中文字幕
But Brian is gone as well.

1095
00:49:20,130 --> 00:49:23,800
中文字幕
So we have the ability to INSERT, to SELECT, to UPDATE, and DELETE,

1096
00:49:23,800 --> 00:49:25,920
中文字幕
and CREATE, all the while filtering.

1097
00:49:25,920 --> 00:49:28,710
中文字幕
And we've only just scratched the surface here of what's possible.

1098
00:49:28,710 --> 00:49:31,670
中文字幕
Because it turns out, we can store so much data in these databases.

1099
00:49:31,670 --> 00:49:33,530
中文字幕
All of our students, all of our faculty--

1100
00:49:33,530 --> 00:49:35,330
中文字幕
if you're a company, you can start to store

1101
00:49:35,330 --> 00:49:37,970
中文字幕
all of the products in your database, all of the orders,

1102
00:49:37,970 --> 00:49:39,050
中文字幕
all of your customers.

1103
00:49:39,050 --> 00:49:42,210
中文字幕
But as soon as you start going down that road, well, gee, what's a customer?

1104
00:49:42,210 --> 00:49:46,400
中文字幕
Customers have names and ID numbers and maybe email addresses

1105
00:49:46,400 --> 00:49:47,390
中文字幕
and postal addresses.

1106
00:49:47,390 --> 00:49:48,860
中文字幕
Those are going to get messy-- phone numbers,

1107
00:49:48,860 --> 00:49:50,600
中文字幕
which are kind of like integers, but not quite.

1108
00:49:50,600 --> 00:49:53,030
中文字幕
So there are so many questions we still need to answer.

1109
00:49:53,030 --> 00:49:55,940
中文字幕
But feels like it's time for some fruit and some muffins.

1110
00:49:55,940 --> 00:49:58,390
中文字幕
So why don't we go ahead and take a five-minute break, turn on some music.

1111
00:49:58,390 --> 00:50:00,010
中文字幕
If parents need to depart, that's fine.

1112
00:50:00,010 --> 00:50:02,540
中文字幕
And we'll see you back here in five or so minutes.

1113
00:50:02,540 --> 00:50:03,320
中文字幕
All right.

1114
00:50:03,320 --> 00:50:03,950
中文字幕
So we're back.

1115
00:50:03,950 --> 00:50:06,710
中文字幕
And where we left off was exactly here using

1116
00:50:06,710 --> 00:50:10,880
中文字幕
SQLite3, which is the version 3 of the SQLite command, which

1117
00:50:10,880 --> 00:50:14,360
中文字幕
is just a text-based interface to the technology

1118
00:50:14,360 --> 00:50:16,280
中文字幕
that we should think of as SQLite.

1119
00:50:16,280 --> 00:50:18,980
中文字幕
SQLite is interesting and it's lightweight in the sense

1120
00:50:18,980 --> 00:50:22,010
中文字幕
that it's not a server, it's not fancy software that you have to run.

1121
00:50:22,010 --> 00:50:25,850
中文字幕
It literally stores all of your data in a file, but that, by convention,

1122
00:50:25,850 --> 00:50:28,970
中文字幕
ends in .db or maybe even .sqlite.

1123
00:50:28,970 --> 00:50:31,570
中文字幕
But it's just a binary file, 0s and 1s.

1124
00:50:31,570 --> 00:50:34,320
中文字幕
It's not text that you can open with Excel or something like that.

1125
00:50:34,320 --> 00:50:35,510
中文字幕
So it's not a CSV.

1126
00:50:35,510 --> 00:50:37,110
中文字幕
So it's stored on file.

1127
00:50:37,110 --> 00:50:40,520
中文字幕
This means that you don't need particular experience

1128
00:50:40,520 --> 00:50:41,990
中文字幕
with setting up a database server.

1129
00:50:41,990 --> 00:50:45,590
中文字幕
You don't need memory and software to actually run on the computer.

1130
00:50:45,590 --> 00:50:47,990
中文字幕
You can store everything locally, but you do pay a price.

1131
00:50:47,990 --> 00:50:51,440
中文字幕
Because recall from our past discussions, disks are slow.

1132
00:50:51,440 --> 00:50:53,390
中文字幕
And if you're storing your data on the disk,

1133
00:50:53,390 --> 00:50:56,240
中文字幕
it's not going to be nearly as fast as storing it only in RAM.

1134
00:50:56,240 --> 00:50:59,180
中文字幕
And that's why these other technologies like Postgres and MySQL,

1135
00:50:59,180 --> 00:51:03,080
中文字幕
and Microsoft Access, and SQL Server, and Oracle exist.

1136
00:51:03,080 --> 00:51:07,040
中文字幕
Those are fancier products where someone literally does double-click an icon

1137
00:51:07,040 --> 00:51:09,260
中文字幕
or run a command that runs a program that

1138
00:51:09,260 --> 00:51:13,400
中文字幕
stays running in the computer's memory and gives you even better performance.

1139
00:51:13,400 --> 00:51:15,650
中文字幕
But for our purposes, pedagogically SQLite is handy.

1140
00:51:15,650 --> 00:51:18,320
中文字幕
But we're still going to ask the questions about data types

1141
00:51:18,320 --> 00:51:22,610
中文字幕
because SQLite does support fancier data types like those in Postgres

1142
00:51:22,610 --> 00:51:26,960
中文字幕
and SQL Server, MySQL, and Oracle, and those are the lower-case ones

1143
00:51:26,960 --> 00:51:28,160
中文字幕
we introduced a bit ago.

1144
00:51:28,160 --> 00:51:30,290
中文字幕
But honestly, this is going to get tedious quickly.

1145
00:51:30,290 --> 00:51:34,520
中文字幕
Even I rarely remember exactly the right syntax when creating tables,

1146
00:51:34,520 --> 00:51:36,230
中文字幕
the order in which everything has to go.

1147
00:51:36,230 --> 00:51:39,110
中文字幕
So I tend to use a Graphical User Interface, or GUI myself.

1148
00:51:39,110 --> 00:51:40,700
中文字幕
And there are lots of tools out there.

1149
00:51:40,700 --> 00:51:43,150
中文字幕
But we've built one that's free and open source the CS50

1150
00:51:43,150 --> 00:51:47,670
中文字幕
IDE that just makes it a little easier to edit your SQL tables.

1151
00:51:47,670 --> 00:51:52,430
中文字幕
So I'm going to go ahead and Exit out of SQLite.

1152
00:51:52,430 --> 00:51:54,280
中文字幕
And I'm going to go ahead over here.

1153
00:51:54,280 --> 00:51:56,240
中文字幕
And you'll notice that we have all of the files

1154
00:51:56,240 --> 00:51:59,870
中文字幕
from today including, most recently, froshims.db.

1155
00:51:59,870 --> 00:52:02,810
中文字幕
That is the file I created with SQLite3.

1156
00:52:02,810 --> 00:52:05,750
中文字幕
But if you double-click it when using CS50 IDE,

1157
00:52:05,750 --> 00:52:08,930
中文字幕
it's actually going to open a program that's called phpLiteAdmin.

1158
00:52:08,930 --> 00:52:11,420
中文字幕
It happens to be written in another language called PHP,

1159
00:52:11,420 --> 00:52:14,750
中文字幕
has nothing to do with databases, just the name of the product here.

1160
00:52:14,750 --> 00:52:18,620
中文字幕
But it's a tool that, using pretty simple HTML tables,

1161
00:52:18,620 --> 00:52:22,840
中文字幕
just gives us a graphical user interface over the exact same functionality.

1162
00:52:22,840 --> 00:52:24,800
中文字幕
And personally, I just find this easier to use.

1163
00:52:24,800 --> 00:52:26,550
中文字幕
And pedagogically, it's going to be better

1164
00:52:26,550 --> 00:52:30,480
中文字幕
because it's going to show us the available data types for our table.

1165
00:52:30,480 --> 00:52:33,620
中文字幕
So for instance, notice here-- there's a lot going on the screen.

1166
00:52:33,620 --> 00:52:36,560
中文字幕
But a lot of this is just uninteresting details.

1167
00:52:36,560 --> 00:52:39,830
中文字幕
But notice here, I see a table called registrants.

1168
00:52:39,830 --> 00:52:41,150
中文字幕
And then I can browse it.

1169
00:52:41,150 --> 00:52:42,320
中文字幕
I can see its structure.

1170
00:52:42,320 --> 00:52:45,040
中文字幕
I can execute manual SQL by typing it in.

1171
00:52:45,040 --> 00:52:46,040
中文字幕
I can search it, insert.

1172
00:52:46,040 --> 00:52:47,510
中文字幕
I can do bunches of things to it.

1173
00:52:47,510 --> 00:52:50,180
中文字幕
And that's why this graphical user interface is just convenient.

1174
00:52:50,180 --> 00:52:51,880
中文字幕
Let me go ahead and click on registrants.

1175
00:52:51,880 --> 00:52:57,050
中文字幕
And by default, you'll see these tabs now, Browse, Structure, SQL, and then

1176
00:52:57,050 --> 00:52:58,040
中文字幕
a bunch of others.

1177
00:52:58,040 --> 00:52:59,360
中文字幕
And notice over here.

1178
00:52:59,360 --> 00:53:02,630
中文字幕
You'll see the one row and the one registrant who actually remains.

1179
00:53:02,630 --> 00:53:07,910
中文字幕
Because when we last left off, we removed Brian forcibly from the team.

1180
00:53:07,910 --> 00:53:10,220
中文字幕
So suppose I want to go ahead and add more rows just

1181
00:53:10,220 --> 00:53:11,360
中文字幕
for the sake of discussion.

1182
00:53:11,360 --> 00:53:12,680
中文字幕
I can just do it manually here.

1183
00:53:12,680 --> 00:53:16,400
中文字幕
I can go in here and I can say, let's say the third player

1184
00:53:16,400 --> 00:53:19,670
中文字幕
is going to be Veronica.

1185
00:53:19,670 --> 00:53:22,860
中文字幕
I think she was also in Matthews so I can just type that in here.

1186
00:53:22,860 --> 00:53:24,680
中文字幕
And I can just go ahead and click Insert.

1187
00:53:24,680 --> 00:53:28,310
中文字幕
But what's nice about phpLiteAdmin is that it will not only

1188
00:53:28,310 --> 00:53:31,130
中文字幕
insert the rows for you, it will show you

1189
00:53:31,130 --> 00:53:34,590
中文字幕
the SQLite code with which you could have done it yourself.

1190
00:53:34,590 --> 00:53:37,550
中文字幕
So it's a nice visual reinforcement of that exact same command.

1191
00:53:37,550 --> 00:53:40,130
中文字幕
And you'll notice they use double quotes instead of my single quotes before.

1192
00:53:40,130 --> 00:53:42,210
中文字幕
They're sometimes interchangeable, but not always.

1193
00:53:42,210 --> 00:53:44,780
中文字幕
So it's a wonderful way of just learning how you can actually

1194
00:53:44,780 --> 00:53:48,110
中文字幕
do this with the right SQL code so you're not oversimplifying it

1195
00:53:48,110 --> 00:53:48,860
中文字幕
with the GUI.

1196
00:53:48,860 --> 00:53:49,280
中文字幕
But you know what?

1197
00:53:49,280 --> 00:53:49,970
中文字幕
Let's do this.

1198
00:53:49,970 --> 00:53:52,970
中文字幕
I'm going to go ahead and start over because I

1199
00:53:52,970 --> 00:53:54,660
中文字幕
want to make some better decisions.

1200
00:53:54,660 --> 00:53:57,400
中文字幕
I'm going to go ahead and, literally, right-click or Control-click

1201
00:53:57,400 --> 00:53:59,030
中文字幕
this, delete froshims.db.

1202
00:53:59,030 --> 00:54:01,230
中文字幕
And let's actually start this from scratch.

1203
00:54:01,230 --> 00:54:03,850
中文字幕
Now previously when I did this, I could have,

1204
00:54:03,850 --> 00:54:08,900
中文字幕
in my Terminal window, gone ahead and done SQLite3 and then, what was it?

1205
00:54:08,900 --> 00:54:11,510
中文字幕
Froshims.db and created the file.

1206
00:54:11,510 --> 00:54:13,760
中文字幕
For now, I'm going to actually just go ahead and touch

1207
00:54:13,760 --> 00:54:16,280
中文字幕
a file called that name, which is a simple command that

1208
00:54:16,280 --> 00:54:18,680
中文字幕
just literally creates it, but puts nothing in it,

1209
00:54:18,680 --> 00:54:20,100
中文字幕
just so I have an empty file.

1210
00:54:20,100 --> 00:54:21,900
中文字幕
And you'll see that it just popped up again

1211
00:54:21,900 --> 00:54:23,600
中文字幕
on the left-hand side, which is handy.

1212
00:54:23,600 --> 00:54:27,110
中文字幕
And now I can double-click this version of it, which has nothing in it yet.

1213
00:54:27,110 --> 00:54:28,460
中文字幕
And I'm back to phpLiteAdmin.

1214
00:54:28,460 --> 00:54:30,800
中文字幕
But notice no table in database.

1215
00:54:30,800 --> 00:54:33,230
中文字幕
So let's start to ask some of the harder questions

1216
00:54:33,230 --> 00:54:36,860
中文字幕
as to actually how to create data in a database.

1217
00:54:36,860 --> 00:54:40,490
中文字幕
So let me go ahead and go to this field here-- create

1218
00:54:40,490 --> 00:54:42,680
中文字幕
new table on database froshims.

1219
00:54:42,680 --> 00:54:44,570
中文字幕
I'll go ahead and call it registrants again.

1220
00:54:44,570 --> 00:54:46,640
中文字幕
But how many fields?

1221
00:54:46,640 --> 00:54:50,990
中文字幕
So let's go with ID, name, and dorm, what else?

1222
00:54:50,990 --> 00:54:53,080
中文字幕
Email I heard earlier.

1223
00:54:53,080 --> 00:54:54,510
中文字幕
Age I heard earlier.

1224
00:54:54,510 --> 00:54:55,970
中文字幕
Sports you want to be in.

1225
00:54:55,970 --> 00:54:56,240
中文字幕
Sorry.

1226
00:54:56,240 --> 00:54:57,770
中文字幕
So sports you want-- excuse me--

1227
00:54:57,770 --> 00:54:59,080
中文字幕
sports you want to be in.

1228
00:54:59,080 --> 00:55:01,040
中文字幕
OK. six fields, six fields, let's go with that.

1229
00:55:01,040 --> 00:55:01,910
中文字幕
So it's, actually, you know what?

1230
00:55:01,910 --> 00:55:02,450
中文字幕
Seven fields.

1231
00:55:02,450 --> 00:55:03,930
中文字幕
I want phone numbers too this time.

1232
00:55:03,930 --> 00:55:05,390
中文字幕
So let me go ahead and click Go.

1233
00:55:05,390 --> 00:55:08,730
中文字幕
And now you'll see just a GUI way of prompting you for all the answers

1234
00:55:08,730 --> 00:55:10,070
中文字幕
to the same questions as before.

1235
00:55:10,070 --> 00:55:10,940
中文字幕
And maybe this is clearer.

1236
00:55:10,940 --> 00:55:11,690
中文字幕
Maybe it's not.

1237
00:55:11,690 --> 00:55:14,270
中文字幕
But just no alternative to the memorizing

1238
00:55:14,270 --> 00:55:15,920
中文字幕
exactly what the commands need to be.

1239
00:55:15,920 --> 00:55:19,580
中文字幕
So top to bottom, here are all of the fields I need to decide on.

1240
00:55:19,580 --> 00:55:22,530
中文字幕
Ironically, the fields is just a synonym for columns.

1241
00:55:22,530 --> 00:55:24,620
中文字幕
And yet my columns are currently laid out in rows,

1242
00:55:24,620 --> 00:55:26,580
中文字幕
but that's just a UI issue.

1243
00:55:26,580 --> 00:55:28,130
中文字幕
So let me go ahead and decide.

1244
00:55:28,130 --> 00:55:32,360
中文字幕
By convention, my first field is almost always ID or probably should be.

1245
00:55:32,360 --> 00:55:35,290
中文字幕
And we'll see why this is powerful and just a little bit.

1246
00:55:35,290 --> 00:55:38,340
中文字幕
The data type for that, by convention, should be integer,

1247
00:55:38,340 --> 00:55:40,340
中文字幕
unless you've got a lot of data like a Facebook,

1248
00:55:40,340 --> 00:55:42,180
中文字幕
and then big int might make more sense.

1249
00:55:42,180 --> 00:55:43,970
中文字幕
But notice this Dropdown actually gives us

1250
00:55:43,970 --> 00:55:47,070
中文字幕
a nice menu of options just as before.

1251
00:55:47,070 --> 00:55:50,060
中文字幕
And you'll see in gray text, the category,

1252
00:55:50,060 --> 00:55:53,690
中文字幕
or in fancy terms, the affinity of these various types in SQLite

1253
00:55:53,690 --> 00:55:55,940
中文字幕
and in lower case black words here, you'll

1254
00:55:55,940 --> 00:56:00,160
中文字幕
see the actual data type supported by big popular databases like Postgres

1255
00:56:00,160 --> 00:56:02,290
中文字幕
that you might want to use for your final projects.

1256
00:56:02,290 --> 00:56:03,990
中文字幕
In fact, we're introducing these with eye

1257
00:56:03,990 --> 00:56:07,490
中文字幕
toward your using these for final projects in the cloud, not in CS50 IDE,

1258
00:56:07,490 --> 00:56:09,200
中文字幕
but actually getting your own domain name

1259
00:56:09,200 --> 00:56:11,930
中文字幕
and putting your website, if you do a web app, out there.

1260
00:56:11,930 --> 00:56:13,730
中文字幕
So here, we have all of my available types.

1261
00:56:13,730 --> 00:56:17,700
中文字幕
And under Integer, I'm going to go ahead and literally choose Integer for my ID.

1262
00:56:17,700 --> 00:56:18,200
中文字幕
All right.

1263
00:56:18,200 --> 00:56:19,700
中文字幕
Next, go ahead and Zoom Out.

1264
00:56:19,700 --> 00:56:21,540
中文字幕
Let me go ahead and choose a student's name.

1265
00:56:21,540 --> 00:56:24,750
中文字幕
Before did we do did we decide on char or varchar?

1266
00:56:24,750 --> 00:56:25,640
中文字幕
varchar.

1267
00:56:25,640 --> 00:56:26,840
中文字幕
OK, varchar, and what size?

1268
00:56:26,840 --> 00:56:28,700
中文字幕
255.

1269
00:56:28,700 --> 00:56:31,230
中文字幕
So the user interface here just allows me to type it in.

1270
00:56:31,230 --> 00:56:34,220
中文字幕
So the syntax is a little different because it's a GUI, but 255.

1271
00:56:34,220 --> 00:56:35,290
中文字幕
But you know what?

1272
00:56:35,290 --> 00:56:37,100
中文字幕
The last field was dorm.

1273
00:56:37,100 --> 00:56:39,020
中文字幕
That too, I think we said varchar.

1274
00:56:39,020 --> 00:56:40,130
中文字幕
So let me choose that.

1275
00:56:40,130 --> 00:56:42,300
中文字幕
And 255, though, this one's a little more debatable.

1276
00:56:42,300 --> 00:56:45,260
中文字幕
I'm not sure what the right number is, so in the absence of clarity,

1277
00:56:45,260 --> 00:56:48,690
中文字幕
I'm just going to standardize on some same value without being too wasteful.

1278
00:56:48,690 --> 00:56:51,440
中文字幕
But notice there are a few questions here that we haven't come to.

1279
00:56:51,440 --> 00:56:54,070
中文字幕
But our perfect segue earlier hinted at this.

1280
00:56:54,070 --> 00:56:56,240
中文字幕
It turns out, you need to make a few other decisions

1281
00:56:56,240 --> 00:56:57,920
中文字幕
when designing a database.

1282
00:56:57,920 --> 00:57:01,070
中文字幕
If you know in advance that one of your fields

1283
00:57:01,070 --> 00:57:04,350
中文字幕
is the primary piece of data to uniquely identify users,

1284
00:57:04,350 --> 00:57:06,350
中文字幕
that's what's going to be called a primary key--

1285
00:57:06,350 --> 00:57:11,300
中文字幕
the column or fields that, guaranteed, is going to identify users uniquely.

1286
00:57:11,300 --> 00:57:14,720
中文字幕
So if you've got two Brians, each of them is going to have its own ID.

1287
00:57:14,720 --> 00:57:18,860
中文字幕
That therefore, is your primary key, not the name field Brian.

1288
00:57:18,860 --> 00:57:22,130
中文字幕
So I'm going to tell the database, this is the primary key.

1289
00:57:22,130 --> 00:57:24,590
中文字幕
And it's going to help me keep track of that uniqueness.

1290
00:57:24,590 --> 00:57:26,750
中文字幕
Moreover, this is a fancy feature.

1291
00:57:26,750 --> 00:57:29,150
中文字幕
Before, I was manually and very arbitrarily

1292
00:57:29,150 --> 00:57:32,720
中文字幕
saying Brian will be number 1, I'll be number 2, Veronica will be number 3.

1293
00:57:32,720 --> 00:57:33,480
中文字幕
That's tedious.

1294
00:57:33,480 --> 00:57:35,940
中文字幕
Like, computer should be able to solve that problem for me.

1295
00:57:35,940 --> 00:57:38,210
中文字幕
I don't want to think about who is idea number what.

1296
00:57:38,210 --> 00:57:39,930
中文字幕
You can auto-increment the field.

1297
00:57:39,930 --> 00:57:43,130
中文字幕
So if I actually check this box, SQL for me

1298
00:57:43,130 --> 00:57:46,520
中文字幕
will just plus-plus, plus-plus the idea field every time

1299
00:57:46,520 --> 00:57:48,230
中文字幕
I insert a new name and a new dorm.

1300
00:57:48,230 --> 00:57:50,930
中文字幕
I don't have to even bother specifying an ID anymore.

1301
00:57:50,930 --> 00:57:53,180
中文字幕
Now there's another column here, not null,

1302
00:57:53,180 --> 00:57:55,790
中文字幕
where you can specify this column should never be null.

1303
00:57:55,790 --> 00:57:59,090
中文字幕
And this is important because, if you're building a website that has important

1304
00:57:59,090 --> 00:58:01,010
中文字幕
data that you must have from the users-- like,

1305
00:58:01,010 --> 00:58:04,970
中文字幕
your app won't work without the user's username or their password

1306
00:58:04,970 --> 00:58:06,180
中文字幕
or their email address--

1307
00:58:06,180 --> 00:58:07,460
中文字幕
you can say not null.

1308
00:58:07,460 --> 00:58:10,520
中文字幕
And your database will ensure that you can't even

1309
00:58:10,520 --> 00:58:15,200
中文字幕
insert a row into this database unless you give it a value for that field.

1310
00:58:15,200 --> 00:58:17,140
中文字幕
So it helps you protect you against yourself.

1311
00:58:17,140 --> 00:58:18,890
中文字幕
Because you could certainly implement that

1312
00:58:18,890 --> 00:58:20,930
中文字幕
logically in Python or any language.

1313
00:58:20,930 --> 00:58:24,950
中文字幕
But the database is a final gauntlet as well.

1314
00:58:24,950 --> 00:58:27,230
中文字幕
A default value doesn't really make sense here.

1315
00:58:27,230 --> 00:58:30,170
中文字幕
But for certain types of fields, you can say, database,

1316
00:58:30,170 --> 00:58:33,700
中文字幕
insert the current time or the current date for me?

1317
00:58:33,700 --> 00:58:34,910
中文字幕
Now, why might you want that?

1318
00:58:34,910 --> 00:58:39,000
中文字幕
Why date and time by default?

1319
00:58:39,000 --> 00:58:40,040
中文字幕
Why might that be useful?

1320
00:58:40,040 --> 00:58:41,670
中文字幕
When the account was created?

1321
00:58:41,670 --> 00:58:44,250
中文字幕
When the account was created, when they bought

1322
00:58:44,250 --> 00:58:46,720
中文字幕
a foo, when they shipped a bar-- any number of reasons.

1323
00:58:46,720 --> 00:58:48,550
中文字幕
You might just want to know, what is the time right now?

1324
00:58:48,550 --> 00:58:49,750
中文字幕
But you don't have to write code for that.

1325
00:58:49,750 --> 00:58:51,750
中文字幕
The database can answer those questions for you.

1326
00:58:51,750 --> 00:58:55,360
中文字幕
So just so much more functionality than we got, of course, with CSVs alone.

1327
00:58:55,360 --> 00:58:57,760
中文字幕
So name, should it be a primary key?

1328
00:58:57,760 --> 00:58:58,380
中文字幕
No.

1329
00:58:58,380 --> 00:59:00,010
中文字幕
Otherwise, we couldn't have two Brians.

1330
00:59:00,010 --> 00:59:02,620
中文字幕
And generally, your primary key will be one field, though,

1331
00:59:02,620 --> 00:59:05,320
中文字幕
theoretically you could make joint columns if you wanted.

1332
00:59:05,320 --> 00:59:06,870
中文字幕
But generally, it'll be a single one.

1333
00:59:06,870 --> 00:59:10,140
中文字幕
Should we auto-increment Brian-- so it's, like, well--

1334
00:59:10,140 --> 00:59:14,030
中文字幕
Brian28, or Brian2, Brian3, and so forth?

1335
00:59:14,030 --> 00:59:14,530
中文字幕
No.

1336
00:59:14,530 --> 00:59:15,610
中文字幕
Doesn't really make sense.

1337
00:59:15,610 --> 00:59:16,570
中文字幕
Not null?

1338
00:59:16,570 --> 00:59:17,290
中文字幕
Probably.

1339
00:59:17,290 --> 00:59:19,890
中文字幕
I want all of the freshmen's names so that we

1340
00:59:19,890 --> 00:59:21,310
中文字幕
know who is signing up for sports.

1341
00:59:21,310 --> 00:59:22,200
中文字幕
And dorm?

1342
00:59:22,200 --> 00:59:22,960
中文字幕
Yeah, not null.

1343
00:59:22,960 --> 00:59:24,700
中文字幕
But oh, corner case--

1344
00:59:24,700 --> 00:59:27,580
中文字幕
can anyone think of a corner case where dorm maybe

1345
00:59:27,580 --> 00:59:28,880
中文字幕
should kind of sort of be null?

1346
00:59:28,880 --> 00:59:29,590
中文字幕
They're off-campus.

1347
00:59:29,590 --> 00:59:31,330
中文字幕
They commute, they're off-campus--

1348
00:59:31,330 --> 00:59:32,440
中文字幕
it's not many students.

1349
00:59:32,440 --> 00:59:35,570
中文字幕
But if you have 1%, 5% of students living off-campus,

1350
00:59:35,570 --> 00:59:37,150
中文字幕
this is a design question now.

1351
00:59:37,150 --> 00:59:39,740
中文字幕
And all of us have probably visited some website

1352
00:59:39,740 --> 00:59:42,040
中文字幕
where you just can't fill out the form in the right way

1353
00:59:42,040 --> 00:59:44,700
中文字幕
because you don't fit their mold or their expectations.

1354
00:59:44,700 --> 00:59:46,790
中文字幕
And that's just because of a poor design decision.

1355
00:59:46,790 --> 00:59:49,070
中文字幕
So let's allow it to be null just in case.

1356
00:59:49,070 --> 00:59:49,660
中文字幕
Now what else?

1357
00:59:49,660 --> 00:59:52,600
中文字幕
We said a phone number was when I proposed.

1358
00:59:52,600 --> 00:59:55,760
中文字幕
Gosh, there's no phone number type.

1359
00:59:55,760 --> 00:59:58,800
中文字幕
So what do you want to go with?

1360
00:59:58,800 --> 01:00:00,120
中文字幕


1361
01:00:00,120 --> 01:00:01,200
中文字幕
I'm sorry?

1362
01:00:01,200 --> 01:00:02,870
中文字幕
 varchar.

1363
01:00:02,870 --> 01:00:03,870
中文字幕
Varchar.

1364
01:00:03,870 --> 01:00:04,360
中文字幕
OK.

1365
01:00:04,360 --> 01:00:08,340
中文字幕
So we can pick varchar and maybe use 10 or so for 10 digits in the US,

1366
01:00:08,340 --> 01:00:12,910
中文字幕
at least, though, maybe, like, 12 with the dashes, or 13 with the parentheses,

1367
01:00:12,910 --> 01:00:13,410
中文字幕
or--

1368
01:00:13,410 --> 01:00:14,150
中文字幕


1369
01:00:14,150 --> 01:00:14,650
中文字幕
What's that?

1370
01:00:14,650 --> 01:00:15,900
中文字幕


1371
01:00:15,900 --> 01:00:17,280
中文字幕
I hear murmuring.

1372
01:00:17,280 --> 01:00:17,840
中文字幕
Sorry.

1373
01:00:17,840 --> 01:00:18,900
中文字幕
A small int.

1374
01:00:18,900 --> 01:00:20,880
中文字幕
A small int and just treated

1375
01:00:20,880 --> 01:00:22,770
中文字幕
as a number, maybe that could work too.

1376
01:00:22,770 --> 01:00:24,000
中文字幕
Another alternative?

1377
01:00:24,000 --> 01:00:24,660
中文字幕
Anything else?

1378
01:00:24,660 --> 01:00:27,750
中文字幕
 precision.

1379
01:00:27,750 --> 01:00:29,910
中文字幕
Precision-- so a specific number.

1380
01:00:29,910 --> 01:00:34,010
中文字幕
 make sure you have the correct number.

1381
01:00:34,010 --> 01:00:34,890
中文字幕
Good.

1382
01:00:34,890 --> 01:00:35,970
中文字幕
So not a bad instinct.

1383
01:00:35,970 --> 01:00:39,310
中文字幕
But it turns out with the numeric data type, where you specify scale

1384
01:00:39,310 --> 01:00:41,730
中文字幕
as it's called-- the total number of digits in precision--

1385
01:00:41,730 --> 01:00:44,820
中文字幕
that's generally meant for floating point values-- so

1386
01:00:44,820 --> 01:00:46,440
中文字幕
real numbers with decimal points.

1387
01:00:46,440 --> 01:00:49,650
中文字幕
Because even though you're specifying a max limit,

1388
01:00:49,650 --> 01:00:51,470
中文字幕
you don't require that many digits.

1389
01:00:51,470 --> 01:00:52,200
中文字幕
It's just a max.

1390
01:00:52,200 --> 01:00:52,700
中文字幕
Yeah?

1391
01:00:52,700 --> 01:00:56,510
中文字幕
I would think that giving it--

1392
01:00:56,510 --> 01:00:59,960
中文字幕
doing some sort of chars would be a bad design because then you

1393
01:00:59,960 --> 01:01:03,250
中文字幕
can enter nonnumerical values.

1394
01:01:03,250 --> 01:01:04,490
中文字幕
Yeah.

1395
01:01:04,490 --> 01:01:07,280
中文字幕
We can kind of find fault, I think, both of these ideas, though both of them

1396
01:01:07,280 --> 01:01:07,900
中文字幕
are reasonable.

1397
01:01:07,900 --> 01:01:10,220
中文字幕
If you allow for char or varchar, I could

1398
01:01:10,220 --> 01:01:13,630
中文字幕
type in like foo or bar or baz and not a number.

1399
01:01:13,630 --> 01:01:14,930
中文字幕
So maybe we should go with int.

1400
01:01:14,930 --> 01:01:16,970
中文字幕
But can someone think of a counter-example to why

1401
01:01:16,970 --> 01:01:17,990
中文字幕
you shouldn't use integer?

1402
01:01:17,990 --> 01:01:20,280
中文字幕
It's got a variable length to it, doesn't it?

1403
01:01:20,280 --> 01:01:21,920
中文字幕
So you'd get whatever number--

1404
01:01:21,920 --> 01:01:23,260
中文字幕
Variable length.

1405
01:01:23,260 --> 01:01:25,980
中文字幕
But if we actually do the math, maybe 65,

1406
01:01:25,980 --> 01:01:27,530
中文字幕
maybe-- there are enough bytes there.

1407
01:01:27,530 --> 01:01:30,400
中文字幕
We could use a big int, and that gives us a really long phone number.

1408
01:01:30,400 --> 01:01:32,130
中文字幕
So there's probably a reasonable max.

1409
01:01:32,130 --> 01:01:32,630
中文字幕
Yeah?

1410
01:01:32,630 --> 01:01:38,030
中文字幕
Let's say  in between  integer.

1411
01:01:38,030 --> 01:01:39,700
中文字幕
Hyphens and parentheses.

1412
01:01:39,700 --> 01:01:41,650
中文字幕
We have to decide, do we want to support those?

1413
01:01:41,650 --> 01:01:45,290
中文字幕
And honestly, all of us are perhaps a little US-centric right now, most of us

1414
01:01:45,290 --> 01:01:45,790
中文字幕
here.

1415
01:01:45,790 --> 01:01:49,150
中文字幕
But when you make a local call in some zones, like, you type 0 first.

1416
01:01:49,150 --> 01:01:51,080
中文字幕
And some human might type 0 as their number.

1417
01:01:51,080 --> 01:01:53,410
中文字幕
But what's going to happen if you type 0 into an integer field?

1418
01:01:53,410 --> 01:01:56,120
中文字幕
You're going to ignore it.

1419
01:01:56,120 --> 01:01:57,370
中文字幕
So now there's that corner case.

1420
01:01:57,370 --> 01:01:57,940
中文字幕
So dammit.

1421
01:01:57,940 --> 01:02:00,310
中文字幕
Like, there's no way to solve this problem it would seem.

1422
01:02:00,310 --> 01:02:01,630
中文字幕
So what's best?

1423
01:02:01,630 --> 01:02:04,150
中文字幕
We have to make a compromise and just accept

1424
01:02:04,150 --> 01:02:06,220
中文字幕
that we have to solve this with code.

1425
01:02:06,220 --> 01:02:07,810
中文字幕
Varchar.

1426
01:02:07,810 --> 01:02:08,810
中文字幕
Varchar?

1427
01:02:08,810 --> 01:02:09,300
中文字幕
All right.

1428
01:02:09,300 --> 01:02:10,740
中文字幕
So varchars or char.

1429
01:02:10,740 --> 01:02:11,240
中文字幕
All right.

1430
01:02:11,240 --> 01:02:13,220
中文字幕
So maybe let's simplify the problem.

1431
01:02:13,220 --> 01:02:16,190
中文字幕
No one from outside the US can take freshman intramural sports.

1432
01:02:16,190 --> 01:02:17,330
中文字幕
That simplifies the world.

1433
01:02:17,330 --> 01:02:20,950
中文字幕
Because if we only support US phone numbers, now we can say 10 digits.

1434
01:02:20,950 --> 01:02:22,160
中文字幕
And if we say, you know what?

1435
01:02:22,160 --> 01:02:24,240
中文字幕
I don't care about the hyphens or the parentheses.

1436
01:02:24,240 --> 01:02:27,830
中文字幕
I can use code, JavaScript or Python, to throw away the syntax.

1437
01:02:27,830 --> 01:02:29,810
中文字幕
And I can just store 10 digits.

1438
01:02:29,810 --> 01:02:32,060
中文字幕
Maybe char 10 is sufficient--

1439
01:02:32,060 --> 01:02:35,680
中文字幕
3 for the area code, then the rest of the number, the all seven digits

1440
01:02:35,680 --> 01:02:36,180
中文字幕
thereof.

1441
01:02:36,180 --> 01:02:37,800
中文字幕
But you could find fault with this too.

1442
01:02:37,800 --> 01:02:41,510
中文字幕
And we're really alienating that international population on campus.

1443
01:02:41,510 --> 01:02:43,810
中文字幕
But again, these are just non-obvious design decisions.

1444
01:02:43,810 --> 01:02:45,770
中文字幕
And so here we are, at the end of the semester.

1445
01:02:45,770 --> 01:02:47,060
中文字幕
We don't always have good answers.

1446
01:02:47,060 --> 01:02:48,680
中文字幕
And reasonable people will disagree.

1447
01:02:48,680 --> 01:02:52,490
中文字幕
But let me simplify our assumptions and just do US numbers, 10 digits,

1448
01:02:52,490 --> 01:02:56,270
中文字幕
and trust that I will use code in Python or some other language

1449
01:02:56,270 --> 01:02:59,400
中文字幕
to throw away the syntax, the punctuation and whatnot

1450
01:02:59,400 --> 01:03:01,190
中文字幕
of parentheses and hyphens.

1451
01:03:01,190 --> 01:03:04,230
中文字幕
And I'll make sure the human hasn't typed in any letters of the alphabet.

1452
01:03:04,230 --> 01:03:05,150
中文字幕
I can do that in code.

1453
01:03:05,150 --> 01:03:10,410
中文字幕
And you know we can do that even in JavaScript when a human submits a form.

1454
01:03:10,410 --> 01:03:12,860
中文字幕
We'll leave for the end, sports, what was it sports--

1455
01:03:12,860 --> 01:03:15,480
中文字幕
Sports they want to do.

1456
01:03:15,480 --> 01:03:17,360
中文字幕
Sports they might want to do.

1457
01:03:17,360 --> 01:03:20,240
中文字幕
So this is a good example of, you shouldn't really have spaces

1458
01:03:20,240 --> 01:03:25,010
中文字幕
in your field name, so the convention would be sports_they_ really or might

1459
01:03:25,010 --> 01:03:28,300
中文字幕
or let's just call it sports in this case.

1460
01:03:28,300 --> 01:03:29,300
中文字幕
We'll come back to that.

1461
01:03:29,300 --> 01:03:31,660
中文字幕
I think there were two other ideas we had.

1462
01:03:31,660 --> 01:03:32,620
中文字幕
Phone number.

1463
01:03:32,620 --> 01:03:33,980
中文字幕
Email.

1464
01:03:33,980 --> 01:03:34,330
中文字幕
OK.

1465
01:03:34,330 --> 01:03:35,090
中文字幕
Email is a good one.

1466
01:03:35,090 --> 01:03:36,080
中文字幕
What should that one be?

1467
01:03:36,080 --> 01:03:38,480
中文字幕
There's no email type, unfortunately, even though there

1468
01:03:38,480 --> 01:03:41,490
中文字幕
is an HTML, an input type for email.

1469
01:03:41,490 --> 01:03:42,240
中文字幕
Varchar.

1470
01:03:42,240 --> 01:03:42,710
中文字幕
What's that?

1471
01:03:42,710 --> 01:03:43,790
中文字幕
Varchar.

1472
01:03:43,790 --> 01:03:46,540
中文字幕
Yeah, I feel like we probably need a varchar here.

1473
01:03:46,540 --> 01:03:50,480
中文字幕
But here, a little non-obvious, what is the longest email address in the world?

1474
01:03:50,480 --> 01:03:52,550
中文字幕
Maybe it's Nick's?

1475
01:03:52,550 --> 01:03:53,830
中文字幕
So I don't know.

1476
01:03:53,830 --> 01:03:56,210
中文字幕
But let's pick a reasonable upper bound that we can maybe

1477
01:03:56,210 --> 01:03:58,230
中文字幕
be comfortable with as a group.

1478
01:03:58,230 --> 01:04:00,380
中文字幕
And let's see-- anything else here?

1479
01:04:00,380 --> 01:04:00,880
中文字幕
No?

1480
01:04:00,880 --> 01:04:01,220
中文字幕
OK.

1481
01:04:01,220 --> 01:04:02,420
中文字幕
And was there one more field?

1482
01:04:02,420 --> 01:04:03,740
中文字幕
Graduation year.

1483
01:04:03,740 --> 01:04:04,650
中文字幕
Oh, grad-- oh, age.

1484
01:04:04,650 --> 01:04:05,400
中文字幕
Let's go with age.

1485
01:04:05,400 --> 01:04:08,220
中文字幕
So age-- finally, something simple.

1486
01:04:08,220 --> 01:04:09,620
中文字幕
What you want this to be?

1487
01:04:09,620 --> 01:04:10,460
中文字幕
Small int.

1488
01:04:10,460 --> 01:04:13,070
中文字幕
Small int, right.

1489
01:04:13,070 --> 01:04:18,580
中文字幕
We will not support people older than 65,535 years old.

1490
01:04:18,580 --> 01:04:20,620
中文字幕
Someone want to find fault with this idea though?

1491
01:04:20,620 --> 01:04:25,750
中文字幕


1492
01:04:25,750 --> 01:04:29,050
中文字幕
I would argue, there's no one right answer to any of these.

1493
01:04:29,050 --> 01:04:30,850
中文字幕
You need month.

1494
01:04:30,850 --> 01:04:32,230
中文字幕
Month--

1495
01:04:32,230 --> 01:04:33,680
中文字幕
oh, it depends.

1496
01:04:33,680 --> 01:04:34,390
中文字幕
Do we want month?

1497
01:04:34,390 --> 01:04:35,020
中文字幕
Yeah.

1498
01:04:35,020 --> 01:04:36,950
中文字幕
We might need .

1499
01:04:36,950 --> 01:04:41,780
中文字幕
--then you need the date, the year.

1500
01:04:41,780 --> 01:04:44,080
中文字幕
So you're assuming we want birth date.

1501
01:04:44,080 --> 01:04:45,520
中文字幕
I think I've called it age.

1502
01:04:45,520 --> 01:04:46,920
中文字幕
So maybe that's the problem.

1503
01:04:46,920 --> 01:04:49,090
中文字幕
Like, if it's age, small int's fine.

1504
01:04:49,090 --> 01:04:51,140
中文字幕
Like, you can be 0 years old or 65,000 years old.

1505
01:04:51,140 --> 01:04:52,020
中文字幕
We have a good range.

1506
01:04:52,020 --> 01:04:54,280
中文字幕
All about the age, date of birth.

1507
01:04:54,280 --> 01:04:56,200
中文字幕
If it's age, I think we're OK.

1508
01:04:56,200 --> 01:04:59,890
中文字幕
But I think you allude to a good point, which is, why would we maybe want

1509
01:04:59,890 --> 01:05:02,510
中文字幕
to store birth date and not age?

1510
01:05:02,510 --> 01:05:03,390
中文字幕


1511
01:05:03,390 --> 01:05:04,260
中文字幕
Yeah.

1512
01:05:04,260 --> 01:05:06,460
中文字幕
The damn thing's always changing, otherwise, right?

1513
01:05:06,460 --> 01:05:09,190
中文字幕
Like, I'm going to have to update my database tomorrow and then

1514
01:05:09,190 --> 01:05:12,250
中文字幕
the next day, let alone every hour or every minute just

1515
01:05:12,250 --> 01:05:14,200
中文字幕
because my users' ages are changing.

1516
01:05:14,200 --> 01:05:15,580
中文字幕
Like, that seems silly.

1517
01:05:15,580 --> 01:05:17,530
中文字幕
Let me, instead, fix a value--

1518
01:05:17,530 --> 01:05:20,470
中文字幕
so do something like birth date.

1519
01:05:20,470 --> 01:05:23,020
中文字幕
Birth date-- maybe specify not an int.

1520
01:05:23,020 --> 01:05:25,780
中文字幕
But let's actually use the date field.

1521
01:05:25,780 --> 01:05:28,210
中文字幕
We could store time if we really care what time they

1522
01:05:28,210 --> 01:05:29,910
中文字幕
were born on a certain day.

1523
01:05:29,910 --> 01:05:34,300
中文字幕
But here, I can say date is going to be a little better because, now I

1524
01:05:34,300 --> 01:05:37,480
中文字幕
know in Python, JavaScript, even C, I can do a little bit of math.

1525
01:05:37,480 --> 01:05:40,520
中文字幕
And if I know they were born on such and such a day and month and year,

1526
01:05:40,520 --> 01:05:43,810
中文字幕
well, I'll just subtract that from the current day, month, and year

1527
01:05:43,810 --> 01:05:47,020
中文字幕
and figure out how many days or years old they are-- so a better design

1528
01:05:47,020 --> 01:05:48,620
中文字幕
decision there perhaps.

1529
01:05:48,620 --> 01:05:50,590
中文字幕
But we do have to standardize the format.

1530
01:05:50,590 --> 01:05:53,080
中文字幕
We can't just allow people from the US and Europe and Asia

1531
01:05:53,080 --> 01:05:54,780
中文字幕
to all kind of choose their own formats.

1532
01:05:54,780 --> 01:05:57,880
中文字幕
SQL standardizes this-- year, year, year, year dash

1533
01:05:57,880 --> 01:05:59,920
中文字幕
month, month dash day, day.

1534
01:05:59,920 --> 01:06:02,480
中文字幕
And that's the value of having these data types again.

1535
01:06:02,480 --> 01:06:02,980
中文字幕
All right.

1536
01:06:02,980 --> 01:06:05,270
中文字幕
So how about sports-- the last one?

1537
01:06:05,270 --> 01:06:06,770
中文字幕
Varchar.

1538
01:06:06,770 --> 01:06:08,530
中文字幕
Varchar, all right.

1539
01:06:08,530 --> 01:06:12,240
中文字幕
What's the longest number of words in the sport?

1540
01:06:12,240 --> 01:06:14,950
中文字幕
I didn't say might want to do, so I could get up there,

1541
01:06:14,950 --> 01:06:17,780
中文字幕
but 255 probably makes the most sense.

1542
01:06:17,780 --> 01:06:20,610
中文字幕
Maybe unless they're very athletic.

1543
01:06:20,610 --> 01:06:21,370
中文字幕
Yeah.

1544
01:06:21,370 --> 01:06:22,510
中文字幕
Here too I don't know.

1545
01:06:22,510 --> 01:06:24,910
中文字幕
But just for the sake of opening up possibilities,

1546
01:06:24,910 --> 01:06:27,790
中文字幕
when you think the human might be a little expository

1547
01:06:27,790 --> 01:06:30,130
中文字幕
and actually write a paragraph of all the sports they're

1548
01:06:30,130 --> 01:06:33,810
中文字幕
involved in or whatnot or even bigger than a paragraph, text is even bigger.

1549
01:06:33,810 --> 01:06:35,440
中文字幕
Sports, this probably isn't compelling.

1550
01:06:35,440 --> 01:06:36,790
中文字幕
And I'll change it back to varchar.

1551
01:06:36,790 --> 01:06:38,830
中文字幕
But if someone is typing in their college essay

1552
01:06:38,830 --> 01:06:41,640
中文字幕
into the Common Application, or if you're

1553
01:06:41,640 --> 01:06:44,890
中文字幕
asking people to paste their resumes, or the like, you might want to use text.

1554
01:06:44,890 --> 01:06:47,050
中文字幕
Because I have no idea how many words someone's going to have.

1555
01:06:47,050 --> 01:06:49,030
中文字幕
Text allows you to store even more data.

1556
01:06:49,030 --> 01:06:50,710
中文字幕
But it stores it a little differently.

1557
01:06:50,710 --> 01:06:53,770
中文字幕
It tends to store it not in the column, but using pointers.

1558
01:06:53,770 --> 01:06:56,380
中文字幕
If you recall from a few weeks back, it uses the equivalent

1559
01:06:56,380 --> 01:06:59,710
中文字幕
of that to store it over there, which takes a little more time to get to.

1560
01:06:59,710 --> 01:07:01,420
中文字幕
So again, there's just a trade-off here.

1561
01:07:01,420 --> 01:07:04,350
中文字幕
So we could do varchar 255--

1562
01:07:04,350 --> 01:07:05,440
中文字幕
makes me a little nervous.

1563
01:07:05,440 --> 01:07:08,130
中文字幕
So I'm going to go with another common value.

1564
01:07:08,130 --> 01:07:11,450
中文字幕
1024, it's a power of 2, but there's no one right answer here.

1565
01:07:11,450 --> 01:07:14,080
中文字幕
But these are the non-obvious design decisions we have to make.

1566
01:07:14,080 --> 01:07:16,650
中文字幕
If I didn't make any mistakes here, I'm going

1567
01:07:16,650 --> 01:07:18,820
中文字幕
to go ahead and click Create, and whoo--

1568
01:07:18,820 --> 01:07:20,360
中文字幕
table has been created.

1569
01:07:20,360 --> 01:07:23,660
中文字幕
You can even see now all of the data that's been created there.

1570
01:07:23,660 --> 01:07:28,780
中文字幕
And voila, if I go back to froshims, and I go back to the registrants table,

1571
01:07:28,780 --> 01:07:31,120
中文字幕
not only can I browse it-- there's nothing in there yet.

1572
01:07:31,120 --> 01:07:34,450
中文字幕
I can look at the structure and actually see all of those same values

1573
01:07:34,450 --> 01:07:36,070
中文字幕
and edit some of them like renaming.

1574
01:07:36,070 --> 01:07:37,900
中文字幕
But you can't completely mutilate it.

1575
01:07:37,900 --> 01:07:40,750
中文字幕
You might have to start over if you make too many changes.

1576
01:07:40,750 --> 01:07:41,500
中文字幕
All right.

1577
01:07:41,500 --> 01:07:42,790
中文字幕
Any questions then about this?

1578
01:07:42,790 --> 01:07:43,290
中文字幕
Yeah?

1579
01:07:43,290 --> 01:07:46,700
中文字幕
Why do you use 1024 instead of 1023?

1580
01:07:46,700 --> 01:07:49,060
中文字幕
Oh, why do I use 1024 instead of 1023.

1581
01:07:49,060 --> 01:07:52,990
中文字幕
Typically, when you choose a ma-- oh, convention.

1582
01:07:52,990 --> 01:07:54,330
中文字幕
I can't justify this.

1583
01:07:54,330 --> 01:07:58,060
中文字幕
255 was the max because I think one of the bites was reserved for some value,

1584
01:07:58,060 --> 01:07:59,310
中文字幕
historically.

1585
01:07:59,310 --> 01:08:00,700
中文字幕
But that's not really the case.

1586
01:08:00,700 --> 01:08:03,580
中文字幕
That bound has been lifted, and no good reason.

1587
01:08:03,580 --> 01:08:07,130
中文字幕
You could have used 255.

1588
01:08:07,130 --> 01:08:08,420
中文字幕
Nowadays, yes.

1589
01:08:08,420 --> 01:08:11,130
中文字幕
Years ago, 255 was an actual limit.

1590
01:08:11,130 --> 01:08:12,050
中文字幕
And so it got adopted.

1591
01:08:12,050 --> 01:08:12,800
中文字幕
Now, I don't know.

1592
01:08:12,800 --> 01:08:14,300
中文字幕
I just pick powers of 2 often.

1593
01:08:14,300 --> 01:08:18,770
中文字幕
And then at my next go-to would be 2048, 4096, and so forth, just because.

1594
01:08:18,770 --> 01:08:19,660
中文字幕
Yeah?

1595
01:08:19,660 --> 01:08:22,380
中文字幕
What's the difference between varchar and char?

1596
01:08:22,380 --> 01:08:22,830
中文字幕
Varchar--

1597
01:08:22,830 --> 01:08:24,850
中文字幕
What's the difference between varchar and char?

1598
01:08:24,850 --> 01:08:30,310
中文字幕
Char uses a fixed number of bytes no matter how many of them you are using,

1599
01:08:30,310 --> 01:08:33,020
中文字幕
the advantage of which is your columns, conceptually,

1600
01:08:33,020 --> 01:08:36,520
中文字幕
are perfectly straight on both the left edge and the right edge, which

1601
01:08:36,520 --> 01:08:39,890
中文字幕
means you have random access because every cell is some fixed

1602
01:08:39,890 --> 01:08:41,680
中文字幕
number of bytes from the rest.

1603
01:08:41,680 --> 01:08:44,720
中文字幕
Varchar user a ragged array, as it's called,

1604
01:08:44,720 --> 01:08:48,540
中文字幕
where one side, the right-hand side is shorter or longer in different cells.

1605
01:08:48,540 --> 01:08:51,050
中文字幕
So there's only a maximum length on each of those cells.

1606
01:08:51,050 --> 01:08:53,020
中文字幕
But searching it can be slower as a result

1607
01:08:53,020 --> 01:08:55,100
中文字幕
because you can't just jump to cell to cell.

1608
01:08:55,100 --> 01:08:57,760
中文字幕
You have to follow the lengths of those things.

1609
01:08:57,760 --> 01:08:58,640
中文字幕
That's the trade-off.

1610
01:08:58,640 --> 01:08:59,240
中文字幕
Yeah?

1611
01:08:59,240 --> 01:09:02,650
中文字幕
If you  education, how do you add it?

1612
01:09:02,650 --> 01:09:05,930
中文字幕
Oh, if I wanted to add an education field now and modify

1613
01:09:05,930 --> 01:09:06,740
中文字幕
the table--

1614
01:09:06,740 --> 01:09:09,970
中文字幕
if you realize too late, oh, darn, like, I need to actually add something

1615
01:09:09,970 --> 01:09:13,710
中文字幕
to this, in the GUI tool, we can add 1 fields to the end of the table,

1616
01:09:13,710 --> 01:09:14,210
中文字幕
literally.

1617
01:09:14,210 --> 01:09:15,210
中文字幕
So let's do that.

1618
01:09:15,210 --> 01:09:16,460
中文字幕
Let me go ahead and click Go.

1619
01:09:16,460 --> 01:09:19,060
中文字幕
I'll be prompted with a similar form, but smaller.

1620
01:09:19,060 --> 01:09:21,680
中文字幕
I can go ahead and type in something like education.

1621
01:09:21,680 --> 01:09:24,680
中文字幕
Let me propose this is varchar, maybe 255,

1622
01:09:24,680 --> 01:09:26,300
中文字幕
though we could have that debate too.

1623
01:09:26,300 --> 01:09:29,180
中文字幕
I'm going to go ahead and say add fields.

1624
01:09:29,180 --> 01:09:32,160
中文字幕
And now notice that the table has been altered successfully.

1625
01:09:32,160 --> 01:09:34,370
中文字幕
It actually, for whatever reason, it's not showing me

1626
01:09:34,370 --> 01:09:35,910
中文字幕
the code for that particular command.

1627
01:09:35,910 --> 01:09:39,100
中文字幕
But there is literally an ALTER command in SQL

1628
01:09:39,100 --> 01:09:40,520
中文字幕
that would allow you to change it.

1629
01:09:40,520 --> 01:09:42,740
中文字幕
And if I go back to the structure now, you'll

1630
01:09:42,740 --> 01:09:46,590
中文字幕
see that I have another column called education shown ironically

1631
01:09:46,590 --> 01:09:47,330
中文字幕
here as a row.

1632
01:09:47,330 --> 01:09:47,910
中文字幕
Yeah?

1633
01:09:47,910 --> 01:09:50,520
中文字幕
Does the order of the columns matter?

1634
01:09:50,520 --> 01:09:51,020
中文字幕
Good question.

1635
01:09:51,020 --> 01:09:52,600
中文字幕
Does the order of the columns matter?

1636
01:09:52,600 --> 01:09:54,200
中文字幕
Fundamentally, no.

1637
01:09:54,200 --> 01:09:56,780
中文字幕
By convention, you would typically put the ID first.

1638
01:09:56,780 --> 01:10:00,110
中文字幕
And then I, personally, by design, put the most important fields

1639
01:10:00,110 --> 01:10:02,000
中文字幕
next like name feels like the right choice,

1640
01:10:02,000 --> 01:10:04,250
中文字幕
maybe email feels like the right choice, though, I clearly thought

1641
01:10:04,250 --> 01:10:05,870
中文字幕
of it a little too late this time.

1642
01:10:05,870 --> 01:10:09,890
中文字幕
It's not easy in SQLite to reorder things, but in other databases you can.

1643
01:10:09,890 --> 01:10:12,200
中文字幕
So there, it's more of a human convention.

1644
01:10:12,200 --> 01:10:12,700
中文字幕
Yeah?

1645
01:10:12,700 --> 01:10:16,080
中文字幕
Is it convention to have one single primary key,

1646
01:10:16,080 --> 01:10:17,210
中文字幕
or can you have multiple?

1647
01:10:17,210 --> 01:10:17,720
中文字幕
Good question.

1648
01:10:17,720 --> 01:10:20,880
中文字幕
Is it a convention to have one single primary key, or can you have multiple?

1649
01:10:20,880 --> 01:10:22,910
中文字幕
By definition, you can only have one.

1650
01:10:22,910 --> 01:10:26,670
中文字幕
But that primary key can span multiple columns.

1651
01:10:26,670 --> 01:10:29,480
中文字幕
So we haven't seen a use case for this yet.

1652
01:10:29,480 --> 01:10:31,940
中文字幕
But there are scenarios in which you would want to say,

1653
01:10:31,940 --> 01:10:35,580
中文字幕
I want to guarantee that these two columns together are unique,

1654
01:10:35,580 --> 01:10:37,520
中文字幕
but not each individual one unique.

1655
01:10:37,520 --> 01:10:39,830
中文字幕
But we won't encounter that just yet.

1656
01:10:39,830 --> 01:10:41,330
中文字幕
Other questions, yeah?

1657
01:10:41,330 --> 01:10:43,250
中文字幕
What if you had added education

1658
01:10:43,250 --> 01:10:46,450
中文字幕
after you had started the database, and that was a not null field?

1659
01:10:46,450 --> 01:10:48,000
中文字幕
Really good question.

1660
01:10:48,000 --> 01:10:52,880
中文字幕
What if you had added education after you already had real data in there,

1661
01:10:52,880 --> 01:10:55,040
中文字幕
but you specified not null, which is problematic.

1662
01:10:55,040 --> 01:10:57,860
中文字幕
Because what is the educational backgrounds of the previous people?

1663
01:10:57,860 --> 01:11:00,270
中文字幕
Typically, what the database would do is either reject it,

1664
01:11:00,270 --> 01:11:02,660
中文字幕
or it would just put the "empty string," quote unquote.

1665
01:11:02,660 --> 01:11:05,360
中文字幕
So it's not technically null, but there's nothing actually there.

1666
01:11:05,360 --> 01:11:07,250
中文字幕
It's just a string of length 0.

1667
01:11:07,250 --> 01:11:08,610
中文字幕
Really good question.

1668
01:11:08,610 --> 01:11:09,110
中文字幕
All right.

1669
01:11:09,110 --> 01:11:12,080
中文字幕
So what can we now do that's a little more powerful about this?

1670
01:11:12,080 --> 01:11:15,030
中文字幕
Well, let me go ahead and quickly insert some data here.

1671
01:11:15,030 --> 01:11:16,490
中文字幕
I'm going to keep most of it blank.

1672
01:11:16,490 --> 01:11:16,970
中文字幕
But you know what?

1673
01:11:16,970 --> 01:11:18,510
中文字幕
I'm not even going to bother with ID.

1674
01:11:18,510 --> 01:11:20,520
中文字幕
Brian you're back on the team.

1675
01:11:20,520 --> 01:11:22,820
中文字幕
Let's go ahead and insert Brian.

1676
01:11:22,820 --> 01:11:25,040
中文字幕
Let's go ahead now into registrants again.

1677
01:11:25,040 --> 01:11:28,250
中文字幕
Let's go ahead and add Veronica again.

1678
01:11:28,250 --> 01:11:30,380
中文字幕
So I'm just inserting a few rows manually.

1679
01:11:30,380 --> 01:11:33,250
中文字幕
And again, notice it's executing all of this for me

1680
01:11:33,250 --> 01:11:35,000
中文字幕
without me having to bother typing it out.

1681
01:11:35,000 --> 01:11:36,200
中文字幕
But I absolutely could.

1682
01:11:36,200 --> 01:11:38,450
中文字幕
In fact, just for good measure, let's do one manually.

1683
01:11:38,450 --> 01:11:41,780
中文字幕
If I click the SQL tab, notice that I get a default suggestion here.

1684
01:11:41,780 --> 01:11:44,210
中文字幕
That is the syntax with which you can select everything.

1685
01:11:44,210 --> 01:11:47,810
中文字幕
Or I can just type INSERT into registrants.

1686
01:11:47,810 --> 01:11:49,680
中文字幕
But now, if I only want to insert a name,

1687
01:11:49,680 --> 01:11:51,440
中文字幕
I don't have to do all of the columns.

1688
01:11:51,440 --> 01:11:54,650
中文字幕
I can just say go ahead and insert here, Erin, for instance,

1689
01:11:54,650 --> 01:11:57,650
中文字幕
semicolon, zoom out and click Go.

1690
01:11:57,650 --> 01:11:58,970
中文字幕
That seemed to work.

1691
01:11:58,970 --> 01:12:01,980
中文字幕
If I go back to browse now, Erin is in there as well.

1692
01:12:01,980 --> 01:12:03,230
中文字幕
But you'll see the difference.

1693
01:12:03,230 --> 01:12:06,230
中文字幕
The query that's being generated automatically by the GUI

1694
01:12:06,230 --> 01:12:11,070
中文字幕
was lazily just inserting quote unquote, the so-called empty string of length 0.

1695
01:12:11,070 --> 01:12:13,880
中文字幕
I, by omitting even mention of those columns,

1696
01:12:13,880 --> 01:12:15,470
中文字幕
was deliberately inserting null.

1697
01:12:15,470 --> 01:12:17,760
中文字幕
So frankly, my database is getting a little messy here.

1698
01:12:17,760 --> 01:12:21,380
中文字幕
So you generally don't use phpLiteAdmin or a GUI to insert data.

1699
01:12:21,380 --> 01:12:23,510
中文字幕
You might use it to conveniently create your tables

1700
01:12:23,510 --> 01:12:25,250
中文字幕
and get your application ready.

1701
01:12:25,250 --> 01:12:27,210
中文字幕
But then you're going to write code ultimately.

1702
01:12:27,210 --> 01:12:28,490
中文字幕
And that's the direction we're going.

1703
01:12:28,490 --> 01:12:30,200
中文字幕
And I'm going to go ahead and insert one more person.

1704
01:12:30,200 --> 01:12:32,900
中文字幕
Oh, I forgot I'm not on the team at all because we started over.

1705
01:12:32,900 --> 01:12:36,020
中文字幕
So let me put myself back on the team, David.

1706
01:12:36,020 --> 01:12:38,780
中文字幕
And let me go ahead and click INSERT, go back to registrants,

1707
01:12:38,780 --> 01:12:40,070
中文字幕
and now you'll see there are four of us.

1708
01:12:40,070 --> 01:12:42,770
中文字幕
My ID changed because they've been inserted in different orders.

1709
01:12:42,770 --> 01:12:46,720
中文字幕
But notice all of the auto incrementing has been happening magically for me.

1710
01:12:46,720 --> 01:12:49,310
中文字幕
And that's useful because I don't have to even think about it.

1711
01:12:49,310 --> 01:12:51,360
中文字幕
And who cares what my ID is.

1712
01:12:51,360 --> 01:12:55,470
中文字幕
I just need to have, in many cases, in a database, a unique ID.

1713
01:12:55,470 --> 01:12:58,850
中文字幕
So now let's actually write a little bit of code, right?

1714
01:12:58,850 --> 01:13:00,800
中文字幕
Thus far we haven't done anything useful.

1715
01:13:00,800 --> 01:13:03,140
中文字幕
We've shown you this black and white window in which you

1716
01:13:03,140 --> 01:13:05,330
中文字幕
can select in certain update data.

1717
01:13:05,330 --> 01:13:08,240
中文字幕
But that doesn't really solve any problems we know about yet.

1718
01:13:08,240 --> 01:13:10,000
中文字幕
We have this graphical web-based interface

1719
01:13:10,000 --> 01:13:13,210
中文字幕
via which you can create tables and add data, but who cares?

1720
01:13:13,210 --> 01:13:14,800
中文字幕
We're trying to solve actual problems.

1721
01:13:14,800 --> 01:13:16,590
中文字幕
And the problems of late have been to build

1722
01:13:16,590 --> 01:13:19,450
中文字幕
software that would solve any number of human problems

1723
01:13:19,450 --> 01:13:21,580
中文字幕
like serving users and showing the results

1724
01:13:21,580 --> 01:13:23,170
中文字幕
or finding similarities in documents.

1725
01:13:23,170 --> 01:13:26,230
中文字幕
So suppose the problem at hand now is to actually build

1726
01:13:26,230 --> 01:13:30,220
中文字幕
something like the froshims website and let students register and then see

1727
01:13:30,220 --> 01:13:31,190
中文字幕
who is registered.

1728
01:13:31,190 --> 01:13:34,930
中文字幕
Well, back in my day, I fairly lazily, for lack of technical know-how,

1729
01:13:34,930 --> 01:13:38,830
中文字幕
just emailed the registrations to the proctor or the RA who was

1730
01:13:38,830 --> 01:13:40,840
中文字幕
managing the intramural sports program.

1731
01:13:40,840 --> 01:13:43,750
中文字幕
But I-- they later started putting it in CSV files.

1732
01:13:43,750 --> 01:13:48,460
中文字幕
Suppose now, version 3, 20 years later, I want to store in an actual database.

1733
01:13:48,460 --> 01:13:51,310
中文字幕
How can I actually do that and then see the results?

1734
01:13:51,310 --> 01:13:54,820
中文字幕
Well, let me go into the IDE again and open up,

1735
01:13:54,820 --> 01:14:00,640
中文字幕
for instance, a New File that I'll go ahead and call lecture.py.

1736
01:14:00,640 --> 01:14:04,240
中文字幕
And suppose I just want to write a simple Python program via which

1737
01:14:04,240 --> 01:14:06,340
中文字幕
to select data from a database.

1738
01:14:06,340 --> 01:14:08,240
中文字幕
So it turns out I can do a few things here.

1739
01:14:08,240 --> 01:14:14,110
中文字幕
First of all, let me go ahead and do, let's say, from CS50,

1740
01:14:14,110 --> 01:14:17,470
中文字幕
I previously have done things like import get_string and get_int

1741
01:14:17,470 --> 01:14:18,370
中文字幕
and so forth.

1742
01:14:18,370 --> 01:14:22,390
中文字幕
It turns out that the CS50 library for Python also supports SQL.

1743
01:14:22,390 --> 01:14:24,430
中文字幕
And it's going to give us a function called

1744
01:14:24,430 --> 01:14:29,960
中文字幕
EXECUTE that will let you execute any SQL command, but in Python code.

1745
01:14:29,960 --> 01:14:33,370
中文字幕
So instead of pulling up SQLite3 via my own hands

1746
01:14:33,370 --> 01:14:36,320
中文字幕
or going to a graphical user interface phpLiteAdmin,

1747
01:14:36,320 --> 01:14:40,300
中文字幕
I can write code that talks directly to froshims.db,

1748
01:14:40,300 --> 01:14:44,540
中文字幕
and eliminate all of those tools altogether, and just now write code.

1749
01:14:44,540 --> 01:14:45,400
中文字幕
So how do I do this?

1750
01:14:45,400 --> 01:14:47,690
中文字幕
I'm going to declare a variable called db for Database.

1751
01:14:47,690 --> 01:14:49,430
中文字幕
So I could call it anything I want.

1752
01:14:49,430 --> 01:14:51,670
中文字幕
And I'm going to go ahead and call this SQL function.

1753
01:14:51,670 --> 01:14:55,000
中文字幕
And I'm going to pass in a somewhat funky looking string as an argument,

1754
01:14:55,000 --> 01:14:57,100
中文字幕
but it's a standard convention, to say what

1755
01:14:57,100 --> 01:14:59,120
中文字幕
database technology do you want to use?

1756
01:14:59,120 --> 01:15:02,620
中文字幕
Then you do colon, slash, slash, slash-- so it's three slashes, not

1757
01:15:02,620 --> 01:15:04,330
中文字幕
the usual two in a URL.

1758
01:15:04,330 --> 01:15:09,940
中文字幕
And I'm going to specify froshims.db.

1759
01:15:09,940 --> 01:15:12,250
中文字幕
This now will give me a Python variable called

1760
01:15:12,250 --> 01:15:16,570
中文字幕
database that is kind of like a portal, if you will, into that database

1761
01:15:16,570 --> 01:15:20,650
中文字幕
file that I can send SELECTs, and INSERTs, and DELETEs, and UPDATEs to.

1762
01:15:20,650 --> 01:15:21,670
中文字幕
How do I do this?

1763
01:15:21,670 --> 01:15:23,980
中文字幕
Well, if at the end of the day, I want to execute

1764
01:15:23,980 --> 01:15:30,050
中文字幕
the equivalent of SELECT star from registrants, how do I do that?

1765
01:15:30,050 --> 01:15:32,020
中文字幕
Well, I'm just in a text editor, right?

1766
01:15:32,020 --> 01:15:33,190
中文字幕
This is CS50 IDE.

1767
01:15:33,190 --> 01:15:34,390
中文字幕
I'm just typing text.

1768
01:15:34,390 --> 01:15:38,200
中文字幕
Moreover, I'm typing text in a Python file, and this is not Python.

1769
01:15:38,200 --> 01:15:42,280
中文字幕
And indeed, the IDE has this little red x saying, mm-mm, can't do this.

1770
01:15:42,280 --> 01:15:47,290
中文字幕
But I could pass SQL code as an input to a Python function

1771
01:15:47,290 --> 01:15:49,360
中文字幕
and let that function talk to the database.

1772
01:15:49,360 --> 01:15:52,360
中文字幕
And indeed, that's what we're going to get here from CS50's library.

1773
01:15:52,360 --> 01:15:53,350
中文字幕
I'm going to go ahead and do this.

1774
01:15:53,350 --> 01:15:54,010
中文字幕
You know what?

1775
01:15:54,010 --> 01:16:00,070
中文字幕
Access the database and EXECUTE the following SQL code,

1776
01:16:00,070 --> 01:16:03,770
中文字幕
quote unquote, "that" close parentheses.

1777
01:16:03,770 --> 01:16:07,700
中文字幕
Now, what is select return by convention?

1778
01:16:07,700 --> 01:16:09,200
中文字幕
What should it return?

1779
01:16:09,200 --> 01:16:14,020
中文字幕
Well, in SQLite3, we just saw a pretty text-based table

1780
01:16:14,020 --> 01:16:17,170
中文字幕
with lines and slashes that looked like a table, but was just text.

1781
01:16:17,170 --> 01:16:20,930
中文字幕
phpLiteAdmin, we actually saw HTML tables when I browsed the database.

1782
01:16:20,930 --> 01:16:23,230
中文字幕
And I proposed verbally, a bit ago that, you know what?

1783
01:16:23,230 --> 01:16:26,620
中文字幕
If I were to get back all of this data in code, what data type

1784
01:16:26,620 --> 01:16:27,690
中文字幕
would I like it to me as?

1785
01:16:30,810 --> 01:16:31,990
中文字幕
Rows.

1786
01:16:31,990 --> 01:16:33,610
中文字幕
I want rows from a table.

1787
01:16:33,610 --> 01:16:35,560
中文字幕
Show me all the students who've registered.

1788
01:16:35,560 --> 01:16:37,600
中文字幕
What data structure in Python seems apt?

1789
01:16:37,600 --> 01:16:38,280
中文字幕
List.

1790
01:16:38,280 --> 01:16:39,990
中文字幕
Yeah, just a list, right?

1791
01:16:39,990 --> 01:16:42,070
中文字幕
A list that's ordered from first row to last row.

1792
01:16:42,070 --> 01:16:45,410
中文字幕
So we'll call that a list or an array, back in the day of C. So you know what?

1793
01:16:45,410 --> 01:16:46,870
中文字幕
I'm going to assume that's correct.

1794
01:16:46,870 --> 01:16:49,490
中文字幕
And if I read the documentation, I would see that it's correct.

1795
01:16:49,490 --> 01:16:53,290
中文字幕
CS50's EXECUTE function, if you select, returns to you a list of rows.

1796
01:16:53,290 --> 01:16:55,520
中文字幕
It might have 0 rows if there are no matches.

1797
01:16:55,520 --> 01:16:58,500
中文字幕
But it might have 1,000 rows if there are lots of matches.

1798
01:16:58,500 --> 01:17:01,610
中文字幕
I'm going to store those results, wherever they are, in my rows array.

1799
01:17:01,610 --> 01:17:05,680
中文字幕
Now, suppose I want to print out who has registered in my database

1800
01:17:05,680 --> 01:17:07,920
中文字幕
from whatever froshims website exists.

1801
01:17:07,920 --> 01:17:09,970
中文字幕
I'm assuming students have registered on the web.

1802
01:17:09,970 --> 01:17:12,700
中文字幕
Now I'm just the proctor or the RA who's actually now

1803
01:17:12,700 --> 01:17:15,110
中文字幕
trying to manipulate the data and do something with it.

1804
01:17:15,110 --> 01:17:15,940
中文字幕
So what can I do?

1805
01:17:15,940 --> 01:17:18,700
中文字幕
Well, for row in rows, what do I want to do?

1806
01:17:18,700 --> 01:17:23,290
中文字幕
Let me go ahead and just print out that so-and-so registered.

1807
01:17:23,290 --> 01:17:26,150
中文字幕
So so-and-so registered.

1808
01:17:26,150 --> 01:17:27,820
中文字幕
Well, how do I plug in so-and-so?

1809
01:17:27,820 --> 01:17:29,710
中文字幕
Well, there are a few ways to do this.

1810
01:17:29,710 --> 01:17:30,830
中文字幕
And let's see.

1811
01:17:30,830 --> 01:17:34,600
中文字幕
First of all, I could use my placeholder syntax for print.

1812
01:17:34,600 --> 01:17:36,340
中文字幕
And then, I want to print out the row.

1813
01:17:36,340 --> 01:17:38,880
中文字幕
But what do I want from that row?

1814
01:17:38,880 --> 01:17:42,480
中文字幕
What columns are in any row in this database?

1815
01:17:44,850 --> 01:17:47,480
中文字幕
ID and name and dorm and phone and sports.

1816
01:17:47,480 --> 01:17:50,730
中文字幕
Well, it turns out, those are going to be handed to you as Python dictionaries

1817
01:17:50,730 --> 01:17:52,090
中文字幕
or dict structures.

1818
01:17:52,090 --> 01:17:54,780
中文字幕
So I can just say row quote unquote, 'name' here.

1819
01:17:54,780 --> 01:17:58,390
中文字幕
And I'll use single quotes just to make more clear what's going on here.

1820
01:17:58,390 --> 01:17:59,940
中文字幕
And then I need to make one fix.

1821
01:17:59,940 --> 01:18:00,660
中文字幕
How do I--

1822
01:18:00,660 --> 01:18:01,500
中文字幕
F.

1823
01:18:01,500 --> 01:18:03,150
中文字幕
--F for Format string.

1824
01:18:03,150 --> 01:18:04,380
中文字幕
So it looks a little cryptic.

1825
01:18:04,380 --> 01:18:05,880
中文字幕
But this is just Python stuff now.

1826
01:18:05,880 --> 01:18:07,290
中文字幕
The only thing that's new is SQL.

1827
01:18:07,290 --> 01:18:10,520
中文字幕
But if we stipulate that SQL, when using this execute function

1828
01:18:10,520 --> 01:18:14,340
中文字幕
is just going to hand you all a list of rows, each of which

1829
01:18:14,340 --> 01:18:17,190
中文字幕
is a dictionary so that you can get at this column or this column--

1830
01:18:17,190 --> 01:18:18,690
中文字幕
ID, or name, or dorm--

1831
01:18:18,690 --> 01:18:21,480
中文字幕
this would seem to be now a nice convergence of this week--

1832
01:18:21,480 --> 01:18:23,280
中文字幕
now, with the past couple of weeks.

1833
01:18:23,280 --> 01:18:24,750
中文字幕
So let me go ahead and save this.

1834
01:18:24,750 --> 01:18:28,110
中文字幕
Let me go ahead and View my Console, so I have a Terminal window.

1835
01:18:28,110 --> 01:18:31,390
中文字幕
And let me go ahead and run Python of lecture.py.

1836
01:18:31,390 --> 01:18:33,930
中文字幕
And in just a moment, if I cross my fingers,

1837
01:18:33,930 --> 01:18:37,020
中文字幕
I should hopefully see who has registered.

1838
01:18:37,020 --> 01:18:38,340
中文字幕
Amazing.

1839
01:18:38,340 --> 01:18:39,600
中文字幕
I've seen who's registered.

1840
01:18:39,600 --> 01:18:42,630
中文字幕
Now there's one line of output that I didn't expect, which is just this one.

1841
01:18:42,630 --> 01:18:44,830
中文字幕
This is the library just being pedagogically helpful.

1842
01:18:44,830 --> 01:18:47,940
中文字幕
It's showing me every command that I sent to the database.

1843
01:18:47,940 --> 01:18:50,190
中文字幕
But you'll see that so-and-so has registered.

1844
01:18:50,190 --> 01:18:51,490
中文字幕
So this is kind of interesting.

1845
01:18:51,490 --> 01:18:53,030
中文字幕
It's kind of a stupid program, right?

1846
01:18:53,030 --> 01:18:55,410
中文字幕
Because most proctors aren't going to be hacking

1847
01:18:55,410 --> 01:18:58,030
中文字幕
froshims by using a terminal window and running Python scripts.

1848
01:18:58,030 --> 01:19:00,330
中文字幕
They're probably going to want to do this by a web page

1849
01:19:00,330 --> 01:19:01,920
中文字幕
and actually see who is registered.

1850
01:19:01,920 --> 01:19:04,770
中文字幕
But if we have the ability in Python code to do this, like,

1851
01:19:04,770 --> 01:19:08,910
中文字幕
iteration, what could I do instead of just printing to the screen?

1852
01:19:08,910 --> 01:19:12,630
中文字幕
What could I print out per last week and per the past problems set?

1853
01:19:12,630 --> 01:19:14,070
中文字幕
I could print out HTML, right?

1854
01:19:14,070 --> 01:19:16,060
中文字幕
Like, each of the students who register, kind of

1855
01:19:16,060 --> 01:19:18,240
中文字幕
feels like an opportunity for an unordered list

1856
01:19:18,240 --> 01:19:20,610
中文字幕
or an ordered list or a table or whatever.

1857
01:19:20,610 --> 01:19:22,080
中文字幕
You can now generate HTML.

1858
01:19:22,080 --> 01:19:23,290
中文字幕
So let me do this.

1859
01:19:23,290 --> 01:19:27,270
中文字幕
Let me actually go into an example I've made in advance.

1860
01:19:27,270 --> 01:19:30,330
中文字幕
What if I went ahead and opened up layout.html.

1861
01:19:30,330 --> 01:19:33,210
中文字幕
Here is a simple layout for a web application using Flask.

1862
01:19:33,210 --> 01:19:35,430
中文字幕
For those unfamiliar, this is mostly HTML

1863
01:19:35,430 --> 01:19:39,750
中文字幕
plus a technology called Jinja, which is a web-based technology for generating

1864
01:19:39,750 --> 01:19:40,980
中文字幕
websites dynamically.

1865
01:19:40,980 --> 01:19:43,770
中文字幕
The body of this page is clearly what's of interest.

1866
01:19:43,770 --> 01:19:44,550
中文字幕
And you know what?

1867
01:19:44,550 --> 01:19:47,320
中文字幕
I bet I could do some logic right in there.

1868
01:19:47,320 --> 01:19:48,780
中文字幕
So let me go ahead and do this.

1869
01:19:48,780 --> 01:19:52,960
中文字幕
Let me go ahead and Create, let's say, a New File.

1870
01:19:52,960 --> 01:19:55,870
中文字幕
Let's call this application.py.

1871
01:19:55,870 --> 01:19:57,870
中文字幕
I'm going to go ahead and, just for time's sake,

1872
01:19:57,870 --> 01:20:01,290
中文字幕
do a little bit of copy-paste to save myself some keystrokes.

1873
01:20:01,290 --> 01:20:03,510
中文字幕
So here's a very simple web app.

1874
01:20:03,510 --> 01:20:05,100
中文字幕
And this is going to be my to-do.

1875
01:20:05,100 --> 01:20:08,970
中文字幕
So if I go in here to templates, let me open up index.html--

1876
01:20:08,970 --> 01:20:11,190
中文字幕
and let me go head into here.

1877
01:20:11,190 --> 01:20:12,760
中文字幕
So long story short--

1878
01:20:12,760 --> 01:20:14,800
中文字幕
here's where we're going with this.

1879
01:20:14,800 --> 01:20:19,150
中文字幕
What if I instead generate an unordered list using code from last week,

1880
01:20:19,150 --> 01:20:21,930
中文字幕
but I use my for loop here inside of my web app

1881
01:20:21,930 --> 01:20:25,430
中文字幕
instead of actually just with a simple lecture.py file.

1882
01:20:25,430 --> 01:20:27,690
中文字幕
Well, recall that I could do something like this.

1883
01:20:27,690 --> 01:20:29,340
中文字幕
I can have a Jinja loop.

1884
01:20:29,340 --> 01:20:32,640
中文字幕
So I could say something like for row in rows.

1885
01:20:32,640 --> 01:20:35,790
中文字幕
And then, down here, I can preemptively say something

1886
01:20:35,790 --> 01:20:40,140
中文字幕
like andfor, which is our weird syntax from last week.

1887
01:20:40,140 --> 01:20:42,570
中文字幕
And then, in here, I can just do a list item.

1888
01:20:42,570 --> 01:20:47,260
中文字幕
And then, if I want to show who registered, what do I type here?

1889
01:20:47,260 --> 01:20:51,800
中文字幕
Something in between these curly braces if each row represents a registrant?

1890
01:20:51,800 --> 01:20:53,200
中文字幕
Row.

1891
01:20:53,200 --> 01:20:55,900
中文字幕
Row name registered.

1892
01:20:55,900 --> 01:20:57,320
中文字幕
I can just do something like this.

1893
01:20:57,320 --> 01:21:00,130
中文字幕
So same idea, I'm just wrapping it with a little bit of HTML.

1894
01:21:00,130 --> 01:21:02,810
中文字幕
Now let me go to my application.py file because I'm

1895
01:21:02,810 --> 01:21:04,360
中文字幕
going to have to fill in some blanks.

1896
01:21:04,360 --> 01:21:05,970
中文字幕
And let me see, how can I do this?

1897
01:21:05,970 --> 01:21:08,860
中文字幕
Well, ultimately, I want to return the result of rendering

1898
01:21:08,860 --> 01:21:11,350
中文字幕
a template called index.html.

1899
01:21:11,350 --> 01:21:13,710
中文字幕
For families unfamiliar, this is just a line of code

1900
01:21:13,710 --> 01:21:16,180
中文字幕
that says go show that file to the user.

1901
01:21:16,180 --> 01:21:18,760
中文字幕
But I don't want to just show them the file as-is.

1902
01:21:18,760 --> 01:21:20,290
中文字幕
But let's at least get this set up.

1903
01:21:20,290 --> 01:21:25,340
中文字幕
I'm worried that it might not work yet because I need to get the actual data.

1904
01:21:25,340 --> 01:21:27,510
中文字幕
So how can I get all of the rows for my registrants?

1905
01:21:27,510 --> 01:21:31,390
中文字幕
Well, I can do rows gets db.execute.

1906
01:21:31,390 --> 01:21:36,470
中文字幕
And I can go ahead and select star from registrants and store that in there.

1907
01:21:36,470 --> 01:21:39,980
中文字幕
This file is called froshims.db that I created earlier.

1908
01:21:39,980 --> 01:21:42,280
中文字幕
And everything else is just Flask stuff from last week.

1909
01:21:42,280 --> 01:21:43,190
中文字幕
Nothing else is new.

1910
01:21:43,190 --> 01:21:45,880
中文字幕
The only thing that's new is this line here,

1911
01:21:45,880 --> 01:21:49,690
中文字幕
this line here, and now this line here where

1912
01:21:49,690 --> 01:21:53,200
中文字幕
I'm using SQL inside of a Python call by passing

1913
01:21:53,200 --> 01:21:55,450
中文字幕
it is an argument to a function called EXECUTE.

1914
01:21:55,450 --> 01:21:58,310
中文字幕
How do I pass the rows to index.html?

1915
01:21:58,310 --> 01:21:59,290
中文字幕


1916
01:21:59,290 --> 01:22:02,070
中文字幕
Yeah, like rows equals rows is the convention we've adopted.

1917
01:22:02,070 --> 01:22:03,900
中文字幕
You call it anything you want, x equals y,

1918
01:22:03,900 --> 01:22:05,650
中文字幕
but this is a little more straightforward.

1919
01:22:05,650 --> 01:22:08,850
中文字幕
So this is saying, hey, database, get me all of the rows from my registrants,

1920
01:22:08,850 --> 01:22:12,390
中文字幕
and then render the template index.html, and pass in these rows.

1921
01:22:12,390 --> 01:22:19,130
中文字幕
And now, if I hold my breath and run flask run, no syntax errors.

1922
01:22:19,130 --> 01:22:21,590
中文字幕
If I go ahead and visit this here and open--

1923
01:22:21,590 --> 01:22:25,490
中文字幕
dammit-- the tab, I see an internal server error.

1924
01:22:25,490 --> 01:22:28,080
中文字幕
So teachable moment, families.

1925
01:22:28,080 --> 01:22:31,590
中文字幕
Let's go back into that browser window here and see what happened.

1926
01:22:31,590 --> 01:22:32,090
中文字幕
OK.

1927
01:22:32,090 --> 01:22:35,000
中文字幕
Template syntax error-- so pretty stupid mistake.

1928
01:22:35,000 --> 01:22:38,720
中文字幕
It looks like I expected a square bracket instead of a curly brace.

1929
01:22:38,720 --> 01:22:39,350
中文字幕
That's fixable.

1930
01:22:39,350 --> 01:22:41,190
中文字幕
Let me go into index.html.

1931
01:22:41,190 --> 01:22:43,070
中文字幕
And oh, I didn't finish my thought.

1932
01:22:43,070 --> 01:22:46,130
中文字幕
So that's some of the frustrations of programming for those

1933
01:22:46,130 --> 01:22:47,760
中文字幕
who are seeing this for the first time.

1934
01:22:47,760 --> 01:22:48,950
中文字幕
Let me save that.

1935
01:22:48,950 --> 01:22:53,000
中文字幕
Let me go back to the browser here, and we'll just reload.

1936
01:22:53,000 --> 01:22:56,600
中文字幕
And oh my god, voila, now I have a web page

1937
01:22:56,600 --> 01:22:58,640
中文字幕
via which you can see who has registered.

1938
01:22:58,640 --> 01:22:59,390
中文字幕
But you know what?

1939
01:22:59,390 --> 01:23:00,710
中文字幕
We can make this more powerful.

1940
01:23:00,710 --> 01:23:03,540
中文字幕
Recall that we've been playing with HTTP for some time.

1941
01:23:03,540 --> 01:23:05,630
中文字幕
And if this is the URL I'm accessing, recall

1942
01:23:05,630 --> 01:23:08,580
中文字幕
that we played around with reimplementing search functionality.

1943
01:23:08,580 --> 01:23:11,990
中文字幕
Well, what if I want to support search such that I can just visit q

1944
01:23:11,990 --> 01:23:15,650
中文字幕
equals and then search for people named, say, Brian

1945
01:23:15,650 --> 01:23:17,540
中文字幕
and see how many Brians are registered.

1946
01:23:17,540 --> 01:23:19,500
中文字幕
Could we add support for something like this?

1947
01:23:19,500 --> 01:23:20,030
中文字幕
Well, maybe.

1948
01:23:20,030 --> 01:23:23,810
中文字幕
Let me go back into the IDE, into application.py.

1949
01:23:23,810 --> 01:23:26,180
中文字幕
And let me go ahead and say something like this.

1950
01:23:26,180 --> 01:23:32,420
中文字幕
q equals request.args get q to see if anything is actually there.

1951
01:23:32,420 --> 01:23:35,040
中文字幕
And then let me go ahead and do this.

1952
01:23:35,040 --> 01:23:39,200
中文字幕
SELECT star FROM registrants WHERE--

1953
01:23:39,200 --> 01:23:41,360
中文字幕
let me see-- q where what?

1954
01:23:41,360 --> 01:23:43,910
中文字幕
NAME equals q.

1955
01:23:43,910 --> 01:23:45,020
中文字幕
But I need a placeholder.

1956
01:23:45,020 --> 01:23:46,560
中文字幕
So maybe I should do this.

1957
01:23:46,560 --> 01:23:48,630
中文字幕
And as soon as I do this, I need a what?

1958
01:23:48,630 --> 01:23:50,240
中文字幕
F for a format string.

1959
01:23:50,240 --> 01:23:53,780
中文字幕
So I could just create, on the fly, a SQL command

1960
01:23:53,780 --> 01:23:56,270
中文字幕
that plugs in the value of q between those curly

1961
01:23:56,270 --> 01:23:59,540
中文字幕
braces to express the logic of select all

1962
01:23:59,540 --> 01:24:03,200
中文字幕
of the registrants whose names equal Brian or Veronica

1963
01:24:03,200 --> 01:24:04,910
中文字幕
or whoever's name I typed in.

1964
01:24:04,910 --> 01:24:06,960
中文字幕
Let me go back to the browser here.

1965
01:24:06,960 --> 01:24:10,190
中文字幕
Let me go over and do something like this now.

1966
01:24:10,190 --> 01:24:13,850
中文字幕
Question mark q equals Brian-- cross my fingers as before.

1967
01:24:13,850 --> 01:24:14,480
中文字幕
Dammit.

1968
01:24:14,480 --> 01:24:15,090
中文字幕
OK.

1969
01:24:15,090 --> 01:24:18,320
中文字幕
And what did I do wrong here?

1970
01:24:18,320 --> 01:24:22,080
中文字幕


1971
01:24:22,080 --> 01:24:24,210
中文字幕
What did I do wrong here?

1972
01:24:24,210 --> 01:24:26,280
中文字幕
This is subtle.

1973
01:24:26,280 --> 01:24:29,920
中文字幕
And we're seeing it for the first time.

1974
01:24:29,920 --> 01:24:32,690
中文字幕
It thinks there's a column called Brian.

1975
01:24:32,690 --> 01:24:33,860
中文字幕
But why would it think that?

1976
01:24:33,860 --> 01:24:36,650
中文字幕
Well, what I've effectively done is sent in this.

1977
01:24:36,650 --> 01:24:38,960
中文字幕
Brian is not a keyword in SQL.

1978
01:24:38,960 --> 01:24:42,650
中文字幕
And because it's an actual string that I'm comparing against,

1979
01:24:42,650 --> 01:24:45,110
中文字幕
what I really need to be doing is this.

1980
01:24:45,110 --> 01:24:48,980
中文字幕
Otherwise, SQLite is going to think it's like the name of a column or something

1981
01:24:48,980 --> 01:24:51,620
中文字幕
I pre-created so we have to fix this.

1982
01:24:51,620 --> 01:24:52,440
中文字幕
But that's OK.

1983
01:24:52,440 --> 01:24:53,780
中文字幕
I can put the quotes there.

1984
01:24:53,780 --> 01:24:57,320
中文字幕
But I should probably put the q there in quotes.

1985
01:24:57,320 --> 01:25:01,590
中文字幕
Let's save this, go back to the browser, reload.

1986
01:25:01,590 --> 01:25:02,330
中文字幕
And there we go.

1987
01:25:02,330 --> 01:25:04,540
中文字幕
Now we have functionality for Brian.

1988
01:25:04,540 --> 01:25:06,920
中文字幕
And so with this basic building block, what have we done?

1989
01:25:06,920 --> 01:25:09,470
中文字幕
Well, in SQL, we have several commands at our disposal--

1990
01:25:09,470 --> 01:25:12,560
中文字幕
creating a table, which frankly gets tedious by typing it out.

1991
01:25:12,560 --> 01:25:15,980
中文字幕
I myself tend to use and recommend phpLiteAdmin just to create your table

1992
01:25:15,980 --> 01:25:16,820
中文字幕
and get it going.

1993
01:25:16,820 --> 01:25:21,380
中文字幕
But then you can certainly manually, with SQLite3 or phpLiteAdmin INSERT,

1994
01:25:21,380 --> 01:25:24,440
中文字幕
or UPDATE, or DELETE, or SELECT information

1995
01:25:24,440 --> 01:25:25,920
中文字幕
once it's actually in the database.

1996
01:25:25,920 --> 01:25:27,050
中文字幕
And that's pretty powerful.

1997
01:25:27,050 --> 01:25:31,070
中文字幕
But once you do that, you can now use that same new syntax, that new language

1998
01:25:31,070 --> 01:25:35,270
中文字幕
SQL, passing it in as an input with a "string" to our EXECUTE function,

1999
01:25:35,270 --> 01:25:39,080
中文字幕
and now start pulling any data you want from your database.

2000
01:25:39,080 --> 01:25:41,620
中文字幕
Last week, with CSV files, if you wanted to do this,

2001
01:25:41,620 --> 01:25:44,420
中文字幕
you'd have to open the CSV file, use a for loop to iterate over it,

2002
01:25:44,420 --> 01:25:47,490
中文字幕
look over every column and row for your data, then pass it in.

2003
01:25:47,490 --> 01:25:48,200
中文字幕
And that's fine.

2004
01:25:48,200 --> 01:25:48,830
中文字幕
That's correct.

2005
01:25:48,830 --> 01:25:49,910
中文字幕
That's not bad.

2006
01:25:49,910 --> 01:25:50,630
中文字幕
But it's tedious.

2007
01:25:50,630 --> 01:25:52,680
中文字幕
And you're reinventing the wheel again and again.

2008
01:25:52,680 --> 01:25:56,000
中文字幕
And there's no filtration built in as there is to SQL itself.

2009
01:25:56,000 --> 01:25:58,730
中文字幕
So you now have a more sophisticated tool

2010
01:25:58,730 --> 01:26:04,470
中文字幕
in your toolkit so to speak with which to solve that same kind of problem.

2011
01:26:04,470 --> 01:26:08,430
中文字幕
Any questions then on this technique?

2012
01:26:08,430 --> 01:26:09,400
中文字幕
All right.

2013
01:26:09,400 --> 01:26:13,890
中文字幕
Well, let's look at a bigger database and see where we can go with this?

2014
01:26:13,890 --> 01:26:15,730
中文字幕
So if you go on the course's website, you'll

2015
01:26:15,730 --> 01:26:19,460
中文字幕
see a larger database that's actually available in multiple formats, SQLite,

2016
01:26:19,460 --> 01:26:21,880
中文字幕
which we'll see in a moment, but also Google Spreadsheets.

2017
01:26:21,880 --> 01:26:23,920
中文字幕
Because frankly, it's a lot more pleasant to look

2018
01:26:23,920 --> 01:26:26,560
中文字幕
at your rows and columns in a GUI than it is, necessarily,

2019
01:26:26,560 --> 01:26:28,430
中文字幕
with the file itself.

2020
01:26:28,430 --> 01:26:31,330
中文字幕
So this happens to be a free and open source sample database.

2021
01:26:31,330 --> 01:26:35,260
中文字幕
Like, some guy, years ago, took his actual iTunes database--

2022
01:26:35,260 --> 01:26:37,750
中文字幕
all the music he'd ever bought, he wrote a program

2023
01:26:37,750 --> 01:26:40,450
中文字幕
to like analyze Apple's file format in iTunes

2024
01:26:40,450 --> 01:26:43,090
中文字幕
and extract all of the data that seemed to be stored about him,

2025
01:26:43,090 --> 01:26:46,240
中文字幕
I think was the story, and just made it publicly available as a sample

2026
01:26:46,240 --> 01:26:49,930
中文字幕
database for students and teachers to just use to manipulate data.

2027
01:26:49,930 --> 01:26:52,060
中文字幕
But what's interesting is that this database

2028
01:26:52,060 --> 01:26:55,870
中文字幕
demonstrates some other principles that we really haven't touched on.

2029
01:26:55,870 --> 01:27:01,610
中文字幕
For instance, if I were to store, again and again,

2030
01:27:01,610 --> 01:27:04,810
中文字幕
all of these students who are registering for froshims,

2031
01:27:04,810 --> 01:27:07,840
中文字幕
what do you start to see in certain fields?

2032
01:27:07,840 --> 01:27:11,080
中文字幕
Well, I was a little lazy, and I didn't bother typing in everyone's dorm.

2033
01:27:11,080 --> 01:27:14,040
中文字幕
But suppose that hundreds of students have registered for froshims.

2034
01:27:14,040 --> 01:27:16,840
中文字幕
A lot of them are going to be from Matthews, some from Pennypacker,

2035
01:27:16,840 --> 01:27:20,890
中文字幕
some from Candaday, some from Weld, and bunches of other buildings on campus.

2036
01:27:20,890 --> 01:27:22,810
中文字幕
It starts to get a little ridiculous when

2037
01:27:22,810 --> 01:27:25,450
中文字幕
you see Matthews, Matthews, Matthews, Matthews,

2038
01:27:25,450 --> 01:27:27,520
中文字幕
Matthews-- like, 100 or more times.

2039
01:27:27,520 --> 01:27:30,670
中文字幕
If there are 1,600 freshmen, there are a lot of kids in Matthews.

2040
01:27:30,670 --> 01:27:35,280
中文字幕
That's a lot of bytes to store M-A-T-T-H-E-W--

2041
01:27:35,280 --> 01:27:35,830
中文字幕
I don't know.

2042
01:27:35,830 --> 01:27:36,600
中文字幕
It's not important.

2043
01:27:36,600 --> 01:27:37,930
中文字幕
Doesn't matter how it's spelled.

2044
01:27:37,930 --> 01:27:41,380
中文字幕
That's a lot of bytes to actually store in your database again and again

2045
01:27:41,380 --> 01:27:42,120
中文字幕
and again.

2046
01:27:42,120 --> 01:27:43,960
中文字幕
It feels like there should be an opportunity

2047
01:27:43,960 --> 01:27:45,610
中文字幕
to factor out the commonalities.

2048
01:27:45,610 --> 01:27:48,610
中文字幕
And what humans do with databases is, once they recognize a recurring

2049
01:27:48,610 --> 01:27:52,390
中文字幕
pattern of data, same darn strings again and again and again, you know what?

2050
01:27:52,390 --> 01:27:54,220
中文字幕
Rather than use-- now it matters--

2051
01:27:54,220 --> 01:27:58,120
中文字幕
M-A-T-T-H-E-W-S-- which is 8 bytes.

2052
01:27:58,120 --> 01:28:05,860
中文字幕
Or P-E-N-N-Y-P-A-C-K-E-R, which is 11, then we have a lot of bytes being used

2053
01:28:05,860 --> 01:28:08,110
中文字幕
again and again and again to store all of these dorms.

2054
01:28:08,110 --> 01:28:08,690
中文字幕
You know what?

2055
01:28:08,690 --> 01:28:10,690
中文字幕
What's better than 11 bytes or 8 bytes?

2056
01:28:10,690 --> 01:28:13,870
中文字幕
Let's just use an int, or let's even use a small int--

2057
01:28:13,870 --> 01:28:16,850
中文字幕
2 bytes or 4 bytes to represent dorms.

2058
01:28:16,850 --> 01:28:20,320
中文字幕
So instead of storing Matthews, let's just store the number 10.

2059
01:28:20,320 --> 01:28:23,800
中文字幕
And instead of Penny Packer, lets just store the number 11, thereby,

2060
01:28:23,800 --> 01:28:27,190
中文字幕
using some bytes, but fewer and, therefore,

2061
01:28:27,190 --> 01:28:29,030
中文字幕
saving bytes in the long run.

2062
01:28:29,030 --> 01:28:32,680
中文字幕
And so with this database demonstrates is exactly that principle.

2063
01:28:32,680 --> 01:28:36,880
中文字幕
Certainly, when it comes to music, where artists have multiple albums

2064
01:28:36,880 --> 01:28:39,280
中文字幕
and artists have multiple songs, it's probably

2065
01:28:39,280 --> 01:28:42,430
中文字幕
a little silly in a musical database to store the name of the album

2066
01:28:42,430 --> 01:28:44,740
中文字幕
again and again and again and again for all 10 or 12

2067
01:28:44,740 --> 01:28:47,530
中文字幕
or 20 tracks or songs on that particular album.

2068
01:28:47,530 --> 01:28:49,450
中文字幕
So what this person did was this.

2069
01:28:49,450 --> 01:28:51,480
中文字幕
Notice here, we have a whole bunch of sheets.

2070
01:28:51,480 --> 01:28:53,890
中文字幕
Or in database-speak, these would be tables.

2071
01:28:53,890 --> 01:28:56,050
中文字幕
And notice that these tables have columns.

2072
01:28:56,050 --> 01:28:58,060
中文字幕
And notice that these columns are album ID,

2073
01:28:58,060 --> 01:29:01,240
中文字幕
in the album table, album ID and title.

2074
01:29:01,240 --> 01:29:06,070
中文字幕
But notice what he did very cleverly with this field, artist ID.

2075
01:29:06,070 --> 01:29:09,550
中文字幕
Artists or singers have lots of songs to their name, eventually.

2076
01:29:09,550 --> 01:29:11,560
中文字幕
And so he's assigned each of them unique value,

2077
01:29:11,560 --> 01:29:13,960
中文字幕
or Apple did, in iTunes underneath the hood.

2078
01:29:13,960 --> 01:29:17,260
中文字幕
So how do I know what this artist's name is?

2079
01:29:17,260 --> 01:29:18,910
中文字幕
How would you figure this out?

2080
01:29:18,910 --> 01:29:23,120
中文字幕
It's not that interesting to us humans do know, ooh, artist ID number 2.

2081
01:29:23,120 --> 01:29:24,490
中文字幕
This is just-- what's that?

2082
01:29:24,490 --> 01:29:26,010
中文字幕
You need another table with artists.

2083
01:29:26,010 --> 01:29:26,890
中文字幕
Yeah.

2084
01:29:26,890 --> 01:29:29,270
中文字幕
We need another table with artists, which is right over here.

2085
01:29:29,270 --> 01:29:30,680
中文字幕
So let me go ahead and look there.

2086
01:29:30,680 --> 01:29:34,120
中文字幕
So if I want to see-- let's see, "Let there be rock," artist number 1.

2087
01:29:34,120 --> 01:29:35,650
中文字幕
Let's go to the artists table.

2088
01:29:35,650 --> 01:29:39,400
中文字幕
And turns out, AC/DC, the band is who created that.

2089
01:29:39,400 --> 01:29:43,290
中文字幕
Now we've added a step here, which maybe is costing us a little bit of time.

2090
01:29:43,290 --> 01:29:46,210
中文字幕
But it's going to save a space in the long run if I'm not storing long

2091
01:29:46,210 --> 01:29:48,730
中文字幕
artist's names-- although, AC/DC isn't terribly long--

2092
01:29:48,730 --> 01:29:49,960
中文字幕
again and again and again.

2093
01:29:49,960 --> 01:29:51,040
中文字幕
Now, which is better?

2094
01:29:51,040 --> 01:29:52,000
中文字幕
Well, it's a trade-off.

2095
01:29:52,000 --> 01:29:55,360
中文字幕
Are you more comfortable wasting space and storing everything together?

2096
01:29:55,360 --> 01:29:59,230
中文字幕
Or do you prefer to save space and just spend a little more time

2097
01:29:59,230 --> 01:30:01,010
中文字幕
joining the data back together?

2098
01:30:01,010 --> 01:30:03,100
中文字幕
But it's going to be really annoying if, now,

2099
01:30:03,100 --> 01:30:06,040
中文字幕
if I want to make a website that shows me the names of the songs

2100
01:30:06,040 --> 01:30:08,500
中文字幕
that I have in a database and the artists for them,

2101
01:30:08,500 --> 01:30:11,800
中文字幕
let alone the albums, and more of that, the titles of the tracks, and so forth.

2102
01:30:11,800 --> 01:30:13,750
中文字幕
It feels like that's three queries, right?

2103
01:30:13,750 --> 01:30:18,140
中文字幕
Like SELECT the album, SELECT the artist, SELECT the titles--

2104
01:30:18,140 --> 01:30:18,640
中文字幕
but no.

2105
01:30:18,640 --> 01:30:21,670
中文字幕
With SQL, you can collapse that altogether.

2106
01:30:21,670 --> 01:30:24,110
中文字幕
Because notice, in this table here, artist,

2107
01:30:24,110 --> 01:30:27,500
中文字幕
there is a column called Artist ID that's numbers.

2108
01:30:27,500 --> 01:30:29,380
中文字幕
And notice, if you kind of picture this, it's

2109
01:30:29,380 --> 01:30:32,200
中文字幕
like finger tips here-- let's propose metaphorically--

2110
01:30:32,200 --> 01:30:33,970
中文字幕
represent the artist ID.

2111
01:30:33,970 --> 01:30:38,200
中文字幕
If I go into album now, notice that we have album ID and title,

2112
01:30:38,200 --> 01:30:40,630
中文字幕
but we also have artist ID.

2113
01:30:40,630 --> 01:30:47,590
中文字幕
And so if you imagine these two tables sharing this common column, what if we

2114
01:30:47,590 --> 01:30:50,410
中文字幕
kind of stitch them together like this, lining up one

2115
01:30:50,410 --> 01:30:53,050
中文字幕
on the left, the other on the right, thereby reconstructing

2116
01:30:53,050 --> 01:30:55,600
中文字幕
all of the information and duplicating it as

2117
01:30:55,600 --> 01:30:59,340
中文字幕
needed so that I get back just the album and the title and the artist.

2118
01:30:59,340 --> 01:31:00,910
中文字幕
Well, how can express that?

2119
01:31:00,910 --> 01:31:05,680
中文字幕
Well, let me go ahead into CS50 IDE where I have a copy of this file.

2120
01:31:05,680 --> 01:31:12,420
中文字幕
Let me close all of my tabs from earlier go into this file called lecture.db.

2121
01:31:12,420 --> 01:31:18,680
中文字幕
And in lecture.db, in phpLiteAdmin, we'll see all of those same tables.

2122
01:31:18,680 --> 01:31:20,960
中文字幕
And I literally just imported it into a SQLite.

2123
01:31:20,960 --> 01:31:22,460
中文字幕
You'll see all of these same tables.

2124
01:31:22,460 --> 01:31:23,910
中文字幕
We can browse album just as before.

2125
01:31:23,910 --> 01:31:26,120
中文字幕
And we just see a different format for the same data.

2126
01:31:26,120 --> 01:31:28,160
中文字幕
It's the same data from the Google Spreadsheet,

2127
01:31:28,160 --> 01:31:29,760
中文字幕
which is just more user-friendly.

2128
01:31:29,760 --> 01:31:31,650
中文字幕
And let me go ahead and do this.

2129
01:31:31,650 --> 01:31:35,960
中文字幕
I could, of course, SELECT star from album

2130
01:31:35,960 --> 01:31:43,250
中文字幕
Where our artist ID equals 1 to get back all of AC/DC's albums.

2131
01:31:43,250 --> 01:31:44,500
中文字幕
And indeed, here, I have two.

2132
01:31:44,500 --> 01:31:48,100
中文字幕
They have For those about to rock, We salute you, and Let there be rock.

2133
01:31:48,100 --> 01:31:48,690
中文字幕
They have two.

2134
01:31:48,690 --> 01:31:52,850
中文字幕
But notice, the rows I got back contain only what information?

2135
01:31:52,850 --> 01:31:56,330
中文字幕
Album ID title, and artist ID.

2136
01:31:56,330 --> 01:31:59,600
中文字幕
I just know, as a human, that oh, these are AC/DC's albums.

2137
01:31:59,600 --> 01:32:03,080
中文字幕
But what if I want to know, well, OK, I see that artist ID is 1.

2138
01:32:03,080 --> 01:32:05,870
中文字幕
So all right, well, let me open another tab here.

2139
01:32:05,870 --> 01:32:12,570
中文字幕
And now let me SELECT star from artist WHERE artist ID equals 1.

2140
01:32:12,570 --> 01:32:16,010
中文字幕
And so if I want to learn something about that artist-- let me go ahead

2141
01:32:16,010 --> 01:32:19,760
中文字幕
and Zoom Out, click Go, and OK-- now I get AC/DC.

2142
01:32:19,760 --> 01:32:20,600
中文字幕
Well, this is great.

2143
01:32:20,600 --> 01:32:23,760
中文字幕
Now I have to results, two sets of rows.

2144
01:32:23,760 --> 01:32:24,560
中文字幕
This is stupid.

2145
01:32:24,560 --> 01:32:28,160
中文字幕
Now I'm just creating work for myself by having two return values.

2146
01:32:28,160 --> 01:32:29,660
中文字幕
I could call db EXECUTE twice.

2147
01:32:29,660 --> 01:32:31,400
中文字幕
But there's a better way.

2148
01:32:31,400 --> 01:32:35,470
中文字幕
It turns out, SQL allows you to join tables just using SQL itself.

2149
01:32:35,470 --> 01:32:37,020
中文字幕
So I'm going to go ahead and do this.

2150
01:32:37,020 --> 01:32:40,910
中文字幕
I'm going to go ahead and SELECT star FROM album,

2151
01:32:40,910 --> 01:32:47,770
中文字幕
but also FROM artist WHERE Album.Artistid--

2152
01:32:47,770 --> 01:32:49,160
中文字幕
let me scroll to the right--

2153
01:32:49,160 --> 01:32:53,030
中文字幕
equals Artist.Artistid.

2154
01:32:53,030 --> 01:32:56,760
中文字幕
So notice I'm saying select everything from two tables,

2155
01:32:56,760 --> 01:33:00,830
中文字幕
but only do so where the album tables, artist ID

2156
01:33:00,830 --> 01:33:05,900
中文字幕
column has the same value as the artist tables artist ID column.

2157
01:33:05,900 --> 01:33:08,360
中文字幕
That's kind of the stitching, metaphorically, of my fingers

2158
01:33:08,360 --> 01:33:10,730
中文字幕
together, looking for that common column.

2159
01:33:10,730 --> 01:33:15,750
中文字幕
If I go ahead and click Go, wow, look at what I've just constructed.

2160
01:33:15,750 --> 01:33:19,610
中文字幕
It's a lot of information, but I have album ID and title,

2161
01:33:19,610 --> 01:33:24,320
中文字幕
I have artists ID still, but I have the name of that artist altogether.

2162
01:33:24,320 --> 01:33:28,270
中文字幕
So if you now let your mind wander back to the Python code,

2163
01:33:28,270 --> 01:33:30,860
中文字幕
oh, I could now get a whole bunch of rows containing

2164
01:33:30,860 --> 01:33:32,570
中文字幕
everything I care about all at once.

2165
01:33:32,570 --> 01:33:34,220
中文字幕
I don't need two select queries.

2166
01:33:34,220 --> 01:33:36,170
中文字幕
I can join these tables in this way.

2167
01:33:36,170 --> 01:33:37,700
中文字幕
And I use join very deliberately.

2168
01:33:37,700 --> 01:33:40,770
中文字幕
It turns out that there's another way to express this same thing.

2169
01:33:40,770 --> 01:33:44,390
中文字幕
Instead of using that comma syntax I did, you might see as well this,

2170
01:33:44,390 --> 01:33:56,070
中文字幕
Select star From Artist JOIN Album ON Artist.Artistid equals--

2171
01:33:56,070 --> 01:33:57,260
中文字幕
let me scroll over--

2172
01:33:57,260 --> 01:33:59,470
中文字幕
Album.Artistid.

2173
01:33:59,470 --> 01:34:01,310
中文字幕
This is going to have the exact same effect,

2174
01:34:01,310 --> 01:34:04,260
中文字幕
but you might just find that it reads a little more intuitively to you.

2175
01:34:04,260 --> 01:34:07,750
中文字幕
Select everything from the result of joining these two tables.

2176
01:34:07,750 --> 01:34:08,960
中文字幕
How do you want to join them?

2177
01:34:08,960 --> 01:34:12,600
中文字幕
Well, join them on this equaling that--

2178
01:34:12,600 --> 01:34:14,480
中文字幕
just another way of expressing the same idea.

2179
01:34:14,480 --> 01:34:17,180
中文字幕
And if I click Go, I get back the same information.

2180
01:34:17,180 --> 01:34:20,420
中文字幕
So ultimately, with JOINs do we have the ability to reassemble data.

2181
01:34:20,420 --> 01:34:24,290
中文字幕
So on the one hand, it's just good practice to normalize your database.

2182
01:34:24,290 --> 01:34:27,560
中文字幕
Identify columns that have lots and lots and lots of redundancy, and only

2183
01:34:27,560 --> 01:34:29,510
中文字幕
store that information once.

2184
01:34:29,510 --> 01:34:31,790
中文字幕
For instance, CS50 Finance, if you're supporting

2185
01:34:31,790 --> 01:34:36,170
中文字幕
many different users, every time Malan or Brian or Veronica buys a stock,

2186
01:34:36,170 --> 01:34:38,660
中文字幕
feels like it would be a little silly to store Malan

2187
01:34:38,660 --> 01:34:42,830
中文字幕
or Brian or Veronica along with Netflix, the symbol, and the number of shares

2188
01:34:42,830 --> 01:34:43,790
中文字幕
one of us bought.

2189
01:34:43,790 --> 01:34:45,640
中文字幕
Because Malan, Malan, Malan, Malan is going

2190
01:34:45,640 --> 01:34:46,750
中文字幕
to appear all throughout the database.

2191
01:34:46,750 --> 01:34:49,710
中文字幕
And what if I change my username or my name or someone gets married

2192
01:34:49,710 --> 01:34:50,840
中文字幕
and, therefore, it changes?

2193
01:34:50,840 --> 01:34:53,000
中文字幕
Like, why do you create that messiness for yourself?

2194
01:34:53,000 --> 01:34:57,860
中文字幕
Instead, give Brian and Veronica and me and everyone else a unique ID.

2195
01:34:57,860 --> 01:35:03,350
中文字幕
And when they buy something, just store their user ID or customer ID

2196
01:35:03,350 --> 01:35:07,280
中文字幕
or however you want to think about it, just like with album ID and artist ID.

2197
01:35:07,280 --> 01:35:10,370
中文字幕
And so normalizing a database is all about finding those commonalities

2198
01:35:10,370 --> 01:35:12,470
中文字幕
and moving the data into its own table.

2199
01:35:12,470 --> 01:35:14,640
中文字幕
And if you care about rejoining it, just use

2200
01:35:14,640 --> 01:35:18,300
中文字幕
SQL to reconstruct that view of the data, so to speak.

2201
01:35:18,300 --> 01:35:21,020
中文字幕
So what else can we do here as well?

2202
01:35:21,020 --> 01:35:24,200
中文字幕
It turns out that there is in SQL, not just primary keys,

2203
01:35:24,200 --> 01:35:27,320
中文字幕
but there are unique constraints in some databases where you can specify,

2204
01:35:27,320 --> 01:35:29,940
中文字幕
this isn't my primary key, but I want it to be unique.

2205
01:35:29,940 --> 01:35:32,220
中文字幕
You can specify that something should be indexed.

2206
01:35:32,220 --> 01:35:35,510
中文字幕
So it turns out that, if you just know there's a field in your database

2207
01:35:35,510 --> 01:35:38,180
中文字幕
that you want to be able to search on very efficiently,

2208
01:35:38,180 --> 01:35:39,770
中文字幕
you can index it in advance.

2209
01:35:39,770 --> 01:35:42,650
中文字幕
And you'll see or be able to do this if you'd like for final projects

2210
01:35:42,650 --> 01:35:44,970
中文字幕
or even for the next problem set if you'd like.

2211
01:35:44,970 --> 01:35:47,660
中文字幕
But what this enables are queries like this.

2212
01:35:47,660 --> 01:35:50,900
中文字幕
If I want to go ahead and search for, for instance--

2213
01:35:50,900 --> 01:35:53,560
中文字幕


2214
01:35:53,560 --> 01:35:55,490
中文字幕
what would be a good example?

2215
01:35:55,490 --> 01:35:56,090
中文字幕
Rock.

2216
01:35:56,090 --> 01:35:57,560
中文字幕
I'm interested in rock.

2217
01:35:57,560 --> 01:36:00,740
中文字幕
So if I want to go into My SQL tab here.

2218
01:36:00,740 --> 01:36:02,150
中文字幕
I could say something like this.

2219
01:36:02,150 --> 01:36:07,460
中文字幕
SELECT star FROM Album WHERE Name not equals,

2220
01:36:07,460 --> 01:36:11,510
中文字幕
but where name is LIKE and then I'm going to say 'Rock.'

2221
01:36:11,510 --> 01:36:14,550
中文字幕
But if I want any number of characters to come before that word,

2222
01:36:14,550 --> 01:36:15,720
中文字幕
I can use a percent sign.

2223
01:36:15,720 --> 01:36:18,390
中文字幕
And if any number of characters after, I can use a percent sign.

2224
01:36:18,390 --> 01:36:19,430
中文字幕
These are like wildcards.

2225
01:36:19,430 --> 01:36:21,240
中文字幕
In most languages, you would use star.

2226
01:36:21,240 --> 01:36:23,280
中文字幕
In SQL, you use percent signs.

2227
01:36:23,280 --> 01:36:24,640
中文字幕
But it means the same thing.

2228
01:36:24,640 --> 01:36:27,840
中文字幕
And if I go ahead and say go, now I get back--

2229
01:36:27,840 --> 01:36:32,340
中文字幕
oh, I get the got wrong lecture, album, oh, title I think is what I wanted.

2230
01:36:32,340 --> 01:36:33,720
中文字幕
Let me try that again, sorry--

2231
01:36:33,720 --> 01:36:36,780
中文字幕
WHERE Title LIKE 'Rock'--

2232
01:36:36,780 --> 01:36:38,250
中文字幕
let me go ahead and click Go.

2233
01:36:38,250 --> 01:36:41,970
中文字幕
And voila, here are all of the albums in the database that

2234
01:36:41,970 --> 01:36:43,430
中文字幕
have the word rock in them.

2235
01:36:43,430 --> 01:36:48,120
中文字幕
Now, as an aside, this table has a lot of more albums in it.

2236
01:36:48,120 --> 01:36:49,800
中文字幕
And frankly, it's small enough though.

2237
01:36:49,800 --> 01:36:51,930
中文字幕
It has hundreds of rows, maybe a few thousand rows.

2238
01:36:51,930 --> 01:36:55,410
中文字幕
None of us humans are really going to notice how slow linear search is.

2239
01:36:55,410 --> 01:36:58,050
中文字幕
But if you start having thousands of rows, tens of thousands

2240
01:36:58,050 --> 01:37:01,050
中文字幕
of rows, millions of rows, not having an index

2241
01:37:01,050 --> 01:37:04,230
中文字幕
means that searching for something like rock is going to start at the top

2242
01:37:04,230 --> 01:37:07,770
中文字幕
and search every darn field all the way to the bottom, big O of n.

2243
01:37:07,770 --> 01:37:09,720
中文字幕
If you instead tell the database, I know I'm

2244
01:37:09,720 --> 01:37:13,200
中文字幕
going to be searching on this column a lot, please index it for me,

2245
01:37:13,200 --> 01:37:14,450
中文字幕
here comes the secret sauce.

2246
01:37:14,450 --> 01:37:17,700
中文字幕
SQLite, Oracle, Microsoft Access, and so forth, they

2247
01:37:17,700 --> 01:37:19,650
中文字幕
will, using their own intellectual property,

2248
01:37:19,650 --> 01:37:22,830
中文字幕
build up some fancy data structures-- trees, or hash tables,

2249
01:37:22,830 --> 01:37:30,390
中文字幕
or whatever in memory, store the data for you invisibly in that format

2250
01:37:30,390 --> 01:37:33,840
中文字幕
so that, when you do ask for a question like, show me all the albums like rock,

2251
01:37:33,840 --> 01:37:37,800
中文字幕
they can answer you in much faster time than linear.

2252
01:37:37,800 --> 01:37:41,020
中文字幕
And that too is what you get with SQL that you don't get with CSVs.

2253
01:37:41,020 --> 01:37:43,710
中文字幕
CSVs are, by nature, only linear.

2254
01:37:43,710 --> 01:37:44,550
中文字幕
So we can do better.

2255
01:37:44,550 --> 01:37:46,980
中文字幕
But you, the programmer, have to help the database

2256
01:37:46,980 --> 01:37:49,540
中文字幕
and actually give it those hints, not just the types,

2257
01:37:49,540 --> 01:37:50,600
中文字幕
but also hints like this.

2258
01:37:50,600 --> 01:37:52,410
中文字幕
And as an aside, there's also the notion of foreign keys

2259
01:37:52,410 --> 01:37:55,260
中文字幕
where, if you really want to lock things down, you can specify that,

2260
01:37:55,260 --> 01:37:58,570
中文字幕
if you ever see in album ID in another table,

2261
01:37:58,570 --> 01:38:00,930
中文字幕
if it's a primary key in the album table,

2262
01:38:00,930 --> 01:38:04,080
中文字幕
by definition, in the other table, it's going to be called a foreign key.

2263
01:38:04,080 --> 01:38:06,120
中文字幕
Because it doesn't really belong there, but it's

2264
01:38:06,120 --> 01:38:08,370
中文字幕
referencing a column elsewhere.

2265
01:38:08,370 --> 01:38:10,510
中文字幕
So there's a lot more technology and vocabulary.

2266
01:38:10,510 --> 01:38:12,060
中文字幕
And you're welcome to dive in deeper.

2267
01:38:12,060 --> 01:38:13,890
中文字幕
And odds are, many of you will for final projects,

2268
01:38:13,890 --> 01:38:16,410
中文字幕
by nature of wanting certain features, among them, even

2269
01:38:16,410 --> 01:38:18,840
中文字幕
the ones we've seen like auto incrementing and not null.

2270
01:38:18,840 --> 01:38:21,000
中文字幕
As an aside too, SQL even has functions.

2271
01:38:21,000 --> 01:38:22,830
中文字幕
And for data scientists and statisticians

2272
01:38:22,830 --> 01:38:26,100
中文字幕
it's super useful to be able to just do math and summaries of data right

2273
01:38:26,100 --> 01:38:29,760
中文字幕
within SQL without ever writing Python code or R or anything else.

2274
01:38:29,760 --> 01:38:32,460
中文字幕
Built into a SQLite and other databases are

2275
01:38:32,460 --> 01:38:34,860
中文字幕
functions like this for average, counting things, getting

2276
01:38:34,860 --> 01:38:36,690
中文字幕
the min, max, sum, and so forth--

2277
01:38:36,690 --> 01:38:39,640
中文字幕
all of that you get for free with a lot of databases.

2278
01:38:39,640 --> 01:38:43,000
中文字幕
All it takes in the context of Python is a line like this.

2279
01:38:43,000 --> 01:38:47,220
中文字幕
But, but, but, but, but there are some problems.

2280
01:38:47,220 --> 01:38:51,030
中文字幕
And let's end by taking a look at two fundamental problems and threats that

2281
01:38:51,030 --> 01:38:52,410
中文字幕
are too often underappreciated.

2282
01:38:52,410 --> 01:38:56,940
中文字幕
And in fact, we have to fix a very serious vulnerability that I introduced

2283
01:38:56,940 --> 01:38:58,740
中文字幕
into my very own code earlier.

2284
01:38:58,740 --> 01:39:01,050
中文字幕
But first, the so-called race condition.

2285
01:39:01,050 --> 01:39:04,650
中文字幕
In survey-- or rather, let's see--

2286
01:39:04,650 --> 01:39:08,910
中文字幕
suppose that we think back at the very start of the semester, most of you

2287
01:39:08,910 --> 01:39:11,820
中文字幕
signed up for a GitHub account for the very first time.

2288
01:39:11,820 --> 01:39:13,470
中文字幕
And you went to github.com/signup.

2289
01:39:13,470 --> 01:39:15,420
中文字幕
For those unfamiliar, GitHub is a website

2290
01:39:15,420 --> 01:39:17,550
中文字幕
where you can save and store programming code that you've written

2291
01:39:17,550 --> 01:39:19,170
中文字幕
and want to collaborate with others on.

2292
01:39:19,170 --> 01:39:20,470
中文字幕
And you chose a username.

2293
01:39:20,470 --> 01:39:24,630
中文字幕
And let me go ahead and try choosing a username like, say, jharvard

2294
01:39:24,630 --> 01:39:25,890
中文字幕
for John Harvard.

2295
01:39:25,890 --> 01:39:28,830
中文字幕
Notice that the website immediately said the user name is taken.

2296
01:39:28,830 --> 01:39:30,120
中文字幕
All right, that's useful.

2297
01:39:30,120 --> 01:39:33,110
中文字幕
And you can probably guess how this is done-- maybe a little JavaScript,

2298
01:39:33,110 --> 01:39:35,580
中文字幕
using AJAX, talking to the server, getting the response,

2299
01:39:35,580 --> 01:39:37,740
中文字幕
changing the HTML or the CSS or whatever.

2300
01:39:37,740 --> 01:39:39,960
中文字幕
Might take some time to wire all that together.

2301
01:39:39,960 --> 01:39:42,070
中文字幕
But that's probably what's going on.

2302
01:39:42,070 --> 01:39:49,140
中文字幕
So let me try a really long random username that is not taken.

2303
01:39:49,140 --> 01:39:51,240
中文字幕
Hey, it's available.

2304
01:39:51,240 --> 01:39:54,290
中文字幕
But probably is not a good thing that I'm streaming this on the internet.

2305
01:39:54,290 --> 01:39:57,290
中文字幕
Because if I wait long enough, I bet someone could, for playful reasons,

2306
01:39:57,290 --> 01:39:59,940
中文字幕
just sign up for this, let alone anyone in this room.

2307
01:39:59,940 --> 01:40:02,650
中文字幕
But you've just told me it's available.

2308
01:40:02,650 --> 01:40:03,150
中文字幕
So good.

2309
01:40:03,150 --> 01:40:03,980
中文字幕
I'm really excited.

2310
01:40:03,980 --> 01:40:04,860
中文字幕
I've got my username.

2311
01:40:04,860 --> 01:40:07,220
中文字幕
Let me go ahead and type in my email address,

2312
01:40:07,220 --> 01:40:11,100
中文字幕
malan@harvard.edu, my password, 12345-- take a few moments there.

2313
01:40:11,100 --> 01:40:12,540
中文字幕
Verify my account and so forth.

2314
01:40:12,540 --> 01:40:13,890
中文字幕
And I click Submit.

2315
01:40:13,890 --> 01:40:18,690
中文字幕
Suppose that I'm told, momentarily, sorry, that username has been taken.

2316
01:40:18,690 --> 01:40:20,700
中文字幕
Could that happen?

2317
01:40:20,700 --> 01:40:23,400
中文字幕
Yeah, if any of you were trying to mess with me right now,

2318
01:40:23,400 --> 01:40:26,430
中文字幕
you would have signed up for that username and beaten me to the punch

2319
01:40:26,430 --> 01:40:29,040
中文字幕
so that when I hit Join, I get an error.

2320
01:40:29,040 --> 01:40:33,000
中文字幕
That's the definition of a race condition where two people or two users

2321
01:40:33,000 --> 01:40:34,380
中文字幕
or two computers or two threads--

2322
01:40:34,380 --> 01:40:37,140
中文字幕
if we really roll back to our discussion of threads in Scratch--

2323
01:40:37,140 --> 01:40:40,950
中文字幕
are trying to do the same thing at roughly the same time.

2324
01:40:40,950 --> 01:40:44,070
中文字幕
And if those two things, threads or humans,

2325
01:40:44,070 --> 01:40:47,040
中文字幕
check the state of a variable, which is a fancy way of saying

2326
01:40:47,040 --> 01:40:50,320
中文字幕
is the username available, they both get back answers.

2327
01:40:50,320 --> 01:40:52,480
中文字幕
But then some number of split seconds later,

2328
01:40:52,480 --> 01:40:56,490
中文字幕
then they make a decision based on that information, there is a window of time,

2329
01:40:56,490 --> 01:40:58,800
中文字幕
either split seconds or even seconds or minutes,

2330
01:40:58,800 --> 01:41:01,330
中文字幕
where the state of that variable could, of course, change.

2331
01:41:01,330 --> 01:41:03,450
中文字幕
So if you two, literally, right now on your laptop,

2332
01:41:03,450 --> 01:41:07,460
中文字幕
typed that very long username, all of us would probably be told, green light,

2333
01:41:07,460 --> 01:41:08,730
中文字幕
it's available.

2334
01:41:08,730 --> 01:41:11,010
中文字幕
But only one of us is actually going to get it.

2335
01:41:11,010 --> 01:41:12,980
中文字幕
And that's because of a race condition.

2336
01:41:12,980 --> 01:41:16,130
中文字幕
Literally, all of us might be racing to sign up for that value.

2337
01:41:16,130 --> 01:41:19,340
中文字幕
And it's when state can change in between things happening.

2338
01:41:19,340 --> 01:41:21,620
中文字幕
This is a bad thing because it makes your data

2339
01:41:21,620 --> 01:41:25,700
中文字幕
vulnerable to changes by someone you don't necessarily intend.

2340
01:41:25,700 --> 01:41:28,070
中文字幕
Or if the database isn't smart, you might

2341
01:41:28,070 --> 01:41:29,790
中文字幕
be able to do especially bad things.

2342
01:41:29,790 --> 01:41:31,340
中文字幕
ATMs are a canonical example of this.

2343
01:41:31,340 --> 01:41:35,840
中文字幕
If you had a malicious adversary trying to log into two bank accounts at once

2344
01:41:35,840 --> 01:41:39,140
中文字幕
or two physical machines at once, either with two cards or two accounts and two

2345
01:41:39,140 --> 01:41:42,080
中文字幕
laptops, you could imagine both of them trying to deduct, like,

2346
01:41:42,080 --> 01:41:45,080
中文字幕
$100 from the same account instantly.

2347
01:41:45,080 --> 01:41:48,200
中文字幕
Because imagine a poorly-implemented bank website.

2348
01:41:48,200 --> 01:41:51,380
中文字幕
It checks the account balance of the user logged in.

2349
01:41:51,380 --> 01:41:52,520
中文字幕
Do you have $100?

2350
01:41:52,520 --> 01:41:56,360
中文字幕
If the answer is yes, maybe both websites are going to say yes,

2351
01:41:56,360 --> 01:41:57,620
中文字幕
you may deduct $100.

2352
01:41:57,620 --> 01:42:00,140
中文字幕
You hit enter and voila, you deduct $100.

2353
01:42:00,140 --> 01:42:03,140
中文字幕
The user gets it somehow because it's transferred to some other account.

2354
01:42:03,140 --> 01:42:06,660
中文字幕
But the bank thinks it only did that once, deducts $100,

2355
01:42:06,660 --> 01:42:10,850
中文字幕
but you've just walked away with $200 because you made a decision based

2356
01:42:10,850 --> 01:42:13,400
中文字幕
on the same answer in two different threads

2357
01:42:13,400 --> 01:42:16,050
中文字幕
or two different programs or two different computers.

2358
01:42:16,050 --> 01:42:18,590
中文字幕
So long story short, this can happen even in the real world.

2359
01:42:18,590 --> 01:42:22,280
中文字幕
An example I was taught by my advisor years ago was this.

2360
01:42:22,280 --> 01:42:25,460
中文字幕
Suppose you and your roommates have a little dorm fridge.

2361
01:42:25,460 --> 01:42:29,190
中文字幕
And you're in the habit, of course, of drinking a lot of milk.

2362
01:42:29,190 --> 01:42:32,090
中文字幕
And so the fridge has run out of milk.

2363
01:42:32,090 --> 01:42:34,280
中文字幕
And you come home, the first roommate after classes.

2364
01:42:34,280 --> 01:42:36,420
中文字幕
And you realize, oh, I really need a drink of milk.

2365
01:42:36,420 --> 01:42:37,590
中文字幕
And so you check the fridge.

2366
01:42:37,590 --> 01:42:38,320
中文字幕
There's nothing there.

2367
01:42:38,320 --> 01:42:41,090
中文字幕
So you close the fridge, and you walk into the square, go to CVS,

2368
01:42:41,090 --> 01:42:43,100
中文字幕
and get in line to buy some milk.

2369
01:42:43,100 --> 01:42:45,230
中文字幕
Meanwhile, your roommate comes home.

2370
01:42:45,230 --> 01:42:47,230
中文字幕
Also, they really need a drink of milk.

2371
01:42:47,230 --> 01:42:49,070
中文字幕
And so they check the state of the variable.

2372
01:42:49,070 --> 01:42:50,510
中文字幕
Argh, no milk.

2373
01:42:50,510 --> 01:42:54,230
中文字幕
Close the fridge, and then walk to like Tommy's Convenience or some other place

2374
01:42:54,230 --> 01:42:56,150
中文字幕
nearby and get in line for some milk.

2375
01:42:56,150 --> 01:42:58,730
中文字幕
You of course, then both get home eventually.

2376
01:42:58,730 --> 01:43:00,140
中文字幕
And what happens now?

2377
01:43:00,140 --> 01:43:01,910
中文字幕
Dammit, now you have twice as much milk.

2378
01:43:01,910 --> 01:43:04,220
中文字幕
And milk goes bad quickly.

2379
01:43:04,220 --> 01:43:06,090
中文字幕
So now this is a problem, a very bad problem.

2380
01:43:06,090 --> 01:43:08,900
中文字幕
You have twice as much milk as you could possibly drink.

2381
01:43:08,900 --> 01:43:11,760
中文字幕
But what's the origin of that problem fundamentally?

2382
01:43:11,760 --> 01:43:13,180
中文字幕
You're out of something.

2383
01:43:13,180 --> 01:43:14,340
中文字幕
You're out of something, but--

2384
01:43:14,340 --> 01:43:15,230
中文字幕
You need it.

2385
01:43:15,230 --> 01:43:16,070
中文字幕
--you need it.

2386
01:43:16,070 --> 01:43:17,700
中文字幕
But why did I end up with two?

2387
01:43:17,700 --> 01:43:18,820
中文字幕
There's no flag.

2388
01:43:18,820 --> 01:43:20,450
中文字幕
There's no flag, right?

2389
01:43:20,450 --> 01:43:21,470
中文字幕
There's no indication.

2390
01:43:21,470 --> 01:43:22,640
中文字幕
There's no sharing of state.

2391
01:43:22,640 --> 01:43:24,500
中文字幕
You both inspected the value of the variable,

2392
01:43:24,500 --> 01:43:26,000
中文字幕
made a decision independently on it.

2393
01:43:26,000 --> 01:43:28,850
中文字幕
But the state of that variable changed on one of you.

2394
01:43:28,850 --> 01:43:31,760
中文字幕
Because when one of you came home, the later person, damn, like,

2395
01:43:31,760 --> 01:43:33,710
中文字幕
the milk has already been refilled.

2396
01:43:33,710 --> 01:43:34,880
中文字幕
So how do you solve this?

2397
01:43:34,880 --> 01:43:37,220
中文字幕
In the real world, how could you avoid this problem?

2398
01:43:37,220 --> 01:43:39,310
中文字幕
You just, one, never do errands for your roommate.

2399
01:43:39,310 --> 01:43:42,780
中文字幕
The magnet you put on the refrigerator says get this.

2400
01:43:42,780 --> 01:43:43,870
中文字幕
Mag-- yes.

2401
01:43:43,870 --> 01:43:45,610
中文字幕
A shopping list, right-- gone for milk--

2402
01:43:45,610 --> 01:43:46,490
中文字幕
Arrested Development.

2403
01:43:46,490 --> 01:43:47,990
中文字幕
Always leave a note, right?

2404
01:43:47,990 --> 01:43:50,240
中文字幕
You could convey that information.

2405
01:43:50,240 --> 01:43:53,090
中文字幕
You could more dramatically lock the refrigerator, right?

2406
01:43:53,090 --> 01:43:55,760
中文字幕
Padlock the thing, and so your roommate can't

2407
01:43:55,760 --> 01:43:59,540
中文字幕
inspect the state of the refrigerator while you are gone, therefore,

2408
01:43:59,540 --> 01:44:01,040
中文字幕
not making us vulnerable to this.

2409
01:44:01,040 --> 01:44:02,910
中文字幕
And I use the word lock deliberately because,

2410
01:44:02,910 --> 01:44:04,670
中文字幕
in databases, that's how they solve this.

2411
01:44:04,670 --> 01:44:07,070
中文字幕
There is a feature in databases called locks.

2412
01:44:07,070 --> 01:44:09,590
中文字幕
Or fancier versions of this are called transactions,

2413
01:44:09,590 --> 01:44:12,540
中文字幕
whereby, you can guarantee something called atomicity,

2414
01:44:12,540 --> 01:44:16,910
中文字幕
where atomicity means you can do multiple things back to back to back

2415
01:44:16,910 --> 01:44:18,470
中文字幕
without getting interrupted.

2416
01:44:18,470 --> 01:44:22,580
中文字幕
So in the case of a bank, it is possible, with SQL, using slightly

2417
01:44:22,580 --> 01:44:25,800
中文字幕
fancier syntax that we won't dive into today to solve this problem by saying,

2418
01:44:25,800 --> 01:44:26,390
中文字幕
you know what?

2419
01:44:26,390 --> 01:44:28,310
中文字幕
Begin the following transaction.

2420
01:44:28,310 --> 01:44:31,550
中文字幕
Check the state of the bank account, deduct this amount of money,

2421
01:44:31,550 --> 01:44:33,080
中文字幕
and now commit the results.

2422
01:44:33,080 --> 01:44:36,380
中文字幕
And while I'm doing that, lock everyone else out.

2423
01:44:36,380 --> 01:44:39,650
中文字幕
Don't let any other customer or any other user

2424
01:44:39,650 --> 01:44:43,700
中文字幕
do exactly that information that touches the same data until I am done.

2425
01:44:43,700 --> 01:44:45,720
中文字幕
Long story short-- you pay a price, perhaps.

2426
01:44:45,720 --> 01:44:48,560
中文字幕
You're literally preventing your roommate from accessing the fridge,

2427
01:44:48,560 --> 01:44:49,390
中文字幕
and that's annoying.

2428
01:44:49,390 --> 01:44:52,010
中文字幕
Or you're preventing other customers from doing transactions.

2429
01:44:52,010 --> 01:44:55,250
中文字幕
So hopefully the computer is fast at this, and your fast at shopping.

2430
01:44:55,250 --> 01:44:58,370
中文字幕
But you've at least ensured that you have atomicity.

2431
01:44:58,370 --> 01:45:01,970
中文字幕
No operation can get inserted into your sequence of operations

2432
01:45:01,970 --> 01:45:05,820
中文字幕
as by your roommate or some other computer or thread.

2433
01:45:05,820 --> 01:45:08,810
中文字幕
So that's a problem with databases that we're only going to skirt over.

2434
01:45:08,810 --> 01:45:11,150
中文字幕
And GitHub might solve this, how?

2435
01:45:11,150 --> 01:45:12,740
中文字幕
Well, by just not caring, potentially.

2436
01:45:12,740 --> 01:45:14,630
中文字幕
I don't know what's going to happen if multiple of us try.

2437
01:45:14,630 --> 01:45:18,440
中文字幕
I'm guessing they will just give n minus 1 of us an error message saying, sorry,

2438
01:45:18,440 --> 01:45:20,010
中文字幕
that username is no longer available.

2439
01:45:20,010 --> 01:45:20,720
中文字幕
Think about this.

2440
01:45:20,720 --> 01:45:22,220
中文字幕
If you've ever bought airline tickets, this

2441
01:45:22,220 --> 01:45:23,790
中文字幕
is a solved problem in that industry.

2442
01:45:23,790 --> 01:45:25,040
中文字幕
That would be really annoying.

2443
01:45:25,040 --> 01:45:27,620
中文字幕
If you just spent an hour of stressful price-hunting

2444
01:45:27,620 --> 01:45:29,930
中文字幕
for a good airplane ticket, you start checking out

2445
01:45:29,930 --> 01:45:31,520
中文字幕
after adding it to your shopping cart.

2446
01:45:31,520 --> 01:45:34,560
中文字幕
And five minutes later, after your name and email address and credit card

2447
01:45:34,560 --> 01:45:36,140
中文字幕
number, the ticket is gone.

2448
01:45:36,140 --> 01:45:37,400
中文字幕
So what do airlines do?

2449
01:45:37,400 --> 01:45:39,270
中文字幕
They often give you a five-minute window.

2450
01:45:39,270 --> 01:45:41,390
中文字幕
And some of the fancier websites show you the clock saying,

2451
01:45:41,390 --> 01:45:43,340
中文字幕
we guarantee this for the next five minutes.

2452
01:45:43,340 --> 01:45:46,970
中文字幕
Hotels might do this too where they locked the refrigerator for you

2453
01:45:46,970 --> 01:45:49,280
中文字幕
by somehow altering the database to say, mm-mm.

2454
01:45:49,280 --> 01:45:52,820
中文字幕
No one else can buy this ticket or this room for the next five minutes,

2455
01:45:52,820 --> 01:45:54,890
中文字幕
much like the note or the padlock.

2456
01:45:54,890 --> 01:45:57,980
中文字幕
So those kinds of things are all around us.

2457
01:45:57,980 --> 01:46:02,870
中文字幕
But let's look at one final example that's the worst threat of all is this.

2458
01:46:02,870 --> 01:46:06,320
中文字幕
Previously, I allowed myself to search by name.

2459
01:46:06,320 --> 01:46:10,160
中文字幕
So q equals Brian or q equals David or Veronica or the like.

2460
01:46:10,160 --> 01:46:11,830
中文字幕
And what did I do with that information?

2461
01:46:11,830 --> 01:46:14,280
中文字幕
Well, if we go back into the IDE and actually look

2462
01:46:14,280 --> 01:46:20,250
中文字幕
at that file in application.py, I simply formatted it using an F string

2463
01:46:20,250 --> 01:46:22,630
中文字幕
inside of this SQL string.

2464
01:46:22,630 --> 01:46:25,680
中文字幕
But what if my users were a little bit malicious?

2465
01:46:25,680 --> 01:46:28,660
中文字幕
And suppose that someone doesn't want to just search for Brian.

2466
01:46:28,660 --> 01:46:29,410
中文字幕
But you know what?

2467
01:46:29,410 --> 01:46:37,350
中文字幕
Suppose they do something like, my query is DELETE FROM registrants WHERE--

2468
01:46:37,350 --> 01:46:40,560
中文字幕
sorry Brian-- NAME equals Brian--

2469
01:46:40,560 --> 01:46:42,130
中文字幕
something like this.

2470
01:46:42,130 --> 01:46:46,380
中文字幕
Now, this is not valid at the moment, because this string,

2471
01:46:46,380 --> 01:46:48,650
中文字幕
while I'm certainly allowed to type it in,

2472
01:46:48,650 --> 01:46:53,070
中文字幕
is going to get plugged into my code, but in the wrong place logically.

2473
01:46:53,070 --> 01:46:56,160
中文字幕
Like, I'm going to look for someone's name called "DELETE FROM registrants

2474
01:46:56,160 --> 01:46:58,320
中文字幕
WHERE name equals Brian," which is just nonsensical.

2475
01:46:58,320 --> 01:47:00,240
中文字幕
It will return 0 results.

2476
01:47:00,240 --> 01:47:04,210
中文字幕
But what if I do something like this where I say,

2477
01:47:04,210 --> 01:47:08,790
中文字幕
Brian or DELETE from registrants where I finish

2478
01:47:08,790 --> 01:47:12,660
中文字幕
the thought that the programmer had and then start my own new thought.

2479
01:47:12,660 --> 01:47:16,020
中文字幕
Or another way of doing this is to use special syntax semicolon, something

2480
01:47:16,020 --> 01:47:16,890
中文字幕
like this.

2481
01:47:16,890 --> 01:47:21,300
中文字幕
Long story short, I could contrive a human malicious input that

2482
01:47:21,300 --> 01:47:24,540
中文字幕
finishes the programmer's thought and returns zero rows, but by the way,

2483
01:47:24,540 --> 01:47:28,710
中文字幕
also sneaks one additional rogue query into the database.

2484
01:47:28,710 --> 01:47:31,410
中文字幕
This is what's known as a SQL injection attack.

2485
01:47:31,410 --> 01:47:37,350
中文字幕
And if you naively and very, very, very badly and incorrectly write code like I

2486
01:47:37,350 --> 01:47:39,630
中文字幕
did-- don't ever do this--

2487
01:47:39,630 --> 01:47:42,180
中文字幕
you will be vulnerable to exactly this attack

2488
01:47:42,180 --> 01:47:46,640
中文字幕
because you are blindly plugging in the user's input to a string

2489
01:47:46,640 --> 01:47:48,310
中文字幕
that you are then passing to a database.

2490
01:47:48,310 --> 01:47:52,410
中文字幕
This is a fundamental flaw in lots of applications, lots of languages

2491
01:47:52,410 --> 01:47:54,960
中文字幕
where you have to distrust your users.

2492
01:47:54,960 --> 01:47:57,300
中文字幕
It doesn't matter if it's for just students on campus

2493
01:47:57,300 --> 01:47:58,880
中文字幕
or it's just for you and your friends.

2494
01:47:58,880 --> 01:48:01,410
中文字幕
Never ever, ever trust users' input because either someone's

2495
01:48:01,410 --> 01:48:03,960
中文字幕
going to mistype something and something is going to go awry,

2496
01:48:03,960 --> 01:48:06,180
中文字幕
or you're going to have a bad apple trying

2497
01:48:06,180 --> 01:48:08,310
中文字幕
to hack into your website or your application

2498
01:48:08,310 --> 01:48:10,230
中文字幕
by trying these kinds of commands.

2499
01:48:10,230 --> 01:48:13,020
中文字幕
And you have to always write code defensively.

2500
01:48:13,020 --> 01:48:13,980
中文字幕
So how to do this?

2501
01:48:13,980 --> 01:48:15,330
中文字幕
There are a bunch of ways.

2502
01:48:15,330 --> 01:48:17,730
中文字幕
But it turns out that, what's dangerous about something

2503
01:48:17,730 --> 01:48:21,370
中文字幕
like I just typed in is that it's the semicolon, for instance,

2504
01:48:21,370 --> 01:48:24,040
中文字幕
and that's the quote marks over "elsewhere."

2505
01:48:24,040 --> 01:48:28,480
中文字幕
So the safest thing to do is, no matter what the user types in, escape things.

2506
01:48:28,480 --> 01:48:29,610
中文字幕
You can use special syntax.

2507
01:48:29,610 --> 01:48:32,940
中文字幕
We saw this in C-- generally, putting a backslash in front of something means,

2508
01:48:32,940 --> 01:48:35,280
中文字幕
don't let it have its default behavior.

2509
01:48:35,280 --> 01:48:36,780
中文字幕
Instead, treat it specially.

2510
01:48:36,780 --> 01:48:38,640
中文字幕
So you could use special code in Python that

2511
01:48:38,640 --> 01:48:41,640
中文字幕
just says remove any bad characters, or replace things.

2512
01:48:41,640 --> 01:48:44,610
中文字幕
Frankly, you've probably been to a website where you've been told,

2513
01:48:44,610 --> 01:48:47,160
中文字幕
sorry, you can't use that character in your password.

2514
01:48:47,160 --> 01:48:49,260
中文字幕
Or sorry, you can't use that in your username.

2515
01:48:49,260 --> 01:48:49,980
中文字幕
That's just dumb.

2516
01:48:49,980 --> 01:48:51,840
中文字幕
Like, that is the lazy approach to this.

2517
01:48:51,840 --> 01:48:54,060
中文字幕
There is no reason to prevent users from typing

2518
01:48:54,060 --> 01:48:57,750
中文字幕
any characters into their keyboard for their password and maybe even

2519
01:48:57,750 --> 01:48:58,620
中文字幕
their username.

2520
01:48:58,620 --> 01:49:01,200
中文字幕
That's kind of a lazy way of defending against this by saying,

2521
01:49:01,200 --> 01:49:03,480
中文字幕
mm-mm, I don't trust any percent sign, any semicolons,

2522
01:49:03,480 --> 01:49:05,370
中文字幕
any dashes, any apostrophes.

2523
01:49:05,370 --> 01:49:07,170
中文字幕
Rather, just escape things.

2524
01:49:07,170 --> 01:49:08,880
中文字幕
But it's silly for all of us in this room

2525
01:49:08,880 --> 01:49:13,320
中文字幕
to write our own code for scaping users' input or scrubbing it, as it's called,

2526
01:49:13,320 --> 01:49:16,200
中文字幕
or sanitizing it, as it's called-- same things.

2527
01:49:16,200 --> 01:49:17,850
中文字幕
Why don't we just use a library?

2528
01:49:17,850 --> 01:49:19,560
中文字幕
Now, there are many libraries out there.

2529
01:49:19,560 --> 01:49:21,600
中文字幕
The one that we're using at the moment is CS50's.

2530
01:49:21,600 --> 01:49:24,570
中文字幕
And the EXECUTE function does this for us.

2531
01:49:24,570 --> 01:49:28,110
中文字幕
Instead of using F strings, which you should not use like this.

2532
01:49:28,110 --> 01:49:29,970
中文字幕
You should instead do this.

2533
01:49:29,970 --> 01:49:33,060
中文字幕
If you want to plug in a placeholder value to a SQL query,

2534
01:49:33,060 --> 01:49:35,970
中文字幕
you literally use a standard convention, that we have adopted too,

2535
01:49:35,970 --> 01:49:39,220
中文字幕
where you just put in a variable's name, but with a colon in front of it.

2536
01:49:39,220 --> 01:49:40,180
中文字幕
And it can be anything.

2537
01:49:40,180 --> 01:49:40,710
中文字幕
It can be q.

2538
01:49:40,710 --> 01:49:41,310
中文字幕
It can be x.

2539
01:49:41,310 --> 01:49:42,210
中文字幕
It doesn't matter.

2540
01:49:42,210 --> 01:49:44,310
中文字幕
But you want to just plug in some value there.

2541
01:49:44,310 --> 01:49:46,560
中文字幕
So I'm going to call it name, by convention.

2542
01:49:46,560 --> 01:49:49,440
中文字幕
Then you close your quote and finish your thought.

2543
01:49:49,440 --> 01:49:55,110
中文字幕
And then you go ahead and pass in the actual value, name equals q.

2544
01:49:55,110 --> 01:49:58,590
中文字幕
And now you have constructed, dynamically,

2545
01:49:58,590 --> 01:50:01,590
中文字幕
a SQL string with a place holder that is not

2546
01:50:01,590 --> 01:50:03,870
中文字幕
Python's own curly brace placeholder.

2547
01:50:03,870 --> 01:50:07,800
中文字幕
This is a special SQL convention where you say plug in value here.

2548
01:50:07,800 --> 01:50:08,600
中文字幕
What value?

2549
01:50:08,600 --> 01:50:13,680
中文字幕
We'll plug in this names value, q, whatever the human has typed in.

2550
01:50:13,680 --> 01:50:16,350
中文字幕
And what are execute function will do for you

2551
01:50:16,350 --> 01:50:19,110
中文字幕
is all of the fancy backslashing and all of the escaping

2552
01:50:19,110 --> 01:50:21,430
中文字幕
and will protect you from the user's data.

2553
01:50:21,430 --> 01:50:22,890
中文字幕
And this is how truly simple it is.

2554
01:50:22,890 --> 01:50:24,570
中文字幕
It doesn't have to be CS50's library.

2555
01:50:24,570 --> 01:50:28,920
中文字幕
This is ever so common in all languages, but too few people know about it

2556
01:50:28,920 --> 01:50:29,670
中文字幕
and use it.

2557
01:50:29,670 --> 01:50:32,340
中文字幕
And so half the time you read about some database getting hacked

2558
01:50:32,340 --> 01:50:34,350
中文字幕
or your data getting stolen, it is because

2559
01:50:34,350 --> 01:50:37,170
中文字幕
of a stupid oversight like that.

2560
01:50:37,170 --> 01:50:40,020
中文字幕
So just use libraries and escape users' input.

2561
01:50:40,020 --> 01:50:41,610
中文字幕
We can see this now more concretely.

2562
01:50:41,610 --> 01:50:43,980
中文字幕
All of the undergrads in the room have surely

2563
01:50:43,980 --> 01:50:46,680
中文字幕
logged into, either Yale's website or Harvard's website,

2564
01:50:46,680 --> 01:50:48,600
中文字幕
which looks a little something like this here.

2565
01:50:48,600 --> 01:50:50,470
中文字幕
You're prompted for your login name and your password,

2566
01:50:50,470 --> 01:50:52,050
中文字幕
or your Harvard key or the like.

2567
01:50:52,050 --> 01:50:54,750
中文字幕
Well, how does this take effect in real terms?

2568
01:50:54,750 --> 01:50:56,520
中文字幕
If I were to type in my email address--

2569
01:50:56,520 --> 01:50:59,920
中文字幕
but then weird syntax like this-- let's look at an example.

2570
01:50:59,920 --> 01:51:03,390
中文字幕
Quote "or" quote unquote "1" equals quote "1."

2571
01:51:03,390 --> 01:51:04,800
中文字幕
Notice it's not balanced.

2572
01:51:04,800 --> 01:51:07,400
中文字幕
It's missing a quote over here, missing a quote over here.

2573
01:51:07,400 --> 01:51:10,920
中文字幕
Because the presumption is that maybe Harvard is vulnerable to this.

2574
01:51:10,920 --> 01:51:12,240
中文字幕
I don't think they are.

2575
01:51:12,240 --> 01:51:15,200
中文字幕
But suppose that the code running Harvard key

2576
01:51:15,200 --> 01:51:18,660
中文字幕
and Harvard's login page looks a little something like this.

2577
01:51:18,660 --> 01:51:19,440
中文字幕
This is bad.

2578
01:51:19,440 --> 01:51:22,160
中文字幕
This is dangerous because they're just using f strings or format

2579
01:51:22,160 --> 01:51:24,820
中文字幕
strings, which are just going to blindly plug anything in there.

2580
01:51:28,140 --> 01:51:31,190
中文字幕
And so if you let the human type in something cryptic like that,

2581
01:51:31,190 --> 01:51:32,650
中文字幕
notice what has happened logically.

2582
01:51:32,650 --> 01:51:36,470
中文字幕
Where username equals me at example your email provider.com and password

2583
01:51:36,470 --> 01:51:41,330
中文字幕
equals quote unquote, so nothing, or 1 equals 1.

2584
01:51:41,330 --> 01:51:43,070
中文字幕
And why 1 equals 1?

2585
01:51:43,070 --> 01:51:46,460
中文字幕
If I go back, notice that there's a quote here and a quote here.

2586
01:51:46,460 --> 01:51:49,910
中文字幕
And the reason that I didn't finish my second quote here or my second quote

2587
01:51:49,910 --> 01:51:52,670
中文字幕
here is because I'm assuming, as a bad guy,

2588
01:51:52,670 --> 01:51:55,550
中文字幕
I think Harvard is just going to blindly plug my input

2589
01:51:55,550 --> 01:51:57,810
中文字幕
into a single quotes of their own.

2590
01:51:57,810 --> 01:51:59,990
中文字幕
Therefore, I can finish their thought nonsensically.

2591
01:51:59,990 --> 01:52:01,520
中文字幕
But notice, logically, what happens.

2592
01:52:01,520 --> 01:52:05,480
中文字幕
Select all users from the database where the user name is me at example email

2593
01:52:05,480 --> 01:52:07,340
中文字幕
provider and the password is nothing.

2594
01:52:07,340 --> 01:52:09,890
中文字幕
Or 1 equals 1.

2595
01:52:09,890 --> 01:52:12,170
中文字幕
Well, when does 1 equal 1?

2596
01:52:12,170 --> 01:52:13,680
中文字幕
Like, always.

2597
01:52:13,680 --> 01:52:16,310
中文字幕
So this will always return users from the database,

2598
01:52:16,310 --> 01:52:20,840
中文字幕
and presumably, therefore, let me log in as one of those users--

2599
01:52:20,840 --> 01:52:23,480
中文字幕
so incredibly simple to defend against this.

2600
01:52:23,480 --> 01:52:28,130
中文字幕
Just use placeholder syntax and distrust and sanitize users' input.

2601
01:52:28,130 --> 01:52:31,670
中文字幕
The syntax in SQL and the CS50 library is quite simply with that colon.

2602
01:52:31,670 --> 01:52:34,220
中文字幕
But in other libraries, it might be quite the same.

2603
01:52:34,220 --> 01:52:37,130
中文字幕
So now you are all, families and students alike,

2604
01:52:37,130 --> 01:52:39,800
中文字幕
inaugurated into the small class of folks

2605
01:52:39,800 --> 01:52:42,060
中文字幕
in the world who understand particularly geeky humor.

2606
01:52:42,060 --> 01:52:45,110
中文字幕
You might notice this meme that's gone around the internet for many years

2607
01:52:45,110 --> 01:52:48,710
中文字幕
now where someone either maliciously or humorously

2608
01:52:48,710 --> 01:52:53,770
中文字幕
decided to paint this over their license platelets.

2609
01:52:53,770 --> 01:52:55,350
中文字幕
Let's enhance.

2610
01:52:55,350 --> 01:52:57,800
中文字幕
Why would someone do this?

2611
01:53:00,450 --> 01:53:01,240
中文字幕
Scanners.

2612
01:53:01,240 --> 01:53:02,750
中文字幕
Scanners, yeah.

2613
01:53:02,750 --> 01:53:04,960
中文字幕
Tollbooths are going away, at least in the US.

2614
01:53:04,960 --> 01:53:08,300
中文字幕
And they instead have cameras or readers that are scanning the front of your car

2615
01:53:08,300 --> 01:53:12,110
中文字幕
and trying to optically do OCR, Optical Character Recognition,

2616
01:53:12,110 --> 01:53:13,340
中文字幕
on your license plate.

2617
01:53:13,340 --> 01:53:15,910
中文字幕
And the presumption here is, maybe in some municipality,

2618
01:53:15,910 --> 01:53:18,410
中文字幕
there's some badly written code where they just blindly plug

2619
01:53:18,410 --> 01:53:20,910
中文字幕
your license plate into their code.

2620
01:53:20,910 --> 01:53:23,970
中文字幕
And hopefully you finish the thought where ZU 0666--

2621
01:53:23,970 --> 01:53:26,060
中文字幕
whatever that is, it's part of the license plate--

2622
01:53:26,060 --> 01:53:30,420
中文字幕
but "semicolon drop database table dot dot dot."

2623
01:53:30,420 --> 01:53:33,050
中文字幕
And we didn't even look at that because DROP is pretty extreme.

2624
01:53:33,050 --> 01:53:35,870
中文字幕
It literally deletes a database itself.

2625
01:53:35,870 --> 01:53:41,960
中文字幕
But this is a nice way of getting off the hook from a total price.

2626
01:53:41,960 --> 01:53:45,470
中文字幕
And most canonical perhaps, XKCD is a very popular cartoon strip.

2627
01:53:45,470 --> 01:53:47,300
中文字幕
It's particularly geek-oriented.

2628
01:53:47,300 --> 01:53:53,050
中文字幕
And you'll perhaps understand this joke now as well among CS circles.

2629
01:54:04,510 --> 01:54:06,650
中文字幕
I can hear the laughter making its way through.

2630
01:54:06,650 --> 01:54:08,780
中文字幕
So from here on out, if you take nothing else away,

2631
01:54:08,780 --> 01:54:11,840
中文字幕
remember little Bobby Tables with pset.

2632
01:54:11,840 --> 01:54:14,110
中文字幕
Our final, will you actually implement CS50 Finance

2633
01:54:14,110 --> 01:54:15,320
中文字幕
and coalesce all these ideas.

2634
01:54:15,320 --> 01:54:17,520
中文字幕
Thank you so much to all of our families for joining.

2635
01:54:17,520 --> 01:54:18,830
中文字幕
And we will see you next time.

